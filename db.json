{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/sidebar.js","path":"js/sidebar.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/addtoany.js","path":"js/third-party/addtoany.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/wavedrom.js","path":"js/third-party/tags/wavedrom.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/404/index.md","hash":"19bab9c46d9529e3aa2bbbee96bd3e2ea13835af","modified":1758181627989},{"_id":"source/_drafts/Untitled.md","hash":"185f673e141beea03daafe4239d080ba80c50eff","modified":1758181627989},{"_id":"source/_data/footer.njk","hash":"f9ce84f0ffa764d6391f3cce42fd16147b81d2f3","modified":1758181627989},{"_id":"source/_data/post-meta.njk","hash":"bf5f2413dbb51f0234c5b982d9e927f06687ed80","modified":1758181627989},{"_id":"source/_data/head.njk","hash":"b0e0a3e47bf78d159dc0968ac22e0e60b2363c80","modified":1758181627989},{"_id":"source/categories/index.md","hash":"e417adfdc6b1ffa40f49b034f07f14fb92323b47","modified":1758181628005},{"_id":"source/about/index.md","hash":"053e770804304ff49a3b4e7efe91c79b358ae9e0","modified":1758181628005},{"_id":"source/js/notice.js","hash":"c370780a3c85504eabc5a6e1c53daf9511a376b2","modified":1758181628005},{"_id":"source/js/pen.js","hash":"a54fea70fb13aad02340c99141a7b6f559d906b8","modified":1758181628005},{"_id":"source/_posts/hello-world.md","hash":"0d9d1540369cb5646501a457bfd886e5d86bc5f1","modified":1758181627989},{"_id":"source/_posts/二分图.md","hash":"34e3eba809e8800b682443bfb67307ae06980e0a","modified":1758181627989},{"_id":"source/_posts/区间dp.md","hash":"b512ddfec1db249040f21dbf1030c870d5afd2bf","modified":1758181627989},{"_id":"source/_posts/区间dp（三）.md","hash":"b432e2e93729eece8f7cfbfce474fe75fe2db6e7","modified":1758181627989},{"_id":"source/js/anchor.min.js","hash":"ca2a070a1ecd792dc8f79340e5ffa10bf342cfa1","modified":1758181628005},{"_id":"source/_posts/区间dp（二）.md","hash":"0f3b15e6013569235548607dc57be0eb12025e79","modified":1758181627989},{"_id":"source/_posts/平衡树.md","hash":"dc4de94f77adb809517a5bbd3a0ec211431a24d0","modified":1758181627989},{"_id":"source/_posts/状压DP.md","hash":"3dd0204a7592816d833dfa34495ab95047db16e4","modified":1758181627989},{"_id":"source/_posts/网络流之最小割问题.md","hash":"6bf072e4b7777ce8654e3f036ffbe5e6952e8335","modified":1758181628005},{"_id":"source/style/style.css","hash":"d74e3e310f25ca2ebff1afe4dd1afde74b627fba","modified":1758181628005},{"_id":"source/_posts/连通性问题.md","hash":"3c1a0f25071b6a920ccec32d5c0a950372aa0176","modified":1758181628005},{"_id":"source/_posts/状压DP（二）.md","hash":"a51ee950b736a4aa280b6e38392d3b36f05e0fda","modified":1758181628005},{"_id":"source/tags/index.md","hash":"1949b81360e63b3d9e6cc6d8ef4d193bef317448","modified":1758181628005},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"8cfb03967dd4cbaf3b825271ffce0039aa3fc22a","modified":1758181620375},{"_id":"node_modules/hexo-theme-next/README.md","hash":"eca8f5525e08a04753989f1ad0fac5572db58f43","modified":1758181620375},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"ba62e658188a2844916184b77724ebfb463364b0","modified":1758181620375},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"c6de1db4809583ec8cd86db89f9fa29506061e36","modified":1758181620375},{"_id":"node_modules/hexo-theme-next/package.json","hash":"afbaa8ed02dd2e2022bd6c40d0b669dc6798e012","modified":1758181620505},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1758181620375},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"579014d47f45b27fd1618b9709f0efe9585c7449","modified":1758181620375},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"d1cd5a8e83d3bbdb50f902d2b487813da95ddfd3","modified":1758181620375},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b1c96465b3bc139bf5ba6200974b66581d8ff85a","modified":1758181620390},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"c77fc13e0431e71eeb0f767a0a436284fc81df90","modified":1758181620390},{"_id":"node_modules/hexo-theme-next/languages/bn.yml","hash":"30ffd43588ddf2cd39432d964087242e1c3e5407","modified":1758181620390},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"5101612f7cac38884206d28319532f1aab32fbe6","modified":1758181620390},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"5ca2c0b3c95dd87485f2d2b3477f88810ad1a63b","modified":1758181620390},{"_id":"node_modules/hexo-theme-next/languages/eo.yml","hash":"7bd0124c2d1dcdbfde350fce335e130556ebcee8","modified":1758181620390},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"31c2a47d14cd5b804cae0c0b44d43bece069d3aa","modified":1758181620390},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"cc6ef3144b954daa29ce7d42f08191eafe052fab","modified":1758181620390},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"3a7469446f77e5d1a12eee828ebc49ecb43b6c35","modified":1758181620390},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"bd2c30def05a37c66653900ca07952d52a142961","modified":1758181620390},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"4969c4f17d88003135218de72ddf0bf8d894dc07","modified":1758181620390},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"e660ec12b9eade103492aba7aa9b23ef06d353a9","modified":1758181620390},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"04927e331652ee13f9c8a110fe12d7f936a6b0e6","modified":1758181620390},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"4575f93c4ee4383bdfaca01ad6ffff5664cbbbae","modified":1758181620406},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"ff9aa6a6549d07b7dc667094f34a06945e2c21b4","modified":1758181620407},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"2c86b3235de9539df2119e52e913d847ecf782c0","modified":1758181620408},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"07f98d6ca99bceef35254c60fc0e4401ff608557","modified":1758181620408},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"d726265bc5cf8bd4fb64f85b2d07b3326439bb00","modified":1758181620408},{"_id":"node_modules/hexo-theme-next/languages/th.yml","hash":"dc434da945d52dc7a8d26acc80b23e6922712f89","modified":1758181620408},{"_id":"node_modules/hexo-theme-next/languages/tk.yml","hash":"7b9115e0520dc81a95a7c8e4f56a01fc84f74017","modified":1758181620408},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"822ec400a0a2bb2245abf31e9ed4f3af77b2814e","modified":1758181620408},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"10a2f2e7183410d1d10fa937e3e0198b46bf4930","modified":1758181620408},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"8344cb90ee92a21a398faff3317c025a43446db5","modified":1758181620408},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"bf26fa63ca859e4726cbb53b57cfc849f7f7bab6","modified":1758181620408},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"aa491dba8f746e626c273a920effedf7d0b32170","modified":1758181620489},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"82f541452cae76a94ee15cb8d8a888f44260a0fd","modified":1758181620489},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"664ebfa09503d29d6f33a5ffadaa16989785e0fe","modified":1758181620408},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"c06c95121b3e5bd5abe01848073fbe7f9d6dcda9","modified":1758181620408},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"293009343786f9b460412b7032e694755e5edc8d","modified":1758181620408},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"d24238eea91a347050a663c7a7de8cebaab4c595","modified":1758181620489},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"fa52c3049871e879980cb6abccdea3792ca4ce70","modified":1758181620489},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"6767de9702a07a2a4e16a8a6bc9c5919536c1e3f","modified":1758181620489},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"b6c017d30d08ddd30d66e9c6f3a71aa65d214eac","modified":1758181620489},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"831dde6526f96e27481b24c981561cedb1d4297b","modified":1758181620375},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"e077bebf4fb89b159b840b30f0230b95ff7db8a5","modified":1758181620375},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"a09ceb82b45dd8b7da76c227f3d0bb7eebe7d5d1","modified":1758181620375},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"767a98e4cb22d171cc34047e6746529038dd31bb","modified":1758181620375},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"a60b386c7889f25f811182cae76e6474cb3254d1","modified":1758181620408},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"c39170b22c4c9cb11d935c301a90ad8c18f3e0e8","modified":1758181620408},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"b9fc0a6b02f0380de939d1ea2a7c7d2e6be9f462","modified":1758181620424},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"60f4620dd479da6d86d1d493440e9e2a28b6e132","modified":1758181620424},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"cc51596980560ab60626da76260b7f5e83df8a33","modified":1758181620424},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"537026fc120adeef9148c98ebf074207e3810538","modified":1758181620424},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"c55167bc0dbe7e104d4f4d782e98fcabc7e07a35","modified":1758181620442},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"bb5d32170b469dc018ceaa10a5b7cb892c9b85a4","modified":1758181620442},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"6379fb7776ba2a93eb0220e5fa2adee1e3c5d9b0","modified":1758181620442},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"71691096a1a034f6af68403730a1589c0d7fabaa","modified":1758181620458},{"_id":"node_modules/hexo-theme-next/layout/_third-party/addtoany.njk","hash":"9ef81adb0c35ebdb4499602155e87611aee0762a","modified":1758181620458},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"9bab629e2971b029545511b48f397445858ac7f0","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/layout/_third-party/fancybox.njk","hash":"53ad3c31762b74e5d29787b37d5e494cc4fded9b","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/layout/_third-party/pace.njk","hash":"13b2a77b4858a127f458ea092b6f713b052befac","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"73bc15a9c3c5c239ab90efa19a1e721f41f3cb93","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"8ae618d4436dab49928c2bebc0837e5310dbe7de","modified":1758181620505},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"0c9a1fe9906672724dbf274154a37bac1915ca2c","modified":1758181620520},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"87f3bff03fa9fd96cf0787a6442464a7ff57f76b","modified":1758181620520},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"0f6b9b0eb41f6319e75ff86f9254cf1a9d3333b8","modified":1758181620520},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"e6cf4c94fc2291215a3345134ddbbc74d5091b00","modified":1758181620520},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"b69e324ae9750cb35a4609c41b73d52177cc94e9","modified":1758181620520},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"dd76be4927a77c27292a4790bcc659c10518a219","modified":1758181620520},{"_id":"node_modules/hexo-theme-next/scripts/helpers/navigation.js","hash":"82f6e81bacf23d10cac71b09cff8708e47891ef3","modified":1758181620520},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"14b6795d4213619e01f7281a0b0eba8fa6aa74fb","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-paginator.js","hash":"2e8dcc12a52517bb4e00ea611720bcd298624112","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"ceff5e76564a5d6ed3e0222bccf581e106d80f3c","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"12814eb1845830204e3a398eb93a2c15e0ff8d94","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"86c71c73a63744efbbbb367612871fede0d69529","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"8e912c715702addaf0cefe63e580e45b97ae8c3f","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"b4d12e6fe29089be0f43bafc9eea736602cd16bf","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"652140814527db74bcde9110142824dc727be889","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"1a680bb01e14152905efe3ef624621dd74cf27c3","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"c18b0e619a779ed40be7f014db92af18f45fbd5c","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"3f358bb78c5c6fdf45de287f3ead553e3a6a93c2","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"b139224ff2cc668f4d95bde184934833e05b29df","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"a12fd53e421400836a3722ae69130969558d6ac0","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"317ba4611020cc840854386dde098dbbe452777e","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"e0ed5fe1bc9d2957952a1aacdf3252d6ef3f9743","modified":1758181620536},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"f6ad3f52779f0636251238d3cbdc5b6f91cc5aba","modified":1758181620552},{"_id":"node_modules/hexo-theme-next/scripts/tags/wavedrom.js","hash":"188c1dd5d7dbc566cac00946da86aa76fff1c682","modified":1758181620552},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"9354013ea89c8e3874a44929c394db39ae04f36a","modified":1758181620552},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"bb868086bf28029d2fb9f6d4abe620c382d66568","modified":1758181620630},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"c326550ce8b4deaa9b647bcfe3cdc04c100644e6","modified":1758181620661},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","hash":"64b378a4d2f0b36bf666fba13b57c59da3a8ac83","modified":1758181620661},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1758181620661},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1758181620661},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1758181620661},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1758181620661},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"5a81f1c5d66561b3bcb05dae48148088a3fb5c79","modified":1758181620661},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1758181620661},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"e2fd71f2876531f4c8bf1f38828aae35dd82cca4","modified":1758181620661},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","hash":"81ea6cbcdf0357094753d7523919c1eafa38e79f","modified":1758181620661},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","hash":"0b4daf0ce610760bd52e95d423f61f3e1c72442a","modified":1758181620677},{"_id":"node_modules/hexo-theme-next/source/js/config.js","hash":"211a9ab35205ccfa6b7c74394bade84da0d00af7","modified":1758181620677},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"a2abc7279723aee459b4c7a357fc84d5215affcf","modified":1758181620677},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"4d72855245fdbda9705b367da313299641742c18","modified":1758181620677},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","hash":"ca513ae9aa3ab3dfe46668f0717d9d37b571c5b7","modified":1758181620677},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"4858233224756e3cadfabd8135f7c4b1e3673b44","modified":1758181620677},{"_id":"node_modules/hexo-theme-next/source/js/sidebar.js","hash":"f3052996408a09233ffaf8d631fd930443ccd781","modified":1758181620677},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"37ae2df704cb99b5c415863c896153357f57b87d","modified":1758181620708},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"c2ee46d744afa78d95c6bca5dfcbb2fbc38474c2","modified":1758181620424},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"e016c3f80db433f17781caf26e44f2089a71550a","modified":1758181620424},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"7bf2b6ab499775355bbf8f3ae597ff7bc00e89e4","modified":1758181620424},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"1b2ae17f3c394ce310fe2d9ed5f4d07d8cc74ae7","modified":1758181620424},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"62513f08e9e7f4abeaeedca91fd0af0861a2540f","modified":1758181620424},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"828700af2a2f273d3e3e0554ffc60706d889d539","modified":1758181620424},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"20cb9c39bcdcfa3f710df7bc5838d6e62d4dd674","modified":1758181620424},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"1fe44a1e156cd30e3e9fd8313e1011ad30970f83","modified":1758181620424},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"b352346dd2cb42f7eeaec5e39d9a2a353b029775","modified":1758181620440},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"92553feb26f30f7fc9147bc4ef122908a9da06be","modified":1758181620440},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"6ec9c97e91c793cc2eb5ac0f7c3c36fdaaf637d1","modified":1758181620442},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"752df7d12360a077c51a25609916a3ecc1763bb3","modified":1758181620442},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"22c922214982c4bb78ea92fa2ff1de93d98216a3","modified":1758181620442},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"ebe45ab38ace03ea74eed3f676ec1cb5805a3c8a","modified":1758181620442},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"9a9c4fb7e7c4fe4b7d474bdfdb4ed2b0a5423df2","modified":1758181620442},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"9a7eda45ad0753d5f624c51a56e00277ba97c93d","modified":1758181620442},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"fd6fde597ea2fb7b80cffd0a3553c8e73acb8ab2","modified":1758181620442},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-share.njk","hash":"8a6414987474592e82b3e57eeb0bd526ae42d235","modified":1758181620442},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"10145ae7ef87b502d20bfa08beb2b899228f1419","modified":1758181620442},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"8d76300e31178e790400a37adfaf9bc0e5f8fae7","modified":1758181620442},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"3e80332f88b101141be69f2a07f54ed8c053eabb","modified":1758181620458},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"17173c45f0b740669ef45aaae1fe96eeb0a0ff52","modified":1758181620458},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"52ad137450f7b3d6a330e16b3ed1c6174290f0eb","modified":1758181620458},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"9ff9ec05c2037beea229a6bb698f9e3546973220","modified":1758181620458},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"81abcf790cf97395cde9e3cd6d5d1aa5656bd134","modified":1758181620458},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/matomo.njk","hash":"43238bc1bc2e88d707f8097814ef3ff830cbe641","modified":1758181620458},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"2129a017a1b1ab751aca9c70e76461ad91b2a81e","modified":1758181620458},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/plausible.njk","hash":"64ed6fecae79f9f9c61e956d2bd077792473e069","modified":1758181620458},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"09d2c9487d75894d45a823e3237ae9f90fd6ee01","modified":1758181620458},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/umami.njk","hash":"c8b8c10dcf5c4ffa4a8aec5ba5892842ec204ac0","modified":1758181620458},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"3fbc72427c1211e5dcfd269af1a74852a7ba5c1a","modified":1758181620458},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"5f7967bd946060f4102263a552ddfbae9975e7ea","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"b0828dd1b1fd66ecd612d9e886a08e7579e9a4f7","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"c5086b4c35f730f82c99c4a8317f2f153ebde869","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"6fd4df5c21cfe530dbb0c012bc0b202f2c362b9c","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"38badcc7624a13961381c2465478056b9602aee5","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"b8e0d5de584cece5e05b03db5b86145aa1e422b4","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"a7921be7328e1509d33b435175f5333a9aada66f","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"1856c4b035c5b8e64300a11af0461b519dfc4cf4","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"a62aa1ed4e35b8d0451d83f341bf0a97538bc9a4","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"1df65b1390add93b86ae3f9423d96a130b0ece04","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"599f3f5e4385501d0010edc02ed9ca547d2467f7","modified":1758181620474},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"210c32b654adae3d8076c4417d370b42af258cea","modified":1758181620489},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"af5336e8bbdc4638435971da115bb7443d374ade","modified":1758181620489},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"866ffa15a3250678eb8a90aa6f609fa965db90fd","modified":1758181620489},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"442df8a04f1967779cdd7599156496bdac8f1f23","modified":1758181620489},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"8703d1855bb8d251c9b7c2940b7e3be525e53000","modified":1758181620489},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"dd8f963acd5a3685be46fd5319c06df0308d99b2","modified":1758181620489},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"0386c708975cc5faea4f782611c5d2c6b8ac2850","modified":1758181620489},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/wavedrom.njk","hash":"baec18165d767094ecb2dda7141ca3bd8c6f2eb9","modified":1758181620489},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"b4944b3272edecceedc3935f8606e810f9ff237e","modified":1758181620505},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"df360f546d59b1fee8926806268754433dfa5de7","modified":1758181620505},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"1f1ea7b579a49f17574c31d78d663c54896133eb","modified":1758181620505},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/navigation.js","hash":"0a2df7d40d64c61ce7e730bb8269b848b03526d1","modified":1758181620505},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"da22c6008fc8d214ba8561b412233380a06c40f9","modified":1758181620505},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"af3e7066a7a8d87448aadde3bc9c848077aae418","modified":1758181620505},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"761760031e49edb77277bd4a8582774959240d6b","modified":1758181620505},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"550cc7f57bc3ab3d093e34741e7860222851d4d4","modified":1758181620505},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"1cb58aa6b88f7461c3c3f9605273686adcc30979","modified":1758181620505},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"3283bdd6e5ac7d10376df8ddd5faaec5dc1bd667","modified":1758181620520},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"4dbe9652ae53a181c86eb7e9005a5255f0540055","modified":1758181620520},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"96e58efba0dc76af409cc7d2db225f0fe4526ea8","modified":1758181620520},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"bb8ebb541c40362c0cbbd8e83d3b777302bb6c40","modified":1758181620520},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"c22cbccd7d514947e084eeac6a3af1aa41ec857a","modified":1758181620520},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"a50718c081685fd35ff8ea9ca13682c284399ed8","modified":1758181620520},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"c4537fa2de33d98baff2c87a73801770414e0b69","modified":1758181620645},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"54c52744898eb5d2073b83f98bb1a61759da92dc","modified":1758181620661},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"9cd228d5de7c2e49a231be072c9ef13af2dd95ff","modified":1758181620661},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"4d7ae387cb3a2d6bcf5123c419d265a7347f1148","modified":1758181620661},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"c42a1685b29650e0ab078a496b2bfe0a4483f922","modified":1758181620661},{"_id":"node_modules/hexo-theme-next/source/js/third-party/addtoany.js","hash":"5cff12a5c9fc55a68f0f57a291494cd738301ba4","modified":1758181620677},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","hash":"e3022c2ea60409a82a3e2a0d3615e4a25c684551","modified":1758181620692},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","hash":"0ebee77b2307bf4b260afb06c060171ef42b7141","modified":1758181620692},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","hash":"5b0197e061f57e00875be3636ba372a67693abe0","modified":1758181620692},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"f882924c7b99afc23106e39164516888b2972c7b","modified":1758181620552},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"49c3063b46d65796003a822deed971abee41675e","modified":1758181620552},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"f3defd56be33dba4866a695396d96c767ce63182","modified":1758181620567},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"7782dfae7a0f8cd61b936fa8ac980440a7bbd3bb","modified":1758181620583},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"883a4f42badb7b206604eb2805ae582c3a511403","modified":1758181620583},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"0951dfc96a5c4aca904142e7f1e57e2ad2dd2e10","modified":1758181620599},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"f768ecb2fe3e9384777c1c115cd7409e9155edd7","modified":1758181620599},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"cf8446f4378dcab27b55ede1635c608ae6b8a5c8","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"b9388016f8d9274703e77e306a1feaad1b7b9d6c","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"fd4a2d2303f107a021837aa6e3d977c2f9d14c42","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"b9322d644b2090d793521555646673322f2dd5e8","modified":1758181620630},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"ce25cb35779f29d01f7b7fc51ee09e68987ad318","modified":1758181620630},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"be9d0e9493802c22f16a0645a59d0c2b556c1c3c","modified":1758181620630},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"0bf248d61593fbcdfd83b018b92199f4da3699b1","modified":1758181620630},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"2db5ada757f7ffb9a36b06400cf30d80ec039b6e","modified":1758181620630},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"68f8d30071516913a7a958e01d010e8a93f7aa24","modified":1758181620630},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"89bf3f6b82cb0fafbbd483431df8f450857c5a0b","modified":1758181620630},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"2f19fe2aba8f63fc99641e50bcb96cc9a4feb8a4","modified":1758181620630},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"e6e8892fccb02bff163d9b574984e0440a00d756","modified":1758181620630},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"b26770e09de9b51c851bb90fae19b27860e7fc9f","modified":1758181620630},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"2fb4b3f88e34a8544436a05634690217f9483419","modified":1758181620645},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1758181620645},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1758181620645},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"36438f7b47d7ebd250a25f97c743fda484283046","modified":1758181620645},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"3ab87229f9a8357446f77f05a0c6854fb5363fd5","modified":1758181620645},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"7a3b5cd21bc35d92358abb07fc0986722dd10881","modified":1758181620645},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"7125fb0dba920e89c3f7c1c07e2f7cce1fbdb703","modified":1758181620645},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5c3dd08c520a16ee49f85fa12b4935e725ef261","modified":1758181620645},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"7905f428b46d100ac5928875cb1e2b99fa86fc0b","modified":1758181620645},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f9579a02599de063ccff336177ba964a2931a6e9","modified":1758181620677},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"27a27de3d4e0d33e9c647f7ae78e1dd6d36d2463","modified":1758181620677},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"f755e8537ccbbb0bd84c26923f320d4e206e7428","modified":1758181620677},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","hash":"f24604710002234f18a7b5cfe9ccdf3ed6e725a8","modified":1758181620677},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"72e0766752b78a723fb30e92d533a8b353104e2d","modified":1758181620677},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"77c231bcd64f1c09bd9989909e9fee703b65f47f","modified":1758181620677},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"b4cb06fdf531292e2361398a98d75a4ca2b8473a","modified":1758181620692},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"07e0038b221b9a4fd8ccac75093de3dee1f8315e","modified":1758181620692},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"5673d28509a8e837a512da490a88b7bf5162fc49","modified":1758181620692},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"1e8509356fb027d948d118ab220d9631f4d482fa","modified":1758181620692},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"b9b9fd2f0e098a123b34a4932da912a9485ffe6c","modified":1758181620692},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"68892d74ef5fc308c6e7e6b4f190826d79f3055d","modified":1758181620692},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"ec44d7f1c8b51b0aa3cccba099a78f3575ac828c","modified":1758181620692},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","hash":"5c63ec71458b4fe0cd98fd4a04e11c3746764f11","modified":1758181620692},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"d93556184b2c0aa1dbc4a6fb892d2f77b80d7d9f","modified":1758181620692},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"7db3233f0b33870943ce1547326a67f9e628b411","modified":1758181620708},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"f2e867ef43817125ef4237a5fa694ccec3ceb058","modified":1758181620708},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"ce12b5007c9aa997738641c06a1c081c357e27bd","modified":1758181620708},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"f1ba79c2d08b522626060bdf7d782018b93d6ffd","modified":1758181620692},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"6ce7a068192a7ca3487eb40645f2fdebc04ce89e","modified":1758181620708},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"e109c2d6828f527f0289d5fa3bb02fce63ee6d93","modified":1758181620708},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/wavedrom.js","hash":"9cafc8f751581d496f1f3c056b95f3b8e1ebbf4e","modified":1758181620708},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"f9fe39bef5fb2565abbffcb26390868c13d18359","modified":1758181620552},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1758181620552},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"091b8c763e43447d087c122a86538f290f83136a","modified":1758181620552},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"fde10ce94e9ae21a03b60d41d532835b54abdcb1","modified":1758181620552},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"56d719bcdcba3d725141c55bbd4b168f3942f912","modified":1758181620552},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"9fe9eb46d11cc772e37c067fcffe1b8e7ae10c31","modified":1758181620567},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"c524d5990a8e7ed9caf17978cf372bb0646f7b9f","modified":1758181620567},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"aa04527f76de7646573ea327d4f6145200d6070d","modified":1758181620567},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"a87245394f946b607852ddcffb6ef8d5ff9f6561","modified":1758181620567},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"8798669728f20843b100dbea65c70247fe978efc","modified":1758181620567},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"c34936a17c3d8af6c0988ac6746d7509dc0b50eb","modified":1758181620567},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"69dff7cf231d01f85671758455726dd666664a73","modified":1758181620567},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"6ad0da4a5585508abbe78342a680607face98e19","modified":1758181620567},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"4790d37a40b80f7278ec55274f017dad21791038","modified":1758181620567},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/disqusjs.styl","hash":"a2ffaa06c963514a79fda52665e707af6e8e2f5e","modified":1758181620567},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"0a698c3adba896a46e26850967cb73295c521940","modified":1758181620567},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"406c03be3cf8a8411227bc1fecf942ca368f7e2a","modified":1758181620567},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"8a7b70ef14c7110aaceb30ea2f7eb4b202f0f0cd","modified":1758181620567},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"39066b4e2e914d85736c9c33fa51f21a3f86c0e4","modified":1758181620583},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"1e5776ad4c5c8bcf7596ac74dcabc30704b3f5a0","modified":1758181620583},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"b068074e117cf6f9d6402d48ebd4aedf4e9d9bee","modified":1758181620583},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"d28856f365a9373c4ae6fe1e5673d63df2dfd65f","modified":1758181620583},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"c8648c8ea3105556be0068d9fb2735261d0d94bc","modified":1758181620583},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"05af22f3edc2383a3d97ec4c05e9ac43b014bead","modified":1758181620583},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"038625515ba4760e4dda6792549bddc0db5a3d20","modified":1758181620583},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"dce8ea62d7d7b08a0444fbb2f617be30bfcfc152","modified":1758181620583},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"f4de9eb94bebdf7790522e103de51205a64cae9e","modified":1758181620583},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"7a47adf10809dff5cbaa6732cf6aa273e4673fd0","modified":1758181620599},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"d9bc2b520636b9df7f946295cd430593df4118ff","modified":1758181620583},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/related-posts.styl","hash":"b3689beb90cda64cafecaf6b25981fe8a9525992","modified":1758181620599},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"63fb6d36d9ea62c7e39274c666e102b12f64ff77","modified":1758181620599},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"d8a028f532d562e6a86bb3b9c7b992e4b6dbbb51","modified":1758181620599},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-copyright.styl","hash":"a6fbede106afe30a9a7918b52ea8233e020b1382","modified":1758181620599},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"69869f1e317d78c03b3ef3a13e553d2c4ad04caf","modified":1758181620599},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"f5c1a6afcd2d460ccd5987ef1af747fc99d3ea72","modified":1758181620599},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"794eabec62d6070255fa10516487cff70e0030bf","modified":1758181620599},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"cbc6b0938a2e60f35a5df32210904fb16e4938da","modified":1758181620599},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"8f82d5141a18f6319e0609a3f6e4fcca6d442203","modified":1758181620599},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"98a233884b1953952b8364895617fe53def60038","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"2de038def2cb91da143b14696366c14a66e0e569","modified":1758181620599},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"6b3680e0dbea8e14c1cec24ef63b7fae5e37f7ef","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/fold.styl","hash":"41c0516f76513036e30a70509a6d33e8a79bdba2","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"79e246b65cef7e32bfe4b9d32516bad1f1eabda0","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"1772ade171aa6bd806909d69003cfc498c3af019","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"8d9218980e185210ce034e9769ab639b9630fd88","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7efdc07cf0311108c34fb8815eb890954757d351","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"c7754dc6c866928b538f0863a05b96ec44b5e986","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"531daf2612c6217950677a2d03924459ce57c291","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"63910d15fa2b1df112aee0c4629955f157a077a4","modified":1758181620614},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"77122986509a6b4968bae2729417b7016137534c","modified":1758181620630},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"bcc0d3482f2faa4552d38de51480ea7f92f6c821","modified":1758181620630},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/wavedrom.styl","hash":"2f4c791b5999b2e1a707bd473c1db7c21d206a27","modified":1758181620630},{"_id":"public/js/notice.js","hash":"108aaf38002c7d7a7d66ec32f64357cfa28ed0b9","modified":1758184614913},{"_id":"public/js/pen.js","hash":"356165afc14fe5d96a30f6e50d18a9a2e0b38735","modified":1758184614913},{"_id":"public/js/anchor.min.js","hash":"2b94688cb6d8116ec1969f785e8db17dba8ab2ae","modified":1758184614913},{"_id":"public/style/style.css","hash":"31d6ed16dccb7fe3159d83d8dfd59e5c7013708a","modified":1758184614913},{"_id":"public/lib/subtitle_typing.js","hash":"cf89b11dbfe3b646a4d12db99a2c053113f1ce0c","modified":1758184614913},{"_id":"public/calendar.json","hash":"9c9e375721bdddb049c197622e83caf90ef7519c","modified":1758184614913},{"_id":"public/search.xml","hash":"efefe9d9f575828f60f5199653d6cd20a07c98bc","modified":1758184614913},{"_id":"public/404.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/categories/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/about/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/tags/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/2025/09/18/hello-world/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/2025/09/01/网络流之最小割问题/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/2025/05/03/状压DP（二）/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/2025/05/02/状压DP/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/2025/01/01/区间dp/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/2025/01/01/二分图/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/2025/01/01/区间dp（三）/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/2025/01/01/区间dp（二）/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/2025/01/01/连通性问题/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/2020/01/01/平衡树/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/archives/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/archives/2020/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/archives/2020/01/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/archives/2025/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/archives/2025/01/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/archives/2025/09/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/archives/2025/05/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/categories/编程/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/categories/算法/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/categories/动态规划/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/categories/网络流/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/categories/区间dp/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/categories/状态压缩/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/categories/平衡树/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/categories/最小割/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/categories/二分图/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/categories/连通性问题/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/categories/数据结构/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/tags/动态规划/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/tags/区间dp/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/tags/二分图/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/tags/平衡树/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/tags/状态压缩/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/tags/网络流/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/tags/最小割问题/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/tags/连通性问题/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758184614913},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1758184614913},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1758184614913},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1758184614913},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1758184614913},{"_id":"public/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1758184614913},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"5a81f1c5d66561b3bcb05dae48148088a3fb5c79","modified":1758184614913},{"_id":"public/css/main.css","hash":"165f1b5a69db9cc83c64c4d107044f168bdf2e31","modified":1758184614913},{"_id":"public/css/noscript.css","hash":"4cd5301e478e0e0d4b176740ec314087ec5cb707","modified":1758184614913},{"_id":"public/js/bookmark.js","hash":"9ba4cceafd12c6d5ba8a6b986a046ef8319a7811","modified":1758184614913},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1758184614913},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1758184614913},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1758184614913},{"_id":"public/js/motion.js","hash":"6f751f5c9499a39d7c5e1d323db3260342dd9431","modified":1758184614913},{"_id":"public/js/next-boot.js","hash":"043c9343bed9b5a4e910fb3c0c5abf48a3472e59","modified":1758184614913},{"_id":"public/js/pjax.js","hash":"694b271819aab37ce473b15db9e6aded971d82e5","modified":1758184614913},{"_id":"public/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1758184614913},{"_id":"public/js/sidebar.js","hash":"2ee359ae48273b01ba1e0768704524e08702c7eb","modified":1758184614913},{"_id":"public/js/utils.js","hash":"b870aae1271f3453b71e6d8cd6fc4a1448e52064","modified":1758184614913},{"_id":"public/js/third-party/addtoany.js","hash":"5276c8f78ee562a8965216dc67d762e59cb4a9f2","modified":1758184614913},{"_id":"public/js/third-party/fancybox.js","hash":"819f382c561fe5ec23c67cc5fabd63dd1cc22dc1","modified":1758184614913},{"_id":"public/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1758184614913},{"_id":"public/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1758184614913},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1758184614913},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"def07bcc7c17d8a0caad177fb1dd2f3a5e5b3536","modified":1758184614913},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1758184614913},{"_id":"public/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1758184614913},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1758184614913},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1758184614913},{"_id":"public/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1758184614913},{"_id":"public/js/third-party/comments/disqus.js","hash":"da361917d65e5dca8362f8cdeb6c8cc0e8316cec","modified":1758184614913},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1758184614913},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1758184614913},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1758184614913},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1758184614913},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1758184614913},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1758184614913},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1758184614913},{"_id":"public/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1758184614913},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1758184614913},{"_id":"public/js/third-party/search/local-search.js","hash":"4262628e173b16c4c6c18f817173dd103fb9e9a8","modified":1758184614913},{"_id":"public/js/third-party/search/algolia-search.js","hash":"93d3c39aded8d0140e63e70b896bd3d34c187c68","modified":1758184614913},{"_id":"public/js/third-party/tags/mermaid.js","hash":"1d1b6d847215b16f26b230859d7e16501190ecc0","modified":1758184614913},{"_id":"public/js/third-party/tags/wavedrom.js","hash":"40dcd10df6edf124088c329346e0cc0bdac74ef1","modified":1758184614913},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1758184614913}],"Category":[{"name":"编程","_id":"cmfp5q6ah000b3kv3apsb178w"},{"name":"算法","_id":"cmfp5q6av000r3kv32dk8b9kd"},{"name":"动态规划","_id":"cmfp5q6ay000w3kv38zux3l7r"},{"name":"网络流","_id":"cmfp5q6b000143kv30yckgepb"},{"name":"区间dp","_id":"cmfp5q6b6001m3kv38k5aahkj"},{"name":"状态压缩","_id":"cmfp5q6b7001o3kv3ckq994ws"},{"name":"平衡树","_id":"cmfp5q6b7001q3kv31hjxdute"},{"name":"最小割","_id":"cmfp5q6b8001t3kv31ui56oy6"},{"name":"二分图","_id":"cmfp5q6b9001w3kv31d8vemjl"},{"name":"连通性问题","_id":"cmfp5q6bb00233kv3hwmm5vxd"},{"name":"数据结构","_id":"cmfp5q6bc00293kv3g1wj2z7h"}],"Data":[{"_id":"footer","data":"<div style=\"font-size: 0.85rem\">\n\t<span id=\"timeDate\">load</span>\n\t<span id=\"times\">ing...</span>\n\t<script>\n\t\t!(function () {\n\t\t\t/** 计时起始时间，自行修改 **/\n\t\t\tvar start = new Date(\"2025/05/01 00:00:00\");\n\n\t\t\tfunction update() {\n\t\t\t\tvar now = new Date();\n\t\t\t\tnow.setTime(now.getTime() + 250);\n\t\t\t\tdays = (now - start) / 1000 / 60 / 60 / 24;\n\t\t\t\tdnum = Math.floor(days);\n\t\t\t\thours = (now - start) / 1000 / 60 / 60 - (24 * dnum);\n\t\t\t\thnum = Math.floor(hours);\n\t\t\t\tif (String(hnum).length === 1) {\n\t\t\t\t\thnum = \"0\" + hnum;\n\t\t\t\t}\n\t\t\t\tminutes = (now - start) / 1000 / 60 - (24 * 60 * dnum) - (60 * hnum);\n\t\t\t\tmnum = Math.floor(minutes);\n\t\t\t\tif (String(mnum).length === 1) {\n\t\t\t\t\tmnum = \"0\" + mnum;\n\t\t\t\t}\n\t\t\t\tseconds = (now - start) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);\n\t\t\t\tsnum = Math.round(seconds);\n\t\t\t\tif (String(snum).length === 1) {\n\t\t\t\t\tsnum = \"0\" + snum;\n\t\t\t\t}\n\t\t\t\tdocument.getElementById(\"timeDate\").innerHTML = \"本站安全运行&nbsp\" + dnum + \"&nbsp天\";\n\t\t\t\tdocument.getElementById(\"times\").innerHTML = hnum + \"&nbsp小时&nbsp\" + mnum + \"&nbsp分&nbsp\" + snum + \"&nbsp秒\";\n\t\t\t}\n\n\t\t\tupdate();\n\t\t\tsetInterval(update, 1000);\n\t\t})();\n\t</script>\n</div>"},{"_id":"post-meta","data":"<!-- <img src=\"https://cdn.luogu.com.cn/upload/image_hosting/cfgy9siw.png\" /> -->"},{"_id":"head","data":"<script id=\"canvas_nest\" defer=\"defer\" color=\"0,0,255\" opacity=\"0.7\" zIndex=\"-1\" count=\"150\" mobile=\"false\"\n\tsrc=\"/js/pen.js\"></script>\n<style>\n\t.anchorjs-link {\n\t\ttransition: all .25s linear;\n\t\tmargin-left: -0.25em !important;\n\t}\n\n\t*:hover>.anchorjs-link {\n\t\tmargin-left: 0.1875em !important;\n\t}\n\n\t.main-inner,\n\theader,\n\t.sidebar-inner,\n\t.animated {\n\t\tborder-radius: 5px !important;\n\t}\n</style>\n<!-- <script src=\"/js/anchor.min.js\" onload=\"anchors.add();\"></script> -->\n<script type=\"module\">\n\timport '/js/anchor.min.js';\n\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\tanchors.add();\n\t});\n\t// document.addEve)\n\tsetInterval(() => { anchors.add() }, 5000);\n</script>"}],"Page":[{"title":"404 - 页面未找到","date":"2025-05-02T12:33:17.000Z","layout":"page","comments":0,"_content":"\n<div class=\"error-container\">\n  <h1>404</h1>\n  <p>您访问的页面不存在或已移动</p>\n  <a href=\"/\" class=\"home-link\">返回首页</a>\n</div>\n\n<style>\n.error-container {\n  text-align: center;\n  margin: 100px auto;\n  max-width: 600px;\n}\n.home-link {\n  display: inline-block;\n  margin-top: 20px;\n  padding: 10px 20px;\n  background: #3498db;\n  color: white;\n  border-radius: 4px;\n}\n</style>","source":"404/index.md","raw":"---\ntitle: 404 - 页面未找到\ndate: 2025-05-02 20:33:17\nlayout: page\ncomments: false\npermalink: /404.html\n---\n\n<div class=\"error-container\">\n  <h1>404</h1>\n  <p>您访问的页面不存在或已移动</p>\n  <a href=\"/\" class=\"home-link\">返回首页</a>\n</div>\n\n<style>\n.error-container {\n  text-align: center;\n  margin: 100px auto;\n  max-width: 600px;\n}\n.home-link {\n  display: inline-block;\n  margin-top: 20px;\n  padding: 10px 20px;\n  background: #3498db;\n  color: white;\n  border-radius: 4px;\n}\n</style>","updated":"2025-09-18T07:47:07.989Z","path":"/404.html","_id":"cmfp5q69n00003kv3g8b6dpu4","content":"<div class=\"error-container\">\n  <h1>404</h1>\n  <p>您访问的页面不存在或已移动</p>\n  <a href=\"/\" class=\"home-link\">返回首页</a>\n</div>\n<style>\n.error-container {\n  text-align: center;\n  margin: 100px auto;\n  max-width: 600px;\n}\n.home-link {\n  display: inline-block;\n  margin-top: 20px;\n  padding: 10px 20px;\n  background: #3498db;\n  color: white;\n  border-radius: 4px;\n}\n</style>","excerpt":"","more":"<div class=\"error-container\">\n  <h1>404</h1>\n  <p>您访问的页面不存在或已移动</p>\n  <a href=\"/\" class=\"home-link\">返回首页</a>\n</div>\n<style>\n.error-container {\n  text-align: center;\n  margin: 100px auto;\n  max-width: 600px;\n}\n.home-link {\n  display: inline-block;\n  margin-top: 20px;\n  padding: 10px 20px;\n  background: #3498db;\n  color: white;\n  border-radius: 4px;\n}\n</style>"},{"title":"分类","date":"2025-05-02T12:11:28.000Z","type":"categories","comments":0,"_content":"\n","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2025-05-02 20:11:28\ntype: \"categories\"\ncomments: false  # 禁用评论（可选）\n---\n\n","updated":"2025-09-18T07:47:08.005Z","path":"categories/index.html","layout":"page","_id":"cmfp5q69y00023kv39ees16wc","content":"","excerpt":"","more":""},{"title":"about","date":"2025-05-01T08:15:45.000Z","layout":"page","_content":"\n本博客是一个基于 Hexo & NexT 的博客。\n\n作者第 $n$ 个博客……\n\nwbw121124's Github chart:\n<img src=\"https://ghchart.rshah.org/wbw121124\" alt=\"wbw121124's Github chart\" />\nwbwblog's Github chart:\n<img src=\"https://ghchart.rshah.org/wbwblog\" alt=\"wbwblog's Github chart\" />\nwbwdxh's Github chart:\n<img src=\"https://ghchart.rshah.org/wbwdxh\" alt=\"wbwdxh's Github chart\" />\n\n<img src=\"https://cdn.luogu.com.cn/upload/image_hosting/cfgy9siw.png\" />\n\nupdate:\n\n[![Pages](https://github.com/wbwblog/wbwblog.github.io/actions/workflows/pages.yml/badge.svg)](https://github.com/wbwblog/wbwblog.github.io/actions/workflows/pages.yml)","source":"about/index.md","raw":"---\ntitle: about\ndate: 2025-05-01 16:15:45\nlayout: \"page\"\n---\n\n本博客是一个基于 Hexo & NexT 的博客。\n\n作者第 $n$ 个博客……\n\nwbw121124's Github chart:\n<img src=\"https://ghchart.rshah.org/wbw121124\" alt=\"wbw121124's Github chart\" />\nwbwblog's Github chart:\n<img src=\"https://ghchart.rshah.org/wbwblog\" alt=\"wbwblog's Github chart\" />\nwbwdxh's Github chart:\n<img src=\"https://ghchart.rshah.org/wbwdxh\" alt=\"wbwdxh's Github chart\" />\n\n<img src=\"https://cdn.luogu.com.cn/upload/image_hosting/cfgy9siw.png\" />\n\nupdate:\n\n[![Pages](https://github.com/wbwblog/wbwblog.github.io/actions/workflows/pages.yml/badge.svg)](https://github.com/wbwblog/wbwblog.github.io/actions/workflows/pages.yml)","updated":"2025-09-18T07:47:08.005Z","path":"about/index.html","comments":1,"_id":"cmfp5q6a600043kv35lbobs0q","content":"<p>本博客是一个基于 Hexo &amp; NexT 的博客。</p>\n<p>作者第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个博客……</p>\n<p>wbw121124’s Github chart:<br />\n<img src=\"https://ghchart.rshah.org/wbw121124\" alt=\"wbw121124's Github chart\" /><br />\nwbwblog’s Github chart:<br />\n<img src=\"https://ghchart.rshah.org/wbwblog\" alt=\"wbwblog's Github chart\" /><br />\nwbwdxh’s Github chart:<br />\n<img src=\"https://ghchart.rshah.org/wbwdxh\" alt=\"wbwdxh's Github chart\" /></p>\n<img src=\"https://cdn.luogu.com.cn/upload/image_hosting/cfgy9siw.png\" />\n<p>update:</p>\n<p><a href=\"https://github.com/wbwblog/wbwblog.github.io/actions/workflows/pages.yml\"><img src=\"https://github.com/wbwblog/wbwblog.github.io/actions/workflows/pages.yml/badge.svg\" alt=\"Pages\" /></a></p>\n","excerpt":"","more":"<p>本博客是一个基于 Hexo &amp; NexT 的博客。</p>\n<p>作者第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个博客……</p>\n<p>wbw121124’s Github chart:<br />\n<img src=\"https://ghchart.rshah.org/wbw121124\" alt=\"wbw121124's Github chart\" /><br />\nwbwblog’s Github chart:<br />\n<img src=\"https://ghchart.rshah.org/wbwblog\" alt=\"wbwblog's Github chart\" /><br />\nwbwdxh’s Github chart:<br />\n<img src=\"https://ghchart.rshah.org/wbwdxh\" alt=\"wbwdxh's Github chart\" /></p>\n<img src=\"https://cdn.luogu.com.cn/upload/image_hosting/cfgy9siw.png\" />\n<p>update:</p>\n<p><a href=\"https://github.com/wbwblog/wbwblog.github.io/actions/workflows/pages.yml\"><img src=\"https://github.com/wbwblog/wbwblog.github.io/actions/workflows/pages.yml/badge.svg\" alt=\"Pages\" /></a></p>\n"},{"_content":"\n//const fontFace = new FontFace('MyCustomFont', 'url(\"~/long-cang-webfont/style.css\")');\n\n// 加载字体\n//fontFace.load().then(font => {\n\t// 当字体加载完成后，将其安装到字体集合中\n\t//document.fonts.add(font);\n\n\t// 现在可以使用这个字体了\n\t//document.body.style.fontFamily = 'MyCustomFont';\n//});\n\n// 定义一个函数用来创建和插入弹幕\nfunction createDanmu(text) {\n\t// 创建一个span元素\n\tvar danmu = document.createElement(\"span\");\n\t// 设置其文本内容为参数值\n\tdanmu.innerText = text;\n\t// 设置其类名为danmu\n\tdanmu.className = \"danmu\";\n\n\t// 设置其随机的高度\n\tdanmu.style.top = Math.random() * (container.clientHeight - danmu.clientHeight) + \"px\";\n\t// 设置其随机的颜色\n\tdanmu.style.color = \"rgb(\" + Math.floor(Math.random() * 256) + \",\" + Math.floor(Math.random() * 256) + \",\" + Math.floor(Math.random() * 256) + \")\";\n\n\t//danmu.style.fontFamily = \"Long Cang Regular\";\n\n\t//danmu.style.fontSize = \"30px\";\n\t// 将span元素插入到容器元素中\n\tcontainer.appendChild(danmu);\n\t// 使用CSS动画来让span元素从右向左移动\n\tvar tt1 = (5 + Math.random() * 5);\n\tdanmu.style.animation = \"move \" + tt1 + \"s linear forwards\";\n\tsetTimeout(() => { danmu.remove() }, tt1 * 1000);\n}\n\n// 获取容器元素\nvar container = document.getElementById(\"main\");\n// 定义一个数组用来存放一些弹幕内容\nvar texts = [\"Where there is a will, there is a way.\", \"Hope for the best, plan for the worst.\", \"Wisdom is more precious than wealth.\", \"Action speaks louder than words.\", \"Time and tide wait for no man.\",\n\t\"Experience is the best teacher.\", \"All that glitters is not gold.\", \"Failure is the mother of success.\", \"A journey of a thousand miles begins with a single step.\", \"The early bird catches the worm.\",\n\t\"Nothing is impossible to a willing heart.\", \"Don't put off till tomorrow what you can do today.\", \"Every cloud has a silver lining.\", \"Haste makes waste.\", \"Better late than never.\",\n\t\"Honesty is the best policy.\", \"Live and learn.\", \"Health is wealth.\", \"First impressions are the most lasting.\", \"One man's meat is another man's poison.\", \"A friend in need is a friend indeed.\",\n\t\"Life is not all roses.\", \"Think twice before you act.\", \"Pride goes before a fall.\", \"Two heads are better than one.\", \"Well begun is half done.\", \"To be, or not to be, that is the question.\",\n\t\"Action speak louder than words.\", \"An idle youth,a needy age.\", \"All is well that ends well.\", \"Misfortune is a good teacher.\", \"Faith can move mountains.\", \"He that promises too much means nothing.\",\n\t\"He would climb the ladder must begin at the bottom.\", \"If you are not inside a house, you don not know about its leaking.\", \"It is never too late to mend.\", \"Yesterday will not be called again.\",\n\t\"Men will die for wealth, as bird for food.\", \"Success belongs to the persevering.\", \"The man who has made up his mind to win will never say \\\"impossible\\\".\", \"Nothing venture, nothing have.\",\n\t\"If you fail, don't forget to learn your lesson.\", \"No pain, no gain\", \"We can only move forward, forward, by any means necessary to move forward.\", \"Your fearlessness comes from ignorance.\",\n\t\"Intelligence lies in diligence, and genius in accumulation.\", \"Never be satisfied with learning; never be tired of teaching.\", \"Books are the ladder of human progress.\",\n\t\"An inch of time is an inch of gold, but you can't buy time with gold.\"];\n// 定义一个定时器，每隔一秒创建并插入一条弹幕\nsetInterval(function () {\n\t// 随机选择一个弹幕内容\n\tvar text = texts[Math.floor(Math.random() * texts.length)];\n\t// 调用函数创建并插入弹幕\n\tcreateDanmu(text);\n}, 7000);","source":"js/notice.js","raw":"\n//const fontFace = new FontFace('MyCustomFont', 'url(\"~/long-cang-webfont/style.css\")');\n\n// 加载字体\n//fontFace.load().then(font => {\n\t// 当字体加载完成后，将其安装到字体集合中\n\t//document.fonts.add(font);\n\n\t// 现在可以使用这个字体了\n\t//document.body.style.fontFamily = 'MyCustomFont';\n//});\n\n// 定义一个函数用来创建和插入弹幕\nfunction createDanmu(text) {\n\t// 创建一个span元素\n\tvar danmu = document.createElement(\"span\");\n\t// 设置其文本内容为参数值\n\tdanmu.innerText = text;\n\t// 设置其类名为danmu\n\tdanmu.className = \"danmu\";\n\n\t// 设置其随机的高度\n\tdanmu.style.top = Math.random() * (container.clientHeight - danmu.clientHeight) + \"px\";\n\t// 设置其随机的颜色\n\tdanmu.style.color = \"rgb(\" + Math.floor(Math.random() * 256) + \",\" + Math.floor(Math.random() * 256) + \",\" + Math.floor(Math.random() * 256) + \")\";\n\n\t//danmu.style.fontFamily = \"Long Cang Regular\";\n\n\t//danmu.style.fontSize = \"30px\";\n\t// 将span元素插入到容器元素中\n\tcontainer.appendChild(danmu);\n\t// 使用CSS动画来让span元素从右向左移动\n\tvar tt1 = (5 + Math.random() * 5);\n\tdanmu.style.animation = \"move \" + tt1 + \"s linear forwards\";\n\tsetTimeout(() => { danmu.remove() }, tt1 * 1000);\n}\n\n// 获取容器元素\nvar container = document.getElementById(\"main\");\n// 定义一个数组用来存放一些弹幕内容\nvar texts = [\"Where there is a will, there is a way.\", \"Hope for the best, plan for the worst.\", \"Wisdom is more precious than wealth.\", \"Action speaks louder than words.\", \"Time and tide wait for no man.\",\n\t\"Experience is the best teacher.\", \"All that glitters is not gold.\", \"Failure is the mother of success.\", \"A journey of a thousand miles begins with a single step.\", \"The early bird catches the worm.\",\n\t\"Nothing is impossible to a willing heart.\", \"Don't put off till tomorrow what you can do today.\", \"Every cloud has a silver lining.\", \"Haste makes waste.\", \"Better late than never.\",\n\t\"Honesty is the best policy.\", \"Live and learn.\", \"Health is wealth.\", \"First impressions are the most lasting.\", \"One man's meat is another man's poison.\", \"A friend in need is a friend indeed.\",\n\t\"Life is not all roses.\", \"Think twice before you act.\", \"Pride goes before a fall.\", \"Two heads are better than one.\", \"Well begun is half done.\", \"To be, or not to be, that is the question.\",\n\t\"Action speak louder than words.\", \"An idle youth,a needy age.\", \"All is well that ends well.\", \"Misfortune is a good teacher.\", \"Faith can move mountains.\", \"He that promises too much means nothing.\",\n\t\"He would climb the ladder must begin at the bottom.\", \"If you are not inside a house, you don not know about its leaking.\", \"It is never too late to mend.\", \"Yesterday will not be called again.\",\n\t\"Men will die for wealth, as bird for food.\", \"Success belongs to the persevering.\", \"The man who has made up his mind to win will never say \\\"impossible\\\".\", \"Nothing venture, nothing have.\",\n\t\"If you fail, don't forget to learn your lesson.\", \"No pain, no gain\", \"We can only move forward, forward, by any means necessary to move forward.\", \"Your fearlessness comes from ignorance.\",\n\t\"Intelligence lies in diligence, and genius in accumulation.\", \"Never be satisfied with learning; never be tired of teaching.\", \"Books are the ladder of human progress.\",\n\t\"An inch of time is an inch of gold, but you can't buy time with gold.\"];\n// 定义一个定时器，每隔一秒创建并插入一条弹幕\nsetInterval(function () {\n\t// 随机选择一个弹幕内容\n\tvar text = texts[Math.floor(Math.random() * texts.length)];\n\t// 调用函数创建并插入弹幕\n\tcreateDanmu(text);\n}, 7000);","date":"2025-09-18T07:47:08.005Z","updated":"2025-09-18T07:47:08.005Z","path":"js/notice.js","layout":"false","title":"","comments":1,"_id":"cmfp5q6aa00063kv38ddwe5fa","content":"\n//const fontFace = new FontFace('MyCustomFont', 'url(\"~/long-cang-webfont/style.css\")');\n\n// 加载字体\n//fontFace.load().then(font => {\n\t// 当字体加载完成后，将其安装到字体集合中\n\t//document.fonts.add(font);\n\n\t// 现在可以使用这个字体了\n\t//document.body.style.fontFamily = 'MyCustomFont';\n//});\n\n// 定义一个函数用来创建和插入弹幕\nfunction createDanmu(text) {\n\t// 创建一个span元素\n\tvar danmu = document.createElement(\"span\");\n\t// 设置其文本内容为参数值\n\tdanmu.innerText = text;\n\t// 设置其类名为danmu\n\tdanmu.className = \"danmu\";\n\n\t// 设置其随机的高度\n\tdanmu.style.top = Math.random() * (container.clientHeight - danmu.clientHeight) + \"px\";\n\t// 设置其随机的颜色\n\tdanmu.style.color = \"rgb(\" + Math.floor(Math.random() * 256) + \",\" + Math.floor(Math.random() * 256) + \",\" + Math.floor(Math.random() * 256) + \")\";\n\n\t//danmu.style.fontFamily = \"Long Cang Regular\";\n\n\t//danmu.style.fontSize = \"30px\";\n\t// 将span元素插入到容器元素中\n\tcontainer.appendChild(danmu);\n\t// 使用CSS动画来让span元素从右向左移动\n\tvar tt1 = (5 + Math.random() * 5);\n\tdanmu.style.animation = \"move \" + tt1 + \"s linear forwards\";\n\tsetTimeout(() => { danmu.remove() }, tt1 * 1000);\n}\n\n// 获取容器元素\nvar container = document.getElementById(\"main\");\n// 定义一个数组用来存放一些弹幕内容\nvar texts = [\"Where there is a will, there is a way.\", \"Hope for the best, plan for the worst.\", \"Wisdom is more precious than wealth.\", \"Action speaks louder than words.\", \"Time and tide wait for no man.\",\n\t\"Experience is the best teacher.\", \"All that glitters is not gold.\", \"Failure is the mother of success.\", \"A journey of a thousand miles begins with a single step.\", \"The early bird catches the worm.\",\n\t\"Nothing is impossible to a willing heart.\", \"Don't put off till tomorrow what you can do today.\", \"Every cloud has a silver lining.\", \"Haste makes waste.\", \"Better late than never.\",\n\t\"Honesty is the best policy.\", \"Live and learn.\", \"Health is wealth.\", \"First impressions are the most lasting.\", \"One man's meat is another man's poison.\", \"A friend in need is a friend indeed.\",\n\t\"Life is not all roses.\", \"Think twice before you act.\", \"Pride goes before a fall.\", \"Two heads are better than one.\", \"Well begun is half done.\", \"To be, or not to be, that is the question.\",\n\t\"Action speak louder than words.\", \"An idle youth,a needy age.\", \"All is well that ends well.\", \"Misfortune is a good teacher.\", \"Faith can move mountains.\", \"He that promises too much means nothing.\",\n\t\"He would climb the ladder must begin at the bottom.\", \"If you are not inside a house, you don not know about its leaking.\", \"It is never too late to mend.\", \"Yesterday will not be called again.\",\n\t\"Men will die for wealth, as bird for food.\", \"Success belongs to the persevering.\", \"The man who has made up his mind to win will never say \\\"impossible\\\".\", \"Nothing venture, nothing have.\",\n\t\"If you fail, don't forget to learn your lesson.\", \"No pain, no gain\", \"We can only move forward, forward, by any means necessary to move forward.\", \"Your fearlessness comes from ignorance.\",\n\t\"Intelligence lies in diligence, and genius in accumulation.\", \"Never be satisfied with learning; never be tired of teaching.\", \"Books are the ladder of human progress.\",\n\t\"An inch of time is an inch of gold, but you can't buy time with gold.\"];\n// 定义一个定时器，每隔一秒创建并插入一条弹幕\nsetInterval(function () {\n\t// 随机选择一个弹幕内容\n\tvar text = texts[Math.floor(Math.random() * texts.length)];\n\t// 调用函数创建并插入弹幕\n\tcreateDanmu(text);\n}, 7000);"},{"_content":"(() => {\n\tconst t = document.getElementById(\"canvas_nest\");\n\tif (\"false\" === t.getAttribute(\"mobile\") && /Android|webOS|iPhone|iPod|iPad|BlackBerry/i.test(navigator.userAgent))\n\t\treturn;\n\tconst e = (t, e, n) => t.getAttribute(e) || n\n\t\t, n = {\n\t\t\tzIndex: e(t, \"zIndex\", -1),\n\t\t\topacity: e(t, \"opacity\", .5),\n\t\t\tcolor: e(t, \"color\", \"0,0,0\"),\n\t\t\tcount: e(t, \"count\", 99)\n\t\t}\n\t\t, o = (() => {\n\t\t\tconst t = document.createElement(\"canvas\");\n\t\t\treturn t.style.cssText = `position:fixed;top:0;left:0;z-index:${n.zIndex};opacity:${n.opacity}`,\n\t\t\t\tdocument.body.appendChild(t),\n\t\t\t\tt\n\t\t}\n\t\t)()\n\t\t, i = o.getContext(\"2d\");\n\tlet c, a;\n\tconst d = () => {\n\t\tc = o.width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\n\t\t\ta = o.height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n\t}\n\t\t, l = []\n\t\t, m = {\n\t\t\tx: null,\n\t\t\ty: null,\n\t\t\tmax: 2e4\n\t\t}\n\t\t, r = () => {\n\t\t\ti.clearRect(0, 0, c, a);\n\t\t\tconst t = [m].concat(l);\n\t\t\tl.forEach((e => {\n\t\t\t\te.x += e.xa,\n\t\t\t\t\te.y += e.ya,\n\t\t\t\t\te.xa *= e.x > c || e.x < 0 ? -1 : 1,\n\t\t\t\t\te.ya *= e.y > a || e.y < 0 ? -1 : 1,\n\t\t\t\t\ti.fillRect(e.x - .5, e.y - .5, 1, 1),\n\t\t\t\t\tt.forEach((t => {\n\t\t\t\t\t\tif (e !== t && null !== t.x && null !== t.y) {\n\t\t\t\t\t\t\tconst o = e.x - t.x\n\t\t\t\t\t\t\t\t, c = e.y - t.y\n\t\t\t\t\t\t\t\t, a = o * o + c * c;\n\t\t\t\t\t\t\tif (a < t.max) {\n\t\t\t\t\t\t\t\tt === m && a >= t.max / 2 && (e.x -= .03 * o,\n\t\t\t\t\t\t\t\t\te.y -= .03 * c);\n\t\t\t\t\t\t\t\tconst d = (t.max - a) / t.max;\n\t\t\t\t\t\t\t\ti.beginPath(),\n\t\t\t\t\t\t\t\t\ti.lineWidth = d / 2,\n\t\t\t\t\t\t\t\t\ti.strokeStyle = `rgba(${n.color},${d + .2})`,\n\t\t\t\t\t\t\t\t\ti.moveTo(e.x, e.y),\n\t\t\t\t\t\t\t\t\ti.lineTo(t.x, t.y),\n\t\t\t\t\t\t\t\t\ti.stroke()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t)),\n\t\t\t\t\tt.splice(t.indexOf(e), 1)\n\t\t\t}\n\t\t\t)),\n\t\t\t\trequestAnimationFrame(r)\n\t\t}\n\t\t;\n\td(),\n\t\twindow.onresize = d,\n\t\twindow.onmousemove = t => {\n\t\t\tm.x = t.clientX,\n\t\t\t\tm.y = t.clientY\n\t\t}\n\t\t,\n\t\twindow.onmouseout = () => {\n\t\t\tm.x = null,\n\t\t\t\tm.y = null\n\t\t}\n\t\t,\n\t\t(() => {\n\t\t\tfor (let t = 0; t < n.count; t++) {\n\t\t\t\tconst t = Math.random() * c\n\t\t\t\t\t, e = Math.random() * a\n\t\t\t\t\t, n = 2 * Math.random() - 1\n\t\t\t\t\t, o = 2 * Math.random() - 1;\n\t\t\t\tl.push({\n\t\t\t\t\tx: t,\n\t\t\t\t\ty: e,\n\t\t\t\t\txa: n,\n\t\t\t\t\tya: o,\n\t\t\t\t\tmax: 6e3\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\t)(),\n\t\tsetTimeout(r, 100)\n}\n)();\n/**\n * Minified by jsDelivr using Terser v5.3.5.\n * Original file: /gh/BNDong/Cnblogs-Theme-SimpleMemory@1.3.4/src/script/RibbonsEffect.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n\"object\" == typeof window && (window.Ribbons = function () {\n\tvar t = window\n\t\t, i = document.body\n\t\t, n = document.documentElement\n\t\t, o = function () {\n\t\t\tif (1 === arguments.length) {\n\t\t\t\tif (Array.isArray(arguments[0])) {\n\t\t\t\t\tvar t = Math.round(o(0, arguments[0].length - 1));\n\t\t\t\t\treturn arguments[0][t]\n\t\t\t\t}\n\t\t\t\treturn o(0, arguments[0])\n\t\t\t}\n\t\t\treturn 2 === arguments.length ? Math.random() * (arguments[1] - arguments[0]) + arguments[0] : 0\n\t\t}\n\t\t, s = function (o) {\n\t\t\tvar s = Math.max(0, t.innerWidth || n.clientWidth || i.clientWidth || 0)\n\t\t\t\t, h = Math.max(0, t.innerHeight || n.clientHeight || i.clientHeight || 0);\n\t\t\treturn {\n\t\t\t\twidth: s,\n\t\t\t\theight: h,\n\t\t\t\tratio: s / h,\n\t\t\t\tcenterx: s / 2,\n\t\t\t\tcentery: h / 2,\n\t\t\t\tscrollx: Math.max(0, t.pageXOffset || n.scrollLeft || i.scrollLeft || 0) - (n.clientLeft || 0),\n\t\t\t\tscrolly: Math.max(0, t.pageYOffset || n.scrollTop || i.scrollTop || 0) - (n.clientTop || 0)\n\t\t\t}\n\t\t}\n\t\t, h = function (t, i) {\n\t\t\tthis.x = 0,\n\t\t\t\tthis.y = 0,\n\t\t\t\tthis.set(t, i)\n\t\t};\n\th.prototype = {\n\t\tconstructor: h,\n\t\tset: function (t, i) {\n\t\t\tthis.x = t || 0,\n\t\t\t\tthis.y = i || 0\n\t\t},\n\t\tcopy: function (t) {\n\t\t\treturn this.x = t.x || 0,\n\t\t\t\tthis.y = t.y || 0,\n\t\t\t\tthis\n\t\t},\n\t\tmultiply: function (t, i) {\n\t\t\treturn this.x *= t || 1,\n\t\t\t\tthis.y *= i || 1,\n\t\t\t\tthis\n\t\t},\n\t\tdivide: function (t, i) {\n\t\t\treturn this.x /= t || 1,\n\t\t\t\tthis.y /= i || 1,\n\t\t\t\tthis\n\t\t},\n\t\tadd: function (t, i) {\n\t\t\treturn this.x += t || 0,\n\t\t\t\tthis.y += i || 0,\n\t\t\t\tthis\n\t\t},\n\t\tsubtract: function (t, i) {\n\t\t\treturn this.x -= t || 0,\n\t\t\t\tthis.y -= i || 0,\n\t\t\t\tthis\n\t\t},\n\t\tclampX: function (t, i) {\n\t\t\treturn this.x = Math.max(t, Math.min(this.x, i)),\n\t\t\t\tthis\n\t\t},\n\t\tclampY: function (t, i) {\n\t\t\treturn this.y = Math.max(t, Math.min(this.y, i)),\n\t\t\t\tthis\n\t\t},\n\t\tflipX: function () {\n\t\t\treturn this.x *= -1,\n\t\t\t\tthis\n\t\t},\n\t\tflipY: function () {\n\t\t\treturn this.y *= -1,\n\t\t\t\tthis\n\t\t}\n\t};\n\tvar e = function (t) {\n\t\tthis._canvas = null,\n\t\t\tthis._context = null,\n\t\t\tthis._sto = null,\n\t\t\tthis._width = 0,\n\t\t\tthis._height = 0,\n\t\t\tthis._scroll = 0,\n\t\t\tthis._ribbons = [],\n\t\t\tthis._options = {\n\t\t\t\tcolorSaturation: \"80%\",\n\t\t\t\tcolorBrightness: \"60%\",\n\t\t\t\tcolorAlpha: .65,\n\t\t\t\tcolorCycleSpeed: 6,\n\t\t\t\tverticalPosition: \"center\",\n\t\t\t\thorizontalSpeed: 150,\n\t\t\t\tribbonCount: 3,\n\t\t\t\tstrokeSize: 0,\n\t\t\t\tparallaxAmount: -.5,\n\t\t\t\tanimateSections: !0\n\t\t\t},\n\t\t\tthis._onDraw = this._onDraw.bind(this),\n\t\t\tthis._onResize = this._onResize.bind(this),\n\t\t\tthis._onScroll = this._onScroll.bind(this),\n\t\t\tthis.setOptions(t),\n\t\t\tthis.init()\n\t};\n\treturn e.prototype = {\n\t\tconstructor: e,\n\t\tsetOptions: function (t) {\n\t\t\tif (\"object\" == typeof t)\n\t\t\t\tfor (var i in t)\n\t\t\t\t\tt.hasOwnProperty(i) && (this._options[i] = t[i])\n\t\t},\n\t\tinit: function () {\n\t\t\ttry {\n\t\t\t\tthis._canvas = document.createElement(\"canvas\"),\n\t\t\t\t\tthis._canvas.style.display = \"block\",\n\t\t\t\t\tthis._canvas.style.position = \"fixed\",\n\t\t\t\t\tthis._canvas.style.margin = \"0\",\n\t\t\t\t\tthis._canvas.style.padding = \"0\",\n\t\t\t\t\tthis._canvas.style.border = \"0\",\n\t\t\t\t\tthis._canvas.style.outline = \"0\",\n\t\t\t\t\tthis._canvas.style.left = \"0\",\n\t\t\t\t\tthis._canvas.style.top = \"0\",\n\t\t\t\t\tthis._canvas.style.width = \"100%\",\n\t\t\t\t\tthis._canvas.style.height = \"100%\",\n\t\t\t\t\tthis._canvas.style[\"z-index\"] = \"-1\",\n\t\t\t\t\tthis._canvas.id = \"bgCanvas\",\n\t\t\t\t\tthis._onResize(),\n\t\t\t\t\tthis._context = this._canvas.getContext(\"2d\"),\n\t\t\t\t\tthis._context.clearRect(0, 0, this._width, this._height),\n\t\t\t\t\tthis._context.globalAlpha = this._options.colorAlpha,\n\t\t\t\t\twindow.addEventListener(\"resize\", this._onResize),\n\t\t\t\t\twindow.addEventListener(\"scroll\", this._onScroll),\n\t\t\t\t\tdocument.body.appendChild(this._canvas)\n\t\t\t} catch (t) {\n\t\t\t\treturn void console.warn(\"Canvas Context Error: \" + t.toString())\n\t\t\t}\n\t\t\tthis._onDraw()\n\t\t},\n\t\taddRibbon: function () {\n\t\t\tvar t = Math.round(o(1, 9)) > 5 ? \"right\" : \"left\"\n\t\t\t\t, i = 1e3\n\t\t\t\t, n = 200\n\t\t\t\t, s = 0 - n\n\t\t\t\t, e = this._width + n\n\t\t\t\t, a = 0\n\t\t\t\t, r = 0\n\t\t\t\t, l = \"right\" === t ? s : e\n\t\t\t\t, c = Math.round(o(0, this._height));\n\t\t\t/^(top|min)$/i.test(this._options.verticalPosition) ? c = 0 + n : /^(middle|center)$/i.test(this._options.verticalPosition) ? c = this._height / 2 : /^(bottom|max)$/i.test(this._options.verticalPosition) && (c = this._height - n);\n\t\t\tfor (var _ = [], p = new h(l, c), d = new h(l, c), u = null, b = Math.round(o(0, 360)), f = 0; !(i <= 0);) {\n\t\t\t\tif (i--,\n\t\t\t\t\ta = Math.round((1 * Math.random() - .2) * this._options.horizontalSpeed),\n\t\t\t\t\tr = Math.round((1 * Math.random() - .5) * (.25 * this._height)),\n\t\t\t\t\t(u = new h).copy(d),\n\t\t\t\t\t\"right\" === t) {\n\t\t\t\t\tif (u.add(a, r),\n\t\t\t\t\t\td.x >= e)\n\t\t\t\t\t\tbreak\n\t\t\t\t} else if (\"left\" === t && (u.subtract(a, r),\n\t\t\t\t\td.x <= s))\n\t\t\t\t\tbreak;\n\t\t\t\t_.push({\n\t\t\t\t\tpoint1: new h(p.x, p.y),\n\t\t\t\t\tpoint2: new h(d.x, d.y),\n\t\t\t\t\tpoint3: u,\n\t\t\t\t\tcolor: b,\n\t\t\t\t\tdelay: f,\n\t\t\t\t\tdir: t,\n\t\t\t\t\talpha: 0,\n\t\t\t\t\tphase: 0\n\t\t\t\t}),\n\t\t\t\t\tp.copy(d),\n\t\t\t\t\td.copy(u),\n\t\t\t\t\tf += 4,\n\t\t\t\t\tb += this._options.colorCycleSpeed\n\t\t\t}\n\t\t\tthis._ribbons.push(_)\n\t\t},\n\t\t_drawRibbonSection: function (t) {\n\t\t\tif (t) {\n\t\t\t\tif (t.phase >= 1 && t.alpha <= 0)\n\t\t\t\t\treturn !0;\n\t\t\t\tif (t.delay <= 0) {\n\t\t\t\t\tif (t.phase += .02,\n\t\t\t\t\t\tt.alpha = 1 * Math.sin(t.phase),\n\t\t\t\t\t\tt.alpha = t.alpha <= 0 ? 0 : t.alpha,\n\t\t\t\t\t\tt.alpha = t.alpha >= 1 ? 1 : t.alpha,\n\t\t\t\t\t\tthis._options.animateSections) {\n\t\t\t\t\t\tvar i = .1 * Math.sin(1 + t.phase * Math.PI / 2);\n\t\t\t\t\t\t\"right\" === t.dir ? (t.point1.add(i, 0),\n\t\t\t\t\t\t\tt.point2.add(i, 0),\n\t\t\t\t\t\t\tt.point3.add(i, 0)) : (t.point1.subtract(i, 0),\n\t\t\t\t\t\t\t\tt.point2.subtract(i, 0),\n\t\t\t\t\t\t\t\tt.point3.subtract(i, 0)),\n\t\t\t\t\t\t\tt.point1.add(0, i),\n\t\t\t\t\t\t\tt.point2.add(0, i),\n\t\t\t\t\t\t\tt.point3.add(0, i)\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tt.delay -= .5;\n\t\t\t\tvar n = this._options.colorSaturation\n\t\t\t\t\t, o = this._options.colorBrightness\n\t\t\t\t\t, s = \"hsla(\" + t.color + \", \" + n + \", \" + o + \", \" + t.alpha + \" )\";\n\t\t\t\tthis._context.save(),\n\t\t\t\t\t0 !== this._options.parallaxAmount && this._context.translate(0, this._scroll * this._options.parallaxAmount),\n\t\t\t\t\tthis._context.beginPath(),\n\t\t\t\t\tthis._context.moveTo(t.point1.x, t.point1.y),\n\t\t\t\t\tthis._context.lineTo(t.point2.x, t.point2.y),\n\t\t\t\t\tthis._context.lineTo(t.point3.x, t.point3.y),\n\t\t\t\t\tthis._context.fillStyle = s,\n\t\t\t\t\tthis._context.fill(),\n\t\t\t\t\tthis._options.strokeSize > 0 && (this._context.lineWidth = this._options.strokeSize,\n\t\t\t\t\t\tthis._context.strokeStyle = s,\n\t\t\t\t\t\tthis._context.lineCap = \"round\",\n\t\t\t\t\t\tthis._context.stroke()),\n\t\t\t\t\tthis._context.restore()\n\t\t\t}\n\t\t\treturn !1\n\t\t},\n\t\t_onDraw: function () {\n\t\t\tfor (var t = 0, i = this._ribbons.length; t < i; ++t)\n\t\t\t\tthis._ribbons[t] || this._ribbons.splice(t, 1);\n\t\t\tthis._context.clearRect(0, 0, this._width, this._height);\n\t\t\tfor (var n = 0; n < this._ribbons.length; ++n) {\n\t\t\t\tfor (var o = this._ribbons[n], s = o.length, h = 0, e = 0; e < s; ++e)\n\t\t\t\t\tthis._drawRibbonSection(o[e]) && h++;\n\t\t\t\th >= s && (this._ribbons[n] = null)\n\t\t\t}\n\t\t\tthis._ribbons.length < this._options.ribbonCount && this.addRibbon(),\n\t\t\t\trequestAnimationFrame(this._onDraw)\n\t\t},\n\t\t_onResize: function (t) {\n\t\t\tvar i = s(t);\n\t\t\tthis._width = i.width,\n\t\t\t\tthis._height = i.height,\n\t\t\t\tthis._canvas && (this._canvas.width = this._width,\n\t\t\t\t\tthis._canvas.height = this._height,\n\t\t\t\t\tthis._context && (this._context.globalAlpha = this._options.colorAlpha))\n\t\t},\n\t\t_onScroll: function (t) {\n\t\t\tvar i = s(t);\n\t\t\tthis._scroll = i.scrolly\n\t\t}\n\t},\n\t\te\n}()),\n\tnew Ribbons({\n\t\tcolorSaturation: \"60%\",\n\t\tcolorBrightness: \"50%\",\n\t\tcolorAlpha: .5,\n\t\tcolorCycleSpeed: 5,\n\t\tverticalPosition: \"random\",\n\t\thorizontalSpeed: 200,\n\t\tribbonCount: 3,\n\t\tstrokeSize: 0,\n\t\tparallaxAmount: -.2,\n\t\tanimateSections: true\n\t});\n//# sourceMappingURL=/sm/c1df5c1b1d16877c7a2ef95f23335a100e5e7a2f76371ded79ec481b65ab6113.map\n/**\n * Skipped minification because the original files appears to be already minified.\n * Original file: /gh/EmoryHuang/BlogBeautify@1.1/star.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n(function () {\n\tlet cnt = 0;\n\tfunction t() {\n\t\ti(),\n\t\t\ta()\n\t}\n\tfunction i() {\n\t\tdocument.addEventListener(\"mousemove\", o),\n\t\t\tdocument.addEventListener(\"touchmove\", e),\n\t\t\tdocument.addEventListener(\"touchstart\", e),\n\t\t\twindow.addEventListener(\"resize\", n)\n\t}\n\tfunction n(t) {\n\t\td = window.innerWidth,\n\t\t\twindow.innerHeight\n\t}\n\tfunction e(t) {\n\t\tif (++cnt % 50 == 0)\n\t\t\tif (t.touches.length > 0)\n\t\t\t\tfor (var i = 0; i < t.touches.length; i++)\n\t\t\t\t\ts(t.touches[i].clientX, t.touches[i].clientY, r[Math.floor(Math.random() * r.length)])\n\t}\n\tfunction o(t) {\n\t\tif (++cnt % 50 == 0)\n\t\t\tu.x = t.clientX,\n\t\t\t\tu.y = t.clientY,\n\t\t\t\ts(u.x, u.y, r[Math.floor(Math.random() * r.length)])\n\t}\n\tfunction s(t, i, n) {\n\t\tvar e = new l;\n\t\te.init(t, i, n),\n\t\t\tf.push(e)\n\t}\n\tfunction h() {\n\t\tfor (var t = 0; t < f.length; t++)\n\t\t\tf[t].update();\n\t\tfor (t = f.length - 1; t >= 0; t--)\n\t\t\tf[t].lifeSpan < 0 && (f[t].die(),\n\t\t\t\tf.splice(t, 1))\n\t}\n\tfunction a() {\n\t\trequestAnimationFrame(a),\n\t\t\th()\n\t}\n\tfunction l() {\n\t\tthis.character = \"*\",\n\t\t\tthis.lifeSpan = 120,\n\t\t\tthis.initialStyles = {\n\t\t\t\tposition: \"fixed\",\n\t\t\t\ttop: \"0\",\n\t\t\t\tdisplay: \"block\",\n\t\t\t\tpointerEvents: \"none\",\n\t\t\t\t\"z-index\": \"10000000\",\n\t\t\t\tfontSize: \"20px\",\n\t\t\t\t\"will-change\": \"transform\"\n\t\t\t},\n\t\t\tthis.init = function (t, i, n) {\n\t\t\t\tthis.velocity = {\n\t\t\t\t\tx: (Math.random() < .5 ? -1 : 1) * (Math.random() / 2),\n\t\t\t\t\ty: 1\n\t\t\t\t},\n\t\t\t\t\tthis.position = {\n\t\t\t\t\t\tx: t - 10,\n\t\t\t\t\t\ty: i - 20\n\t\t\t\t\t},\n\t\t\t\t\tthis.initialStyles.color = n,\n\t\t\t\t\t// console.log(n),\n\t\t\t\t\tthis.element = document.createElement(\"span\"),\n\t\t\t\t\tthis.element.innerHTML = this.character,\n\t\t\t\t\tc(this.element, this.initialStyles),\n\t\t\t\t\tthis.update(),\n\t\t\t\t\tdocument.body.appendChild(this.element)\n\t\t\t}\n\t\t\t,\n\t\t\tthis.update = function () {\n\t\t\t\tthis.position.x += this.velocity.x,\n\t\t\t\t\tthis.position.y += this.velocity.y,\n\t\t\t\t\tthis.lifeSpan--,\n\t\t\t\t\tthis.element.style.transform = \"translate3d(\" + this.position.x + \"px,\" + this.position.y + \"px,0) scale(\" + this.lifeSpan / 120 + \")\"\n\t\t\t}\n\t\t\t,\n\t\t\tthis.die = function () {\n\t\t\t\tthis.element.parentNode.removeChild(this.element)\n\t\t\t}\n\t}\n\tfunction c(t, i) {\n\t\tfor (var n in i)\n\t\t\tt.style[n] = i[n]\n\t}\n\tvar r = [\"#D61C59\", \"#E7D84B\", \"#1B8798\"]\n\t\t, d = window.innerWidth\n\t\t, u = (window.innerHeight,\n\t\t{\n\t\t\tx: d / 2,\n\t\t\ty: d / 2\n\t\t})\n\t\t, f = [];\n\tt()\n}\n)();\ndocument.addEventListener('DOMContentLoaded', function () {\n\tsetTimeout(() => {\n\t\t//不同的日期显示不同的样式，200 天为黄色提示，400天为红色提示，可以自己定义。\n\t\tlet warningDay = 200;\n\t\tlet errorDay = 600;\n\t\t// 确保能够获取到文章时间以及在文章详情页\n\t\tlet times = document.getElementsByTagName('time');\n\t\tif (times.length === 0) { return; }\n\t\tlet posts = document.getElementsByClassName('footer-inner');\n\t\tif (posts.length === 0) { return; }\n\n\t\t// 获取系统当前的时间\n\t\tlet pubTime = new Date(times[0].dateTime);  /* 文章发布时间戳 */\n\t\tlet now = Date.now()  /* 当前时间戳 */\n\t\tlet interval = parseInt(now - pubTime)\n\t\tlet days = parseInt(interval / 86400000)\n\t\t/* 发布时间超过指定时间（毫秒） */\n\t\tif (interval > warningDay * 3600 * 24 * 1000 && interval < errorDay * 3600 * 24 * 1000) {\n\t\t\tposts[0].innerHTML = posts[0].innerHTML + '<div>' +\n\t\t\t\t'<strong>提示</strong><p>这是一篇发布于 ' + days + ' 天前的文章，部分信息可能已发生改变，请注意甄别。</p>' +\n\t\t\t\t'</div>';\n\t\t} else if (interval >= errorDay * 3600 * 24 * 1000) {\n\t\t\tposts[0].innerHTML = posts[0].innerHTML + '<div>' +\n\t\t\t\t'<strong>提示</strong><p>这是一篇发布于 ' + days + ' 天前的文章，部分信息可能已发生改变，请注意甄别。</p>' +\n\t\t\t\t'</div>';\n\t\t}\n\t}, 100);\n});","source":"js/pen.js","raw":"(() => {\n\tconst t = document.getElementById(\"canvas_nest\");\n\tif (\"false\" === t.getAttribute(\"mobile\") && /Android|webOS|iPhone|iPod|iPad|BlackBerry/i.test(navigator.userAgent))\n\t\treturn;\n\tconst e = (t, e, n) => t.getAttribute(e) || n\n\t\t, n = {\n\t\t\tzIndex: e(t, \"zIndex\", -1),\n\t\t\topacity: e(t, \"opacity\", .5),\n\t\t\tcolor: e(t, \"color\", \"0,0,0\"),\n\t\t\tcount: e(t, \"count\", 99)\n\t\t}\n\t\t, o = (() => {\n\t\t\tconst t = document.createElement(\"canvas\");\n\t\t\treturn t.style.cssText = `position:fixed;top:0;left:0;z-index:${n.zIndex};opacity:${n.opacity}`,\n\t\t\t\tdocument.body.appendChild(t),\n\t\t\t\tt\n\t\t}\n\t\t)()\n\t\t, i = o.getContext(\"2d\");\n\tlet c, a;\n\tconst d = () => {\n\t\tc = o.width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\n\t\t\ta = o.height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n\t}\n\t\t, l = []\n\t\t, m = {\n\t\t\tx: null,\n\t\t\ty: null,\n\t\t\tmax: 2e4\n\t\t}\n\t\t, r = () => {\n\t\t\ti.clearRect(0, 0, c, a);\n\t\t\tconst t = [m].concat(l);\n\t\t\tl.forEach((e => {\n\t\t\t\te.x += e.xa,\n\t\t\t\t\te.y += e.ya,\n\t\t\t\t\te.xa *= e.x > c || e.x < 0 ? -1 : 1,\n\t\t\t\t\te.ya *= e.y > a || e.y < 0 ? -1 : 1,\n\t\t\t\t\ti.fillRect(e.x - .5, e.y - .5, 1, 1),\n\t\t\t\t\tt.forEach((t => {\n\t\t\t\t\t\tif (e !== t && null !== t.x && null !== t.y) {\n\t\t\t\t\t\t\tconst o = e.x - t.x\n\t\t\t\t\t\t\t\t, c = e.y - t.y\n\t\t\t\t\t\t\t\t, a = o * o + c * c;\n\t\t\t\t\t\t\tif (a < t.max) {\n\t\t\t\t\t\t\t\tt === m && a >= t.max / 2 && (e.x -= .03 * o,\n\t\t\t\t\t\t\t\t\te.y -= .03 * c);\n\t\t\t\t\t\t\t\tconst d = (t.max - a) / t.max;\n\t\t\t\t\t\t\t\ti.beginPath(),\n\t\t\t\t\t\t\t\t\ti.lineWidth = d / 2,\n\t\t\t\t\t\t\t\t\ti.strokeStyle = `rgba(${n.color},${d + .2})`,\n\t\t\t\t\t\t\t\t\ti.moveTo(e.x, e.y),\n\t\t\t\t\t\t\t\t\ti.lineTo(t.x, t.y),\n\t\t\t\t\t\t\t\t\ti.stroke()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t)),\n\t\t\t\t\tt.splice(t.indexOf(e), 1)\n\t\t\t}\n\t\t\t)),\n\t\t\t\trequestAnimationFrame(r)\n\t\t}\n\t\t;\n\td(),\n\t\twindow.onresize = d,\n\t\twindow.onmousemove = t => {\n\t\t\tm.x = t.clientX,\n\t\t\t\tm.y = t.clientY\n\t\t}\n\t\t,\n\t\twindow.onmouseout = () => {\n\t\t\tm.x = null,\n\t\t\t\tm.y = null\n\t\t}\n\t\t,\n\t\t(() => {\n\t\t\tfor (let t = 0; t < n.count; t++) {\n\t\t\t\tconst t = Math.random() * c\n\t\t\t\t\t, e = Math.random() * a\n\t\t\t\t\t, n = 2 * Math.random() - 1\n\t\t\t\t\t, o = 2 * Math.random() - 1;\n\t\t\t\tl.push({\n\t\t\t\t\tx: t,\n\t\t\t\t\ty: e,\n\t\t\t\t\txa: n,\n\t\t\t\t\tya: o,\n\t\t\t\t\tmax: 6e3\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\t)(),\n\t\tsetTimeout(r, 100)\n}\n)();\n/**\n * Minified by jsDelivr using Terser v5.3.5.\n * Original file: /gh/BNDong/Cnblogs-Theme-SimpleMemory@1.3.4/src/script/RibbonsEffect.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n\"object\" == typeof window && (window.Ribbons = function () {\n\tvar t = window\n\t\t, i = document.body\n\t\t, n = document.documentElement\n\t\t, o = function () {\n\t\t\tif (1 === arguments.length) {\n\t\t\t\tif (Array.isArray(arguments[0])) {\n\t\t\t\t\tvar t = Math.round(o(0, arguments[0].length - 1));\n\t\t\t\t\treturn arguments[0][t]\n\t\t\t\t}\n\t\t\t\treturn o(0, arguments[0])\n\t\t\t}\n\t\t\treturn 2 === arguments.length ? Math.random() * (arguments[1] - arguments[0]) + arguments[0] : 0\n\t\t}\n\t\t, s = function (o) {\n\t\t\tvar s = Math.max(0, t.innerWidth || n.clientWidth || i.clientWidth || 0)\n\t\t\t\t, h = Math.max(0, t.innerHeight || n.clientHeight || i.clientHeight || 0);\n\t\t\treturn {\n\t\t\t\twidth: s,\n\t\t\t\theight: h,\n\t\t\t\tratio: s / h,\n\t\t\t\tcenterx: s / 2,\n\t\t\t\tcentery: h / 2,\n\t\t\t\tscrollx: Math.max(0, t.pageXOffset || n.scrollLeft || i.scrollLeft || 0) - (n.clientLeft || 0),\n\t\t\t\tscrolly: Math.max(0, t.pageYOffset || n.scrollTop || i.scrollTop || 0) - (n.clientTop || 0)\n\t\t\t}\n\t\t}\n\t\t, h = function (t, i) {\n\t\t\tthis.x = 0,\n\t\t\t\tthis.y = 0,\n\t\t\t\tthis.set(t, i)\n\t\t};\n\th.prototype = {\n\t\tconstructor: h,\n\t\tset: function (t, i) {\n\t\t\tthis.x = t || 0,\n\t\t\t\tthis.y = i || 0\n\t\t},\n\t\tcopy: function (t) {\n\t\t\treturn this.x = t.x || 0,\n\t\t\t\tthis.y = t.y || 0,\n\t\t\t\tthis\n\t\t},\n\t\tmultiply: function (t, i) {\n\t\t\treturn this.x *= t || 1,\n\t\t\t\tthis.y *= i || 1,\n\t\t\t\tthis\n\t\t},\n\t\tdivide: function (t, i) {\n\t\t\treturn this.x /= t || 1,\n\t\t\t\tthis.y /= i || 1,\n\t\t\t\tthis\n\t\t},\n\t\tadd: function (t, i) {\n\t\t\treturn this.x += t || 0,\n\t\t\t\tthis.y += i || 0,\n\t\t\t\tthis\n\t\t},\n\t\tsubtract: function (t, i) {\n\t\t\treturn this.x -= t || 0,\n\t\t\t\tthis.y -= i || 0,\n\t\t\t\tthis\n\t\t},\n\t\tclampX: function (t, i) {\n\t\t\treturn this.x = Math.max(t, Math.min(this.x, i)),\n\t\t\t\tthis\n\t\t},\n\t\tclampY: function (t, i) {\n\t\t\treturn this.y = Math.max(t, Math.min(this.y, i)),\n\t\t\t\tthis\n\t\t},\n\t\tflipX: function () {\n\t\t\treturn this.x *= -1,\n\t\t\t\tthis\n\t\t},\n\t\tflipY: function () {\n\t\t\treturn this.y *= -1,\n\t\t\t\tthis\n\t\t}\n\t};\n\tvar e = function (t) {\n\t\tthis._canvas = null,\n\t\t\tthis._context = null,\n\t\t\tthis._sto = null,\n\t\t\tthis._width = 0,\n\t\t\tthis._height = 0,\n\t\t\tthis._scroll = 0,\n\t\t\tthis._ribbons = [],\n\t\t\tthis._options = {\n\t\t\t\tcolorSaturation: \"80%\",\n\t\t\t\tcolorBrightness: \"60%\",\n\t\t\t\tcolorAlpha: .65,\n\t\t\t\tcolorCycleSpeed: 6,\n\t\t\t\tverticalPosition: \"center\",\n\t\t\t\thorizontalSpeed: 150,\n\t\t\t\tribbonCount: 3,\n\t\t\t\tstrokeSize: 0,\n\t\t\t\tparallaxAmount: -.5,\n\t\t\t\tanimateSections: !0\n\t\t\t},\n\t\t\tthis._onDraw = this._onDraw.bind(this),\n\t\t\tthis._onResize = this._onResize.bind(this),\n\t\t\tthis._onScroll = this._onScroll.bind(this),\n\t\t\tthis.setOptions(t),\n\t\t\tthis.init()\n\t};\n\treturn e.prototype = {\n\t\tconstructor: e,\n\t\tsetOptions: function (t) {\n\t\t\tif (\"object\" == typeof t)\n\t\t\t\tfor (var i in t)\n\t\t\t\t\tt.hasOwnProperty(i) && (this._options[i] = t[i])\n\t\t},\n\t\tinit: function () {\n\t\t\ttry {\n\t\t\t\tthis._canvas = document.createElement(\"canvas\"),\n\t\t\t\t\tthis._canvas.style.display = \"block\",\n\t\t\t\t\tthis._canvas.style.position = \"fixed\",\n\t\t\t\t\tthis._canvas.style.margin = \"0\",\n\t\t\t\t\tthis._canvas.style.padding = \"0\",\n\t\t\t\t\tthis._canvas.style.border = \"0\",\n\t\t\t\t\tthis._canvas.style.outline = \"0\",\n\t\t\t\t\tthis._canvas.style.left = \"0\",\n\t\t\t\t\tthis._canvas.style.top = \"0\",\n\t\t\t\t\tthis._canvas.style.width = \"100%\",\n\t\t\t\t\tthis._canvas.style.height = \"100%\",\n\t\t\t\t\tthis._canvas.style[\"z-index\"] = \"-1\",\n\t\t\t\t\tthis._canvas.id = \"bgCanvas\",\n\t\t\t\t\tthis._onResize(),\n\t\t\t\t\tthis._context = this._canvas.getContext(\"2d\"),\n\t\t\t\t\tthis._context.clearRect(0, 0, this._width, this._height),\n\t\t\t\t\tthis._context.globalAlpha = this._options.colorAlpha,\n\t\t\t\t\twindow.addEventListener(\"resize\", this._onResize),\n\t\t\t\t\twindow.addEventListener(\"scroll\", this._onScroll),\n\t\t\t\t\tdocument.body.appendChild(this._canvas)\n\t\t\t} catch (t) {\n\t\t\t\treturn void console.warn(\"Canvas Context Error: \" + t.toString())\n\t\t\t}\n\t\t\tthis._onDraw()\n\t\t},\n\t\taddRibbon: function () {\n\t\t\tvar t = Math.round(o(1, 9)) > 5 ? \"right\" : \"left\"\n\t\t\t\t, i = 1e3\n\t\t\t\t, n = 200\n\t\t\t\t, s = 0 - n\n\t\t\t\t, e = this._width + n\n\t\t\t\t, a = 0\n\t\t\t\t, r = 0\n\t\t\t\t, l = \"right\" === t ? s : e\n\t\t\t\t, c = Math.round(o(0, this._height));\n\t\t\t/^(top|min)$/i.test(this._options.verticalPosition) ? c = 0 + n : /^(middle|center)$/i.test(this._options.verticalPosition) ? c = this._height / 2 : /^(bottom|max)$/i.test(this._options.verticalPosition) && (c = this._height - n);\n\t\t\tfor (var _ = [], p = new h(l, c), d = new h(l, c), u = null, b = Math.round(o(0, 360)), f = 0; !(i <= 0);) {\n\t\t\t\tif (i--,\n\t\t\t\t\ta = Math.round((1 * Math.random() - .2) * this._options.horizontalSpeed),\n\t\t\t\t\tr = Math.round((1 * Math.random() - .5) * (.25 * this._height)),\n\t\t\t\t\t(u = new h).copy(d),\n\t\t\t\t\t\"right\" === t) {\n\t\t\t\t\tif (u.add(a, r),\n\t\t\t\t\t\td.x >= e)\n\t\t\t\t\t\tbreak\n\t\t\t\t} else if (\"left\" === t && (u.subtract(a, r),\n\t\t\t\t\td.x <= s))\n\t\t\t\t\tbreak;\n\t\t\t\t_.push({\n\t\t\t\t\tpoint1: new h(p.x, p.y),\n\t\t\t\t\tpoint2: new h(d.x, d.y),\n\t\t\t\t\tpoint3: u,\n\t\t\t\t\tcolor: b,\n\t\t\t\t\tdelay: f,\n\t\t\t\t\tdir: t,\n\t\t\t\t\talpha: 0,\n\t\t\t\t\tphase: 0\n\t\t\t\t}),\n\t\t\t\t\tp.copy(d),\n\t\t\t\t\td.copy(u),\n\t\t\t\t\tf += 4,\n\t\t\t\t\tb += this._options.colorCycleSpeed\n\t\t\t}\n\t\t\tthis._ribbons.push(_)\n\t\t},\n\t\t_drawRibbonSection: function (t) {\n\t\t\tif (t) {\n\t\t\t\tif (t.phase >= 1 && t.alpha <= 0)\n\t\t\t\t\treturn !0;\n\t\t\t\tif (t.delay <= 0) {\n\t\t\t\t\tif (t.phase += .02,\n\t\t\t\t\t\tt.alpha = 1 * Math.sin(t.phase),\n\t\t\t\t\t\tt.alpha = t.alpha <= 0 ? 0 : t.alpha,\n\t\t\t\t\t\tt.alpha = t.alpha >= 1 ? 1 : t.alpha,\n\t\t\t\t\t\tthis._options.animateSections) {\n\t\t\t\t\t\tvar i = .1 * Math.sin(1 + t.phase * Math.PI / 2);\n\t\t\t\t\t\t\"right\" === t.dir ? (t.point1.add(i, 0),\n\t\t\t\t\t\t\tt.point2.add(i, 0),\n\t\t\t\t\t\t\tt.point3.add(i, 0)) : (t.point1.subtract(i, 0),\n\t\t\t\t\t\t\t\tt.point2.subtract(i, 0),\n\t\t\t\t\t\t\t\tt.point3.subtract(i, 0)),\n\t\t\t\t\t\t\tt.point1.add(0, i),\n\t\t\t\t\t\t\tt.point2.add(0, i),\n\t\t\t\t\t\t\tt.point3.add(0, i)\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tt.delay -= .5;\n\t\t\t\tvar n = this._options.colorSaturation\n\t\t\t\t\t, o = this._options.colorBrightness\n\t\t\t\t\t, s = \"hsla(\" + t.color + \", \" + n + \", \" + o + \", \" + t.alpha + \" )\";\n\t\t\t\tthis._context.save(),\n\t\t\t\t\t0 !== this._options.parallaxAmount && this._context.translate(0, this._scroll * this._options.parallaxAmount),\n\t\t\t\t\tthis._context.beginPath(),\n\t\t\t\t\tthis._context.moveTo(t.point1.x, t.point1.y),\n\t\t\t\t\tthis._context.lineTo(t.point2.x, t.point2.y),\n\t\t\t\t\tthis._context.lineTo(t.point3.x, t.point3.y),\n\t\t\t\t\tthis._context.fillStyle = s,\n\t\t\t\t\tthis._context.fill(),\n\t\t\t\t\tthis._options.strokeSize > 0 && (this._context.lineWidth = this._options.strokeSize,\n\t\t\t\t\t\tthis._context.strokeStyle = s,\n\t\t\t\t\t\tthis._context.lineCap = \"round\",\n\t\t\t\t\t\tthis._context.stroke()),\n\t\t\t\t\tthis._context.restore()\n\t\t\t}\n\t\t\treturn !1\n\t\t},\n\t\t_onDraw: function () {\n\t\t\tfor (var t = 0, i = this._ribbons.length; t < i; ++t)\n\t\t\t\tthis._ribbons[t] || this._ribbons.splice(t, 1);\n\t\t\tthis._context.clearRect(0, 0, this._width, this._height);\n\t\t\tfor (var n = 0; n < this._ribbons.length; ++n) {\n\t\t\t\tfor (var o = this._ribbons[n], s = o.length, h = 0, e = 0; e < s; ++e)\n\t\t\t\t\tthis._drawRibbonSection(o[e]) && h++;\n\t\t\t\th >= s && (this._ribbons[n] = null)\n\t\t\t}\n\t\t\tthis._ribbons.length < this._options.ribbonCount && this.addRibbon(),\n\t\t\t\trequestAnimationFrame(this._onDraw)\n\t\t},\n\t\t_onResize: function (t) {\n\t\t\tvar i = s(t);\n\t\t\tthis._width = i.width,\n\t\t\t\tthis._height = i.height,\n\t\t\t\tthis._canvas && (this._canvas.width = this._width,\n\t\t\t\t\tthis._canvas.height = this._height,\n\t\t\t\t\tthis._context && (this._context.globalAlpha = this._options.colorAlpha))\n\t\t},\n\t\t_onScroll: function (t) {\n\t\t\tvar i = s(t);\n\t\t\tthis._scroll = i.scrolly\n\t\t}\n\t},\n\t\te\n}()),\n\tnew Ribbons({\n\t\tcolorSaturation: \"60%\",\n\t\tcolorBrightness: \"50%\",\n\t\tcolorAlpha: .5,\n\t\tcolorCycleSpeed: 5,\n\t\tverticalPosition: \"random\",\n\t\thorizontalSpeed: 200,\n\t\tribbonCount: 3,\n\t\tstrokeSize: 0,\n\t\tparallaxAmount: -.2,\n\t\tanimateSections: true\n\t});\n//# sourceMappingURL=/sm/c1df5c1b1d16877c7a2ef95f23335a100e5e7a2f76371ded79ec481b65ab6113.map\n/**\n * Skipped minification because the original files appears to be already minified.\n * Original file: /gh/EmoryHuang/BlogBeautify@1.1/star.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n(function () {\n\tlet cnt = 0;\n\tfunction t() {\n\t\ti(),\n\t\t\ta()\n\t}\n\tfunction i() {\n\t\tdocument.addEventListener(\"mousemove\", o),\n\t\t\tdocument.addEventListener(\"touchmove\", e),\n\t\t\tdocument.addEventListener(\"touchstart\", e),\n\t\t\twindow.addEventListener(\"resize\", n)\n\t}\n\tfunction n(t) {\n\t\td = window.innerWidth,\n\t\t\twindow.innerHeight\n\t}\n\tfunction e(t) {\n\t\tif (++cnt % 50 == 0)\n\t\t\tif (t.touches.length > 0)\n\t\t\t\tfor (var i = 0; i < t.touches.length; i++)\n\t\t\t\t\ts(t.touches[i].clientX, t.touches[i].clientY, r[Math.floor(Math.random() * r.length)])\n\t}\n\tfunction o(t) {\n\t\tif (++cnt % 50 == 0)\n\t\t\tu.x = t.clientX,\n\t\t\t\tu.y = t.clientY,\n\t\t\t\ts(u.x, u.y, r[Math.floor(Math.random() * r.length)])\n\t}\n\tfunction s(t, i, n) {\n\t\tvar e = new l;\n\t\te.init(t, i, n),\n\t\t\tf.push(e)\n\t}\n\tfunction h() {\n\t\tfor (var t = 0; t < f.length; t++)\n\t\t\tf[t].update();\n\t\tfor (t = f.length - 1; t >= 0; t--)\n\t\t\tf[t].lifeSpan < 0 && (f[t].die(),\n\t\t\t\tf.splice(t, 1))\n\t}\n\tfunction a() {\n\t\trequestAnimationFrame(a),\n\t\t\th()\n\t}\n\tfunction l() {\n\t\tthis.character = \"*\",\n\t\t\tthis.lifeSpan = 120,\n\t\t\tthis.initialStyles = {\n\t\t\t\tposition: \"fixed\",\n\t\t\t\ttop: \"0\",\n\t\t\t\tdisplay: \"block\",\n\t\t\t\tpointerEvents: \"none\",\n\t\t\t\t\"z-index\": \"10000000\",\n\t\t\t\tfontSize: \"20px\",\n\t\t\t\t\"will-change\": \"transform\"\n\t\t\t},\n\t\t\tthis.init = function (t, i, n) {\n\t\t\t\tthis.velocity = {\n\t\t\t\t\tx: (Math.random() < .5 ? -1 : 1) * (Math.random() / 2),\n\t\t\t\t\ty: 1\n\t\t\t\t},\n\t\t\t\t\tthis.position = {\n\t\t\t\t\t\tx: t - 10,\n\t\t\t\t\t\ty: i - 20\n\t\t\t\t\t},\n\t\t\t\t\tthis.initialStyles.color = n,\n\t\t\t\t\t// console.log(n),\n\t\t\t\t\tthis.element = document.createElement(\"span\"),\n\t\t\t\t\tthis.element.innerHTML = this.character,\n\t\t\t\t\tc(this.element, this.initialStyles),\n\t\t\t\t\tthis.update(),\n\t\t\t\t\tdocument.body.appendChild(this.element)\n\t\t\t}\n\t\t\t,\n\t\t\tthis.update = function () {\n\t\t\t\tthis.position.x += this.velocity.x,\n\t\t\t\t\tthis.position.y += this.velocity.y,\n\t\t\t\t\tthis.lifeSpan--,\n\t\t\t\t\tthis.element.style.transform = \"translate3d(\" + this.position.x + \"px,\" + this.position.y + \"px,0) scale(\" + this.lifeSpan / 120 + \")\"\n\t\t\t}\n\t\t\t,\n\t\t\tthis.die = function () {\n\t\t\t\tthis.element.parentNode.removeChild(this.element)\n\t\t\t}\n\t}\n\tfunction c(t, i) {\n\t\tfor (var n in i)\n\t\t\tt.style[n] = i[n]\n\t}\n\tvar r = [\"#D61C59\", \"#E7D84B\", \"#1B8798\"]\n\t\t, d = window.innerWidth\n\t\t, u = (window.innerHeight,\n\t\t{\n\t\t\tx: d / 2,\n\t\t\ty: d / 2\n\t\t})\n\t\t, f = [];\n\tt()\n}\n)();\ndocument.addEventListener('DOMContentLoaded', function () {\n\tsetTimeout(() => {\n\t\t//不同的日期显示不同的样式，200 天为黄色提示，400天为红色提示，可以自己定义。\n\t\tlet warningDay = 200;\n\t\tlet errorDay = 600;\n\t\t// 确保能够获取到文章时间以及在文章详情页\n\t\tlet times = document.getElementsByTagName('time');\n\t\tif (times.length === 0) { return; }\n\t\tlet posts = document.getElementsByClassName('footer-inner');\n\t\tif (posts.length === 0) { return; }\n\n\t\t// 获取系统当前的时间\n\t\tlet pubTime = new Date(times[0].dateTime);  /* 文章发布时间戳 */\n\t\tlet now = Date.now()  /* 当前时间戳 */\n\t\tlet interval = parseInt(now - pubTime)\n\t\tlet days = parseInt(interval / 86400000)\n\t\t/* 发布时间超过指定时间（毫秒） */\n\t\tif (interval > warningDay * 3600 * 24 * 1000 && interval < errorDay * 3600 * 24 * 1000) {\n\t\t\tposts[0].innerHTML = posts[0].innerHTML + '<div>' +\n\t\t\t\t'<strong>提示</strong><p>这是一篇发布于 ' + days + ' 天前的文章，部分信息可能已发生改变，请注意甄别。</p>' +\n\t\t\t\t'</div>';\n\t\t} else if (interval >= errorDay * 3600 * 24 * 1000) {\n\t\t\tposts[0].innerHTML = posts[0].innerHTML + '<div>' +\n\t\t\t\t'<strong>提示</strong><p>这是一篇发布于 ' + days + ' 天前的文章，部分信息可能已发生改变，请注意甄别。</p>' +\n\t\t\t\t'</div>';\n\t\t}\n\t}, 100);\n});","date":"2025-09-18T07:47:08.005Z","updated":"2025-09-18T07:47:08.005Z","path":"js/pen.js","layout":"false","title":"","comments":1,"_id":"cmfp5q6af00093kv37jas4x3t","content":"(() => {\n\tconst t = document.getElementById(\"canvas_nest\");\n\tif (\"false\" === t.getAttribute(\"mobile\") && /Android|webOS|iPhone|iPod|iPad|BlackBerry/i.test(navigator.userAgent))\n\t\treturn;\n\tconst e = (t, e, n) => t.getAttribute(e) || n\n\t\t, n = {\n\t\t\tzIndex: e(t, \"zIndex\", -1),\n\t\t\topacity: e(t, \"opacity\", .5),\n\t\t\tcolor: e(t, \"color\", \"0,0,0\"),\n\t\t\tcount: e(t, \"count\", 99)\n\t\t}\n\t\t, o = (() => {\n\t\t\tconst t = document.createElement(\"canvas\");\n\t\t\treturn t.style.cssText = `position:fixed;top:0;left:0;z-index:${n.zIndex};opacity:${n.opacity}`,\n\t\t\t\tdocument.body.appendChild(t),\n\t\t\t\tt\n\t\t}\n\t\t)()\n\t\t, i = o.getContext(\"2d\");\n\tlet c, a;\n\tconst d = () => {\n\t\tc = o.width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\n\t\t\ta = o.height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n\t}\n\t\t, l = []\n\t\t, m = {\n\t\t\tx: null,\n\t\t\ty: null,\n\t\t\tmax: 2e4\n\t\t}\n\t\t, r = () => {\n\t\t\ti.clearRect(0, 0, c, a);\n\t\t\tconst t = [m].concat(l);\n\t\t\tl.forEach((e => {\n\t\t\t\te.x += e.xa,\n\t\t\t\t\te.y += e.ya,\n\t\t\t\t\te.xa *= e.x > c || e.x < 0 ? -1 : 1,\n\t\t\t\t\te.ya *= e.y > a || e.y < 0 ? -1 : 1,\n\t\t\t\t\ti.fillRect(e.x - .5, e.y - .5, 1, 1),\n\t\t\t\t\tt.forEach((t => {\n\t\t\t\t\t\tif (e !== t && null !== t.x && null !== t.y) {\n\t\t\t\t\t\t\tconst o = e.x - t.x\n\t\t\t\t\t\t\t\t, c = e.y - t.y\n\t\t\t\t\t\t\t\t, a = o * o + c * c;\n\t\t\t\t\t\t\tif (a < t.max) {\n\t\t\t\t\t\t\t\tt === m && a >= t.max / 2 && (e.x -= .03 * o,\n\t\t\t\t\t\t\t\t\te.y -= .03 * c);\n\t\t\t\t\t\t\t\tconst d = (t.max - a) / t.max;\n\t\t\t\t\t\t\t\ti.beginPath(),\n\t\t\t\t\t\t\t\t\ti.lineWidth = d / 2,\n\t\t\t\t\t\t\t\t\ti.strokeStyle = `rgba(${n.color},${d + .2})`,\n\t\t\t\t\t\t\t\t\ti.moveTo(e.x, e.y),\n\t\t\t\t\t\t\t\t\ti.lineTo(t.x, t.y),\n\t\t\t\t\t\t\t\t\ti.stroke()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t)),\n\t\t\t\t\tt.splice(t.indexOf(e), 1)\n\t\t\t}\n\t\t\t)),\n\t\t\t\trequestAnimationFrame(r)\n\t\t}\n\t\t;\n\td(),\n\t\twindow.onresize = d,\n\t\twindow.onmousemove = t => {\n\t\t\tm.x = t.clientX,\n\t\t\t\tm.y = t.clientY\n\t\t}\n\t\t,\n\t\twindow.onmouseout = () => {\n\t\t\tm.x = null,\n\t\t\t\tm.y = null\n\t\t}\n\t\t,\n\t\t(() => {\n\t\t\tfor (let t = 0; t < n.count; t++) {\n\t\t\t\tconst t = Math.random() * c\n\t\t\t\t\t, e = Math.random() * a\n\t\t\t\t\t, n = 2 * Math.random() - 1\n\t\t\t\t\t, o = 2 * Math.random() - 1;\n\t\t\t\tl.push({\n\t\t\t\t\tx: t,\n\t\t\t\t\ty: e,\n\t\t\t\t\txa: n,\n\t\t\t\t\tya: o,\n\t\t\t\t\tmax: 6e3\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\t)(),\n\t\tsetTimeout(r, 100)\n}\n)();\n/**\n * Minified by jsDelivr using Terser v5.3.5.\n * Original file: /gh/BNDong/Cnblogs-Theme-SimpleMemory@1.3.4/src/script/RibbonsEffect.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n\"object\" == typeof window && (window.Ribbons = function () {\n\tvar t = window\n\t\t, i = document.body\n\t\t, n = document.documentElement\n\t\t, o = function () {\n\t\t\tif (1 === arguments.length) {\n\t\t\t\tif (Array.isArray(arguments[0])) {\n\t\t\t\t\tvar t = Math.round(o(0, arguments[0].length - 1));\n\t\t\t\t\treturn arguments[0][t]\n\t\t\t\t}\n\t\t\t\treturn o(0, arguments[0])\n\t\t\t}\n\t\t\treturn 2 === arguments.length ? Math.random() * (arguments[1] - arguments[0]) + arguments[0] : 0\n\t\t}\n\t\t, s = function (o) {\n\t\t\tvar s = Math.max(0, t.innerWidth || n.clientWidth || i.clientWidth || 0)\n\t\t\t\t, h = Math.max(0, t.innerHeight || n.clientHeight || i.clientHeight || 0);\n\t\t\treturn {\n\t\t\t\twidth: s,\n\t\t\t\theight: h,\n\t\t\t\tratio: s / h,\n\t\t\t\tcenterx: s / 2,\n\t\t\t\tcentery: h / 2,\n\t\t\t\tscrollx: Math.max(0, t.pageXOffset || n.scrollLeft || i.scrollLeft || 0) - (n.clientLeft || 0),\n\t\t\t\tscrolly: Math.max(0, t.pageYOffset || n.scrollTop || i.scrollTop || 0) - (n.clientTop || 0)\n\t\t\t}\n\t\t}\n\t\t, h = function (t, i) {\n\t\t\tthis.x = 0,\n\t\t\t\tthis.y = 0,\n\t\t\t\tthis.set(t, i)\n\t\t};\n\th.prototype = {\n\t\tconstructor: h,\n\t\tset: function (t, i) {\n\t\t\tthis.x = t || 0,\n\t\t\t\tthis.y = i || 0\n\t\t},\n\t\tcopy: function (t) {\n\t\t\treturn this.x = t.x || 0,\n\t\t\t\tthis.y = t.y || 0,\n\t\t\t\tthis\n\t\t},\n\t\tmultiply: function (t, i) {\n\t\t\treturn this.x *= t || 1,\n\t\t\t\tthis.y *= i || 1,\n\t\t\t\tthis\n\t\t},\n\t\tdivide: function (t, i) {\n\t\t\treturn this.x /= t || 1,\n\t\t\t\tthis.y /= i || 1,\n\t\t\t\tthis\n\t\t},\n\t\tadd: function (t, i) {\n\t\t\treturn this.x += t || 0,\n\t\t\t\tthis.y += i || 0,\n\t\t\t\tthis\n\t\t},\n\t\tsubtract: function (t, i) {\n\t\t\treturn this.x -= t || 0,\n\t\t\t\tthis.y -= i || 0,\n\t\t\t\tthis\n\t\t},\n\t\tclampX: function (t, i) {\n\t\t\treturn this.x = Math.max(t, Math.min(this.x, i)),\n\t\t\t\tthis\n\t\t},\n\t\tclampY: function (t, i) {\n\t\t\treturn this.y = Math.max(t, Math.min(this.y, i)),\n\t\t\t\tthis\n\t\t},\n\t\tflipX: function () {\n\t\t\treturn this.x *= -1,\n\t\t\t\tthis\n\t\t},\n\t\tflipY: function () {\n\t\t\treturn this.y *= -1,\n\t\t\t\tthis\n\t\t}\n\t};\n\tvar e = function (t) {\n\t\tthis._canvas = null,\n\t\t\tthis._context = null,\n\t\t\tthis._sto = null,\n\t\t\tthis._width = 0,\n\t\t\tthis._height = 0,\n\t\t\tthis._scroll = 0,\n\t\t\tthis._ribbons = [],\n\t\t\tthis._options = {\n\t\t\t\tcolorSaturation: \"80%\",\n\t\t\t\tcolorBrightness: \"60%\",\n\t\t\t\tcolorAlpha: .65,\n\t\t\t\tcolorCycleSpeed: 6,\n\t\t\t\tverticalPosition: \"center\",\n\t\t\t\thorizontalSpeed: 150,\n\t\t\t\tribbonCount: 3,\n\t\t\t\tstrokeSize: 0,\n\t\t\t\tparallaxAmount: -.5,\n\t\t\t\tanimateSections: !0\n\t\t\t},\n\t\t\tthis._onDraw = this._onDraw.bind(this),\n\t\t\tthis._onResize = this._onResize.bind(this),\n\t\t\tthis._onScroll = this._onScroll.bind(this),\n\t\t\tthis.setOptions(t),\n\t\t\tthis.init()\n\t};\n\treturn e.prototype = {\n\t\tconstructor: e,\n\t\tsetOptions: function (t) {\n\t\t\tif (\"object\" == typeof t)\n\t\t\t\tfor (var i in t)\n\t\t\t\t\tt.hasOwnProperty(i) && (this._options[i] = t[i])\n\t\t},\n\t\tinit: function () {\n\t\t\ttry {\n\t\t\t\tthis._canvas = document.createElement(\"canvas\"),\n\t\t\t\t\tthis._canvas.style.display = \"block\",\n\t\t\t\t\tthis._canvas.style.position = \"fixed\",\n\t\t\t\t\tthis._canvas.style.margin = \"0\",\n\t\t\t\t\tthis._canvas.style.padding = \"0\",\n\t\t\t\t\tthis._canvas.style.border = \"0\",\n\t\t\t\t\tthis._canvas.style.outline = \"0\",\n\t\t\t\t\tthis._canvas.style.left = \"0\",\n\t\t\t\t\tthis._canvas.style.top = \"0\",\n\t\t\t\t\tthis._canvas.style.width = \"100%\",\n\t\t\t\t\tthis._canvas.style.height = \"100%\",\n\t\t\t\t\tthis._canvas.style[\"z-index\"] = \"-1\",\n\t\t\t\t\tthis._canvas.id = \"bgCanvas\",\n\t\t\t\t\tthis._onResize(),\n\t\t\t\t\tthis._context = this._canvas.getContext(\"2d\"),\n\t\t\t\t\tthis._context.clearRect(0, 0, this._width, this._height),\n\t\t\t\t\tthis._context.globalAlpha = this._options.colorAlpha,\n\t\t\t\t\twindow.addEventListener(\"resize\", this._onResize),\n\t\t\t\t\twindow.addEventListener(\"scroll\", this._onScroll),\n\t\t\t\t\tdocument.body.appendChild(this._canvas)\n\t\t\t} catch (t) {\n\t\t\t\treturn void console.warn(\"Canvas Context Error: \" + t.toString())\n\t\t\t}\n\t\t\tthis._onDraw()\n\t\t},\n\t\taddRibbon: function () {\n\t\t\tvar t = Math.round(o(1, 9)) > 5 ? \"right\" : \"left\"\n\t\t\t\t, i = 1e3\n\t\t\t\t, n = 200\n\t\t\t\t, s = 0 - n\n\t\t\t\t, e = this._width + n\n\t\t\t\t, a = 0\n\t\t\t\t, r = 0\n\t\t\t\t, l = \"right\" === t ? s : e\n\t\t\t\t, c = Math.round(o(0, this._height));\n\t\t\t/^(top|min)$/i.test(this._options.verticalPosition) ? c = 0 + n : /^(middle|center)$/i.test(this._options.verticalPosition) ? c = this._height / 2 : /^(bottom|max)$/i.test(this._options.verticalPosition) && (c = this._height - n);\n\t\t\tfor (var _ = [], p = new h(l, c), d = new h(l, c), u = null, b = Math.round(o(0, 360)), f = 0; !(i <= 0);) {\n\t\t\t\tif (i--,\n\t\t\t\t\ta = Math.round((1 * Math.random() - .2) * this._options.horizontalSpeed),\n\t\t\t\t\tr = Math.round((1 * Math.random() - .5) * (.25 * this._height)),\n\t\t\t\t\t(u = new h).copy(d),\n\t\t\t\t\t\"right\" === t) {\n\t\t\t\t\tif (u.add(a, r),\n\t\t\t\t\t\td.x >= e)\n\t\t\t\t\t\tbreak\n\t\t\t\t} else if (\"left\" === t && (u.subtract(a, r),\n\t\t\t\t\td.x <= s))\n\t\t\t\t\tbreak;\n\t\t\t\t_.push({\n\t\t\t\t\tpoint1: new h(p.x, p.y),\n\t\t\t\t\tpoint2: new h(d.x, d.y),\n\t\t\t\t\tpoint3: u,\n\t\t\t\t\tcolor: b,\n\t\t\t\t\tdelay: f,\n\t\t\t\t\tdir: t,\n\t\t\t\t\talpha: 0,\n\t\t\t\t\tphase: 0\n\t\t\t\t}),\n\t\t\t\t\tp.copy(d),\n\t\t\t\t\td.copy(u),\n\t\t\t\t\tf += 4,\n\t\t\t\t\tb += this._options.colorCycleSpeed\n\t\t\t}\n\t\t\tthis._ribbons.push(_)\n\t\t},\n\t\t_drawRibbonSection: function (t) {\n\t\t\tif (t) {\n\t\t\t\tif (t.phase >= 1 && t.alpha <= 0)\n\t\t\t\t\treturn !0;\n\t\t\t\tif (t.delay <= 0) {\n\t\t\t\t\tif (t.phase += .02,\n\t\t\t\t\t\tt.alpha = 1 * Math.sin(t.phase),\n\t\t\t\t\t\tt.alpha = t.alpha <= 0 ? 0 : t.alpha,\n\t\t\t\t\t\tt.alpha = t.alpha >= 1 ? 1 : t.alpha,\n\t\t\t\t\t\tthis._options.animateSections) {\n\t\t\t\t\t\tvar i = .1 * Math.sin(1 + t.phase * Math.PI / 2);\n\t\t\t\t\t\t\"right\" === t.dir ? (t.point1.add(i, 0),\n\t\t\t\t\t\t\tt.point2.add(i, 0),\n\t\t\t\t\t\t\tt.point3.add(i, 0)) : (t.point1.subtract(i, 0),\n\t\t\t\t\t\t\t\tt.point2.subtract(i, 0),\n\t\t\t\t\t\t\t\tt.point3.subtract(i, 0)),\n\t\t\t\t\t\t\tt.point1.add(0, i),\n\t\t\t\t\t\t\tt.point2.add(0, i),\n\t\t\t\t\t\t\tt.point3.add(0, i)\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tt.delay -= .5;\n\t\t\t\tvar n = this._options.colorSaturation\n\t\t\t\t\t, o = this._options.colorBrightness\n\t\t\t\t\t, s = \"hsla(\" + t.color + \", \" + n + \", \" + o + \", \" + t.alpha + \" )\";\n\t\t\t\tthis._context.save(),\n\t\t\t\t\t0 !== this._options.parallaxAmount && this._context.translate(0, this._scroll * this._options.parallaxAmount),\n\t\t\t\t\tthis._context.beginPath(),\n\t\t\t\t\tthis._context.moveTo(t.point1.x, t.point1.y),\n\t\t\t\t\tthis._context.lineTo(t.point2.x, t.point2.y),\n\t\t\t\t\tthis._context.lineTo(t.point3.x, t.point3.y),\n\t\t\t\t\tthis._context.fillStyle = s,\n\t\t\t\t\tthis._context.fill(),\n\t\t\t\t\tthis._options.strokeSize > 0 && (this._context.lineWidth = this._options.strokeSize,\n\t\t\t\t\t\tthis._context.strokeStyle = s,\n\t\t\t\t\t\tthis._context.lineCap = \"round\",\n\t\t\t\t\t\tthis._context.stroke()),\n\t\t\t\t\tthis._context.restore()\n\t\t\t}\n\t\t\treturn !1\n\t\t},\n\t\t_onDraw: function () {\n\t\t\tfor (var t = 0, i = this._ribbons.length; t < i; ++t)\n\t\t\t\tthis._ribbons[t] || this._ribbons.splice(t, 1);\n\t\t\tthis._context.clearRect(0, 0, this._width, this._height);\n\t\t\tfor (var n = 0; n < this._ribbons.length; ++n) {\n\t\t\t\tfor (var o = this._ribbons[n], s = o.length, h = 0, e = 0; e < s; ++e)\n\t\t\t\t\tthis._drawRibbonSection(o[e]) && h++;\n\t\t\t\th >= s && (this._ribbons[n] = null)\n\t\t\t}\n\t\t\tthis._ribbons.length < this._options.ribbonCount && this.addRibbon(),\n\t\t\t\trequestAnimationFrame(this._onDraw)\n\t\t},\n\t\t_onResize: function (t) {\n\t\t\tvar i = s(t);\n\t\t\tthis._width = i.width,\n\t\t\t\tthis._height = i.height,\n\t\t\t\tthis._canvas && (this._canvas.width = this._width,\n\t\t\t\t\tthis._canvas.height = this._height,\n\t\t\t\t\tthis._context && (this._context.globalAlpha = this._options.colorAlpha))\n\t\t},\n\t\t_onScroll: function (t) {\n\t\t\tvar i = s(t);\n\t\t\tthis._scroll = i.scrolly\n\t\t}\n\t},\n\t\te\n}()),\n\tnew Ribbons({\n\t\tcolorSaturation: \"60%\",\n\t\tcolorBrightness: \"50%\",\n\t\tcolorAlpha: .5,\n\t\tcolorCycleSpeed: 5,\n\t\tverticalPosition: \"random\",\n\t\thorizontalSpeed: 200,\n\t\tribbonCount: 3,\n\t\tstrokeSize: 0,\n\t\tparallaxAmount: -.2,\n\t\tanimateSections: true\n\t});\n//# sourceMappingURL=/sm/c1df5c1b1d16877c7a2ef95f23335a100e5e7a2f76371ded79ec481b65ab6113.map\n/**\n * Skipped minification because the original files appears to be already minified.\n * Original file: /gh/EmoryHuang/BlogBeautify@1.1/star.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n(function () {\n\tlet cnt = 0;\n\tfunction t() {\n\t\ti(),\n\t\t\ta()\n\t}\n\tfunction i() {\n\t\tdocument.addEventListener(\"mousemove\", o),\n\t\t\tdocument.addEventListener(\"touchmove\", e),\n\t\t\tdocument.addEventListener(\"touchstart\", e),\n\t\t\twindow.addEventListener(\"resize\", n)\n\t}\n\tfunction n(t) {\n\t\td = window.innerWidth,\n\t\t\twindow.innerHeight\n\t}\n\tfunction e(t) {\n\t\tif (++cnt % 50 == 0)\n\t\t\tif (t.touches.length > 0)\n\t\t\t\tfor (var i = 0; i < t.touches.length; i++)\n\t\t\t\t\ts(t.touches[i].clientX, t.touches[i].clientY, r[Math.floor(Math.random() * r.length)])\n\t}\n\tfunction o(t) {\n\t\tif (++cnt % 50 == 0)\n\t\t\tu.x = t.clientX,\n\t\t\t\tu.y = t.clientY,\n\t\t\t\ts(u.x, u.y, r[Math.floor(Math.random() * r.length)])\n\t}\n\tfunction s(t, i, n) {\n\t\tvar e = new l;\n\t\te.init(t, i, n),\n\t\t\tf.push(e)\n\t}\n\tfunction h() {\n\t\tfor (var t = 0; t < f.length; t++)\n\t\t\tf[t].update();\n\t\tfor (t = f.length - 1; t >= 0; t--)\n\t\t\tf[t].lifeSpan < 0 && (f[t].die(),\n\t\t\t\tf.splice(t, 1))\n\t}\n\tfunction a() {\n\t\trequestAnimationFrame(a),\n\t\t\th()\n\t}\n\tfunction l() {\n\t\tthis.character = \"*\",\n\t\t\tthis.lifeSpan = 120,\n\t\t\tthis.initialStyles = {\n\t\t\t\tposition: \"fixed\",\n\t\t\t\ttop: \"0\",\n\t\t\t\tdisplay: \"block\",\n\t\t\t\tpointerEvents: \"none\",\n\t\t\t\t\"z-index\": \"10000000\",\n\t\t\t\tfontSize: \"20px\",\n\t\t\t\t\"will-change\": \"transform\"\n\t\t\t},\n\t\t\tthis.init = function (t, i, n) {\n\t\t\t\tthis.velocity = {\n\t\t\t\t\tx: (Math.random() < .5 ? -1 : 1) * (Math.random() / 2),\n\t\t\t\t\ty: 1\n\t\t\t\t},\n\t\t\t\t\tthis.position = {\n\t\t\t\t\t\tx: t - 10,\n\t\t\t\t\t\ty: i - 20\n\t\t\t\t\t},\n\t\t\t\t\tthis.initialStyles.color = n,\n\t\t\t\t\t// console.log(n),\n\t\t\t\t\tthis.element = document.createElement(\"span\"),\n\t\t\t\t\tthis.element.innerHTML = this.character,\n\t\t\t\t\tc(this.element, this.initialStyles),\n\t\t\t\t\tthis.update(),\n\t\t\t\t\tdocument.body.appendChild(this.element)\n\t\t\t}\n\t\t\t,\n\t\t\tthis.update = function () {\n\t\t\t\tthis.position.x += this.velocity.x,\n\t\t\t\t\tthis.position.y += this.velocity.y,\n\t\t\t\t\tthis.lifeSpan--,\n\t\t\t\t\tthis.element.style.transform = \"translate3d(\" + this.position.x + \"px,\" + this.position.y + \"px,0) scale(\" + this.lifeSpan / 120 + \")\"\n\t\t\t}\n\t\t\t,\n\t\t\tthis.die = function () {\n\t\t\t\tthis.element.parentNode.removeChild(this.element)\n\t\t\t}\n\t}\n\tfunction c(t, i) {\n\t\tfor (var n in i)\n\t\t\tt.style[n] = i[n]\n\t}\n\tvar r = [\"#D61C59\", \"#E7D84B\", \"#1B8798\"]\n\t\t, d = window.innerWidth\n\t\t, u = (window.innerHeight,\n\t\t{\n\t\t\tx: d / 2,\n\t\t\ty: d / 2\n\t\t})\n\t\t, f = [];\n\tt()\n}\n)();\ndocument.addEventListener('DOMContentLoaded', function () {\n\tsetTimeout(() => {\n\t\t//不同的日期显示不同的样式，200 天为黄色提示，400天为红色提示，可以自己定义。\n\t\tlet warningDay = 200;\n\t\tlet errorDay = 600;\n\t\t// 确保能够获取到文章时间以及在文章详情页\n\t\tlet times = document.getElementsByTagName('time');\n\t\tif (times.length === 0) { return; }\n\t\tlet posts = document.getElementsByClassName('footer-inner');\n\t\tif (posts.length === 0) { return; }\n\n\t\t// 获取系统当前的时间\n\t\tlet pubTime = new Date(times[0].dateTime);  /* 文章发布时间戳 */\n\t\tlet now = Date.now()  /* 当前时间戳 */\n\t\tlet interval = parseInt(now - pubTime)\n\t\tlet days = parseInt(interval / 86400000)\n\t\t/* 发布时间超过指定时间（毫秒） */\n\t\tif (interval > warningDay * 3600 * 24 * 1000 && interval < errorDay * 3600 * 24 * 1000) {\n\t\t\tposts[0].innerHTML = posts[0].innerHTML + '<div>' +\n\t\t\t\t'<strong>提示</strong><p>这是一篇发布于 ' + days + ' 天前的文章，部分信息可能已发生改变，请注意甄别。</p>' +\n\t\t\t\t'</div>';\n\t\t} else if (interval >= errorDay * 3600 * 24 * 1000) {\n\t\t\tposts[0].innerHTML = posts[0].innerHTML + '<div>' +\n\t\t\t\t'<strong>提示</strong><p>这是一篇发布于 ' + days + ' 天前的文章，部分信息可能已发生改变，请注意甄别。</p>' +\n\t\t\t\t'</div>';\n\t\t}\n\t}, 100);\n});"},{"_content":"// @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&dn=expat.txt Expat\n//\n// AnchorJS - v5.0.0 - 2023-01-18\n// https://www.bryanbraun.com/anchorjs/\n// Copyright (c) 2023 Bryan Braun; Licensed MIT\n//\n// @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&dn=expat.txt Expat\n!function (A, e) { \"use strict\"; \"function\" == typeof define && define.amd ? define([], e) : \"object\" == typeof module && module.exports ? module.exports = e() : (A.AnchorJS = e(), A.anchors = new A.AnchorJS) }(globalThis, function () { \"use strict\"; return function (A) { function u(A) { A.icon = Object.prototype.hasOwnProperty.call(A, \"icon\") ? A.icon : \"\", A.visible = Object.prototype.hasOwnProperty.call(A, \"visible\") ? A.visible : \"hover\", A.placement = Object.prototype.hasOwnProperty.call(A, \"placement\") ? A.placement : \"right\", A.ariaLabel = Object.prototype.hasOwnProperty.call(A, \"ariaLabel\") ? A.ariaLabel : \"Anchor\", A.class = Object.prototype.hasOwnProperty.call(A, \"class\") ? A.class : \"\", A.base = Object.prototype.hasOwnProperty.call(A, \"base\") ? A.base : \"\", A.truncate = Object.prototype.hasOwnProperty.call(A, \"truncate\") ? Math.floor(A.truncate) : 64, A.titleText = Object.prototype.hasOwnProperty.call(A, \"titleText\") ? A.titleText : \"\" } function d(A) { var e; if (\"string\" == typeof A || A instanceof String) e = [].slice.call(document.querySelectorAll(A)); else { if (!(Array.isArray(A) || A instanceof NodeList)) throw new TypeError(\"The selector provided to AnchorJS was invalid.\"); e = [].slice.call(A) } return e } this.options = A || {}, this.elements = [], u(this.options), this.add = function (A) { var e, t, o, i, n, s, a, r, l, c, h, p = []; if (u(this.options), 0 !== (e = d(A = A || \"h2, h3, h4, h5, h6\")).length) { for (null === document.head.querySelector(\"style.anchorjs\") && ((A = document.createElement(\"style\")).className = \"anchorjs\", A.appendChild(document.createTextNode(\"\")), void 0 === (h = document.head.querySelector('[rel=\"stylesheet\"],style')) ? document.head.appendChild(A) : document.head.insertBefore(A, h), A.sheet.insertRule(\".anchorjs-link{opacity:0;text-decoration:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}\", A.sheet.cssRules.length), A.sheet.insertRule(\":hover>.anchorjs-link,.anchorjs-link:focus{opacity:1}\", A.sheet.cssRules.length), A.sheet.insertRule(\"[data-anchorjs-icon]::after{content:attr(data-anchorjs-icon)}\", A.sheet.cssRules.length), A.sheet.insertRule('@font-face{font-family:anchorjs-icons;src:url(data:n/a;base64,AAEAAAALAIAAAwAwT1MvMg8yG2cAAAE4AAAAYGNtYXDp3gC3AAABpAAAAExnYXNwAAAAEAAAA9wAAAAIZ2x5ZlQCcfwAAAH4AAABCGhlYWQHFvHyAAAAvAAAADZoaGVhBnACFwAAAPQAAAAkaG10eASAADEAAAGYAAAADGxvY2EACACEAAAB8AAAAAhtYXhwAAYAVwAAARgAAAAgbmFtZQGOH9cAAAMAAAAAunBvc3QAAwAAAAADvAAAACAAAQAAAAEAAHzE2p9fDzz1AAkEAAAAAADRecUWAAAAANQA6R8AAAAAAoACwAAAAAgAAgAAAAAAAAABAAADwP/AAAACgAAA/9MCrQABAAAAAAAAAAAAAAAAAAAAAwABAAAAAwBVAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAMCQAGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAg//0DwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAAIAAAACgAAxAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADAAAAAIAAgAAgAAACDpy//9//8AAAAg6cv//f///+EWNwADAAEAAAAAAAAAAAAAAAAACACEAAEAAAAAAAAAAAAAAAAxAAACAAQARAKAAsAAKwBUAAABIiYnJjQ3NzY2MzIWFxYUBwcGIicmNDc3NjQnJiYjIgYHBwYUFxYUBwYGIwciJicmNDc3NjIXFhQHBwYUFxYWMzI2Nzc2NCcmNDc2MhcWFAcHBgYjARQGDAUtLXoWOR8fORYtLTgKGwoKCjgaGg0gEhIgDXoaGgkJBQwHdR85Fi0tOAobCgoKOBoaDSASEiANehoaCQkKGwotLXoWOR8BMwUFLYEuehYXFxYugC44CQkKGwo4GkoaDQ0NDXoaShoKGwoFBe8XFi6ALjgJCQobCjgaShoNDQ0NehpKGgobCgoKLYEuehYXAAAADACWAAEAAAAAAAEACAAAAAEAAAAAAAIAAwAIAAEAAAAAAAMACAAAAAEAAAAAAAQACAAAAAEAAAAAAAUAAQALAAEAAAAAAAYACAAAAAMAAQQJAAEAEAAMAAMAAQQJAAIABgAcAAMAAQQJAAMAEAAMAAMAAQQJAAQAEAAMAAMAAQQJAAUAAgAiAAMAAQQJAAYAEAAMYW5jaG9yanM0MDBAAGEAbgBjAGgAbwByAGoAcwA0ADAAMABAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAH//wAP) format(\"truetype\")}', A.sheet.cssRules.length)), h = document.querySelectorAll(\"[id]\"), t = [].map.call(h, function (A) { return A.id }), i = 0; i < e.length; i++)if (this.hasAnchorJSLink(e[i])) p.push(i); else { if (e[i].hasAttribute(\"id\")) o = e[i].getAttribute(\"id\"); else if (e[i].hasAttribute(\"data-anchor-id\")) o = e[i].getAttribute(\"data-anchor-id\"); else { for (r = a = this.urlify(e[i].textContent), s = 0; n = t.indexOf(r = void 0 !== n ? a + \"-\" + s : r), s += 1, -1 !== n;); n = void 0, t.push(r), e[i].setAttribute(\"id\", r), o = r } (l = document.createElement(\"a\")).className = \"anchorjs-link \" + this.options.class, l.setAttribute(\"aria-label\", this.options.ariaLabel), l.setAttribute(\"data-anchorjs-icon\", this.options.icon), this.options.titleText && (l.title = this.options.titleText), c = document.querySelector(\"base\") ? window.location.pathname + window.location.search : \"\", c = this.options.base || c, l.href = c + \"#\" + o, \"always\" === this.options.visible && (l.style.opacity = \"1\"), \"\" === this.options.icon && (l.style.font = \"1em/1 anchorjs-icons\", \"left\" === this.options.placement) && (l.style.lineHeight = \"inherit\"), \"left\" === this.options.placement ? (l.style.position = \"absolute\", l.style.marginLeft = \"-1.25em\", l.style.paddingRight = \".25em\", l.style.paddingLeft = \".25em\", e[i].insertBefore(l, e[i].firstChild)) : (l.style.marginLeft = \".1875em\", l.style.paddingRight = \".1875em\", l.style.paddingLeft = \".1875em\", e[i].appendChild(l)) } for (i = 0; i < p.length; i++)e.splice(p[i] - i, 1); this.elements = this.elements.concat(e) } return this }, this.remove = function (A) { for (var e, t, o = d(A), i = 0; i < o.length; i++)(t = o[i].querySelector(\".anchorjs-link\")) && (-1 !== (e = this.elements.indexOf(o[i])) && this.elements.splice(e, 1), o[i].removeChild(t)); return this }, this.removeAll = function () { this.remove(this.elements) }, this.urlify = function (A) { var e = document.createElement(\"textarea\"); return e.innerHTML = A, A = e.value, this.options.truncate || u(this.options), A.trim().replace(/'/gi, \"\").replace(/[& +$,:;=?@\"#{}|^~[`%!'<>\\]./()*\\\\\\n\\t\\b\\v\\u00A0]/g, \"-\").replace(/-{2,}/g, \"-\").substring(0, this.options.truncate).replace(/^-+|-+$/gm, \"\").toLowerCase() }, this.hasAnchorJSLink = function (A) { var e = A.firstChild && -1 < (\" \" + A.firstChild.className + \" \").indexOf(\" anchorjs-link \"), A = A.lastChild && -1 < (\" \" + A.lastChild.className + \" \").indexOf(\" anchorjs-link \"); return e || A || !1 } } });\n// @license-end","source":"js/anchor.min.js","raw":"// @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&dn=expat.txt Expat\n//\n// AnchorJS - v5.0.0 - 2023-01-18\n// https://www.bryanbraun.com/anchorjs/\n// Copyright (c) 2023 Bryan Braun; Licensed MIT\n//\n// @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&dn=expat.txt Expat\n!function (A, e) { \"use strict\"; \"function\" == typeof define && define.amd ? define([], e) : \"object\" == typeof module && module.exports ? module.exports = e() : (A.AnchorJS = e(), A.anchors = new A.AnchorJS) }(globalThis, function () { \"use strict\"; return function (A) { function u(A) { A.icon = Object.prototype.hasOwnProperty.call(A, \"icon\") ? A.icon : \"\", A.visible = Object.prototype.hasOwnProperty.call(A, \"visible\") ? A.visible : \"hover\", A.placement = Object.prototype.hasOwnProperty.call(A, \"placement\") ? A.placement : \"right\", A.ariaLabel = Object.prototype.hasOwnProperty.call(A, \"ariaLabel\") ? A.ariaLabel : \"Anchor\", A.class = Object.prototype.hasOwnProperty.call(A, \"class\") ? A.class : \"\", A.base = Object.prototype.hasOwnProperty.call(A, \"base\") ? A.base : \"\", A.truncate = Object.prototype.hasOwnProperty.call(A, \"truncate\") ? Math.floor(A.truncate) : 64, A.titleText = Object.prototype.hasOwnProperty.call(A, \"titleText\") ? A.titleText : \"\" } function d(A) { var e; if (\"string\" == typeof A || A instanceof String) e = [].slice.call(document.querySelectorAll(A)); else { if (!(Array.isArray(A) || A instanceof NodeList)) throw new TypeError(\"The selector provided to AnchorJS was invalid.\"); e = [].slice.call(A) } return e } this.options = A || {}, this.elements = [], u(this.options), this.add = function (A) { var e, t, o, i, n, s, a, r, l, c, h, p = []; if (u(this.options), 0 !== (e = d(A = A || \"h2, h3, h4, h5, h6\")).length) { for (null === document.head.querySelector(\"style.anchorjs\") && ((A = document.createElement(\"style\")).className = \"anchorjs\", A.appendChild(document.createTextNode(\"\")), void 0 === (h = document.head.querySelector('[rel=\"stylesheet\"],style')) ? document.head.appendChild(A) : document.head.insertBefore(A, h), A.sheet.insertRule(\".anchorjs-link{opacity:0;text-decoration:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}\", A.sheet.cssRules.length), A.sheet.insertRule(\":hover>.anchorjs-link,.anchorjs-link:focus{opacity:1}\", A.sheet.cssRules.length), A.sheet.insertRule(\"[data-anchorjs-icon]::after{content:attr(data-anchorjs-icon)}\", A.sheet.cssRules.length), A.sheet.insertRule('@font-face{font-family:anchorjs-icons;src:url(data:n/a;base64,AAEAAAALAIAAAwAwT1MvMg8yG2cAAAE4AAAAYGNtYXDp3gC3AAABpAAAAExnYXNwAAAAEAAAA9wAAAAIZ2x5ZlQCcfwAAAH4AAABCGhlYWQHFvHyAAAAvAAAADZoaGVhBnACFwAAAPQAAAAkaG10eASAADEAAAGYAAAADGxvY2EACACEAAAB8AAAAAhtYXhwAAYAVwAAARgAAAAgbmFtZQGOH9cAAAMAAAAAunBvc3QAAwAAAAADvAAAACAAAQAAAAEAAHzE2p9fDzz1AAkEAAAAAADRecUWAAAAANQA6R8AAAAAAoACwAAAAAgAAgAAAAAAAAABAAADwP/AAAACgAAA/9MCrQABAAAAAAAAAAAAAAAAAAAAAwABAAAAAwBVAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAMCQAGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAg//0DwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAAIAAAACgAAxAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADAAAAAIAAgAAgAAACDpy//9//8AAAAg6cv//f///+EWNwADAAEAAAAAAAAAAAAAAAAACACEAAEAAAAAAAAAAAAAAAAxAAACAAQARAKAAsAAKwBUAAABIiYnJjQ3NzY2MzIWFxYUBwcGIicmNDc3NjQnJiYjIgYHBwYUFxYUBwYGIwciJicmNDc3NjIXFhQHBwYUFxYWMzI2Nzc2NCcmNDc2MhcWFAcHBgYjARQGDAUtLXoWOR8fORYtLTgKGwoKCjgaGg0gEhIgDXoaGgkJBQwHdR85Fi0tOAobCgoKOBoaDSASEiANehoaCQkKGwotLXoWOR8BMwUFLYEuehYXFxYugC44CQkKGwo4GkoaDQ0NDXoaShoKGwoFBe8XFi6ALjgJCQobCjgaShoNDQ0NehpKGgobCgoKLYEuehYXAAAADACWAAEAAAAAAAEACAAAAAEAAAAAAAIAAwAIAAEAAAAAAAMACAAAAAEAAAAAAAQACAAAAAEAAAAAAAUAAQALAAEAAAAAAAYACAAAAAMAAQQJAAEAEAAMAAMAAQQJAAIABgAcAAMAAQQJAAMAEAAMAAMAAQQJAAQAEAAMAAMAAQQJAAUAAgAiAAMAAQQJAAYAEAAMYW5jaG9yanM0MDBAAGEAbgBjAGgAbwByAGoAcwA0ADAAMABAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAH//wAP) format(\"truetype\")}', A.sheet.cssRules.length)), h = document.querySelectorAll(\"[id]\"), t = [].map.call(h, function (A) { return A.id }), i = 0; i < e.length; i++)if (this.hasAnchorJSLink(e[i])) p.push(i); else { if (e[i].hasAttribute(\"id\")) o = e[i].getAttribute(\"id\"); else if (e[i].hasAttribute(\"data-anchor-id\")) o = e[i].getAttribute(\"data-anchor-id\"); else { for (r = a = this.urlify(e[i].textContent), s = 0; n = t.indexOf(r = void 0 !== n ? a + \"-\" + s : r), s += 1, -1 !== n;); n = void 0, t.push(r), e[i].setAttribute(\"id\", r), o = r } (l = document.createElement(\"a\")).className = \"anchorjs-link \" + this.options.class, l.setAttribute(\"aria-label\", this.options.ariaLabel), l.setAttribute(\"data-anchorjs-icon\", this.options.icon), this.options.titleText && (l.title = this.options.titleText), c = document.querySelector(\"base\") ? window.location.pathname + window.location.search : \"\", c = this.options.base || c, l.href = c + \"#\" + o, \"always\" === this.options.visible && (l.style.opacity = \"1\"), \"\" === this.options.icon && (l.style.font = \"1em/1 anchorjs-icons\", \"left\" === this.options.placement) && (l.style.lineHeight = \"inherit\"), \"left\" === this.options.placement ? (l.style.position = \"absolute\", l.style.marginLeft = \"-1.25em\", l.style.paddingRight = \".25em\", l.style.paddingLeft = \".25em\", e[i].insertBefore(l, e[i].firstChild)) : (l.style.marginLeft = \".1875em\", l.style.paddingRight = \".1875em\", l.style.paddingLeft = \".1875em\", e[i].appendChild(l)) } for (i = 0; i < p.length; i++)e.splice(p[i] - i, 1); this.elements = this.elements.concat(e) } return this }, this.remove = function (A) { for (var e, t, o = d(A), i = 0; i < o.length; i++)(t = o[i].querySelector(\".anchorjs-link\")) && (-1 !== (e = this.elements.indexOf(o[i])) && this.elements.splice(e, 1), o[i].removeChild(t)); return this }, this.removeAll = function () { this.remove(this.elements) }, this.urlify = function (A) { var e = document.createElement(\"textarea\"); return e.innerHTML = A, A = e.value, this.options.truncate || u(this.options), A.trim().replace(/'/gi, \"\").replace(/[& +$,:;=?@\"#{}|^~[`%!'<>\\]./()*\\\\\\n\\t\\b\\v\\u00A0]/g, \"-\").replace(/-{2,}/g, \"-\").substring(0, this.options.truncate).replace(/^-+|-+$/gm, \"\").toLowerCase() }, this.hasAnchorJSLink = function (A) { var e = A.firstChild && -1 < (\" \" + A.firstChild.className + \" \").indexOf(\" anchorjs-link \"), A = A.lastChild && -1 < (\" \" + A.lastChild.className + \" \").indexOf(\" anchorjs-link \"); return e || A || !1 } } });\n// @license-end","date":"2025-09-18T07:47:08.005Z","updated":"2025-09-18T07:47:08.005Z","path":"js/anchor.min.js","layout":"false","title":"","comments":1,"_id":"cmfp5q6ai000c3kv3g12zcc5c","content":"// @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&dn=expat.txt Expat\n//\n// AnchorJS - v5.0.0 - 2023-01-18\n// https://www.bryanbraun.com/anchorjs/\n// Copyright (c) 2023 Bryan Braun; Licensed MIT\n//\n// @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&dn=expat.txt Expat\n!function (A, e) { \"use strict\"; \"function\" == typeof define && define.amd ? define([], e) : \"object\" == typeof module && module.exports ? module.exports = e() : (A.AnchorJS = e(), A.anchors = new A.AnchorJS) }(globalThis, function () { \"use strict\"; return function (A) { function u(A) { A.icon = Object.prototype.hasOwnProperty.call(A, \"icon\") ? A.icon : \"\", A.visible = Object.prototype.hasOwnProperty.call(A, \"visible\") ? A.visible : \"hover\", A.placement = Object.prototype.hasOwnProperty.call(A, \"placement\") ? A.placement : \"right\", A.ariaLabel = Object.prototype.hasOwnProperty.call(A, \"ariaLabel\") ? A.ariaLabel : \"Anchor\", A.class = Object.prototype.hasOwnProperty.call(A, \"class\") ? A.class : \"\", A.base = Object.prototype.hasOwnProperty.call(A, \"base\") ? A.base : \"\", A.truncate = Object.prototype.hasOwnProperty.call(A, \"truncate\") ? Math.floor(A.truncate) : 64, A.titleText = Object.prototype.hasOwnProperty.call(A, \"titleText\") ? A.titleText : \"\" } function d(A) { var e; if (\"string\" == typeof A || A instanceof String) e = [].slice.call(document.querySelectorAll(A)); else { if (!(Array.isArray(A) || A instanceof NodeList)) throw new TypeError(\"The selector provided to AnchorJS was invalid.\"); e = [].slice.call(A) } return e } this.options = A || {}, this.elements = [], u(this.options), this.add = function (A) { var e, t, o, i, n, s, a, r, l, c, h, p = []; if (u(this.options), 0 !== (e = d(A = A || \"h2, h3, h4, h5, h6\")).length) { for (null === document.head.querySelector(\"style.anchorjs\") && ((A = document.createElement(\"style\")).className = \"anchorjs\", A.appendChild(document.createTextNode(\"\")), void 0 === (h = document.head.querySelector('[rel=\"stylesheet\"],style')) ? document.head.appendChild(A) : document.head.insertBefore(A, h), A.sheet.insertRule(\".anchorjs-link{opacity:0;text-decoration:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}\", A.sheet.cssRules.length), A.sheet.insertRule(\":hover>.anchorjs-link,.anchorjs-link:focus{opacity:1}\", A.sheet.cssRules.length), A.sheet.insertRule(\"[data-anchorjs-icon]::after{content:attr(data-anchorjs-icon)}\", A.sheet.cssRules.length), A.sheet.insertRule('@font-face{font-family:anchorjs-icons;src:url(data:n/a;base64,AAEAAAALAIAAAwAwT1MvMg8yG2cAAAE4AAAAYGNtYXDp3gC3AAABpAAAAExnYXNwAAAAEAAAA9wAAAAIZ2x5ZlQCcfwAAAH4AAABCGhlYWQHFvHyAAAAvAAAADZoaGVhBnACFwAAAPQAAAAkaG10eASAADEAAAGYAAAADGxvY2EACACEAAAB8AAAAAhtYXhwAAYAVwAAARgAAAAgbmFtZQGOH9cAAAMAAAAAunBvc3QAAwAAAAADvAAAACAAAQAAAAEAAHzE2p9fDzz1AAkEAAAAAADRecUWAAAAANQA6R8AAAAAAoACwAAAAAgAAgAAAAAAAAABAAADwP/AAAACgAAA/9MCrQABAAAAAAAAAAAAAAAAAAAAAwABAAAAAwBVAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAMCQAGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAg//0DwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAAIAAAACgAAxAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADAAAAAIAAgAAgAAACDpy//9//8AAAAg6cv//f///+EWNwADAAEAAAAAAAAAAAAAAAAACACEAAEAAAAAAAAAAAAAAAAxAAACAAQARAKAAsAAKwBUAAABIiYnJjQ3NzY2MzIWFxYUBwcGIicmNDc3NjQnJiYjIgYHBwYUFxYUBwYGIwciJicmNDc3NjIXFhQHBwYUFxYWMzI2Nzc2NCcmNDc2MhcWFAcHBgYjARQGDAUtLXoWOR8fORYtLTgKGwoKCjgaGg0gEhIgDXoaGgkJBQwHdR85Fi0tOAobCgoKOBoaDSASEiANehoaCQkKGwotLXoWOR8BMwUFLYEuehYXFxYugC44CQkKGwo4GkoaDQ0NDXoaShoKGwoFBe8XFi6ALjgJCQobCjgaShoNDQ0NehpKGgobCgoKLYEuehYXAAAADACWAAEAAAAAAAEACAAAAAEAAAAAAAIAAwAIAAEAAAAAAAMACAAAAAEAAAAAAAQACAAAAAEAAAAAAAUAAQALAAEAAAAAAAYACAAAAAMAAQQJAAEAEAAMAAMAAQQJAAIABgAcAAMAAQQJAAMAEAAMAAMAAQQJAAQAEAAMAAMAAQQJAAUAAgAiAAMAAQQJAAYAEAAMYW5jaG9yanM0MDBAAGEAbgBjAGgAbwByAGoAcwA0ADAAMABAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAH//wAP) format(\"truetype\")}', A.sheet.cssRules.length)), h = document.querySelectorAll(\"[id]\"), t = [].map.call(h, function (A) { return A.id }), i = 0; i < e.length; i++)if (this.hasAnchorJSLink(e[i])) p.push(i); else { if (e[i].hasAttribute(\"id\")) o = e[i].getAttribute(\"id\"); else if (e[i].hasAttribute(\"data-anchor-id\")) o = e[i].getAttribute(\"data-anchor-id\"); else { for (r = a = this.urlify(e[i].textContent), s = 0; n = t.indexOf(r = void 0 !== n ? a + \"-\" + s : r), s += 1, -1 !== n;); n = void 0, t.push(r), e[i].setAttribute(\"id\", r), o = r } (l = document.createElement(\"a\")).className = \"anchorjs-link \" + this.options.class, l.setAttribute(\"aria-label\", this.options.ariaLabel), l.setAttribute(\"data-anchorjs-icon\", this.options.icon), this.options.titleText && (l.title = this.options.titleText), c = document.querySelector(\"base\") ? window.location.pathname + window.location.search : \"\", c = this.options.base || c, l.href = c + \"#\" + o, \"always\" === this.options.visible && (l.style.opacity = \"1\"), \"\" === this.options.icon && (l.style.font = \"1em/1 anchorjs-icons\", \"left\" === this.options.placement) && (l.style.lineHeight = \"inherit\"), \"left\" === this.options.placement ? (l.style.position = \"absolute\", l.style.marginLeft = \"-1.25em\", l.style.paddingRight = \".25em\", l.style.paddingLeft = \".25em\", e[i].insertBefore(l, e[i].firstChild)) : (l.style.marginLeft = \".1875em\", l.style.paddingRight = \".1875em\", l.style.paddingLeft = \".1875em\", e[i].appendChild(l)) } for (i = 0; i < p.length; i++)e.splice(p[i] - i, 1); this.elements = this.elements.concat(e) } return this }, this.remove = function (A) { for (var e, t, o = d(A), i = 0; i < o.length; i++)(t = o[i].querySelector(\".anchorjs-link\")) && (-1 !== (e = this.elements.indexOf(o[i])) && this.elements.splice(e, 1), o[i].removeChild(t)); return this }, this.removeAll = function () { this.remove(this.elements) }, this.urlify = function (A) { var e = document.createElement(\"textarea\"); return e.innerHTML = A, A = e.value, this.options.truncate || u(this.options), A.trim().replace(/'/gi, \"\").replace(/[& +$,:;=?@\"#{}|^~[`%!'<>\\]./()*\\\\\\n\\t\\b\\v\\u00A0]/g, \"-\").replace(/-{2,}/g, \"-\").substring(0, this.options.truncate).replace(/^-+|-+$/gm, \"\").toLowerCase() }, this.hasAnchorJSLink = function (A) { var e = A.firstChild && -1 < (\" \" + A.firstChild.className + \" \").indexOf(\" anchorjs-link \"), A = A.lastChild && -1 < (\" \" + A.lastChild.className + \" \").indexOf(\" anchorjs-link \"); return e || A || !1 } } });\n// @license-end"},{"_content":".admonition {\n\tmargin: 1.5625em 0;\n\tpadding: .6rem;\n\toverflow: hidden;\n\tfont-size: .64rem;\n\tpage-break-inside: avoid;\n\tborder-left: .3rem solid #42b983;\n\tborder-radius: .3rem;\n\tbox-shadow: 0 0.1rem 0.4rem rgba(0,0,0,.05), 0 0 0.05rem rgba(0,0,0,.1);\n\tbackground-color: #fafafa;\n}\n\np.admonition-title {\n\tposition: relative;\n\tmargin: -.6rem -.6rem .8em -.6rem !important;\n\tpadding: .4rem .6rem .4rem 2.5rem;\n\tfont-weight: 700;\n\tbackground-color: rgba(66, 185, 131, .1);\n}\n\n.admonition-title::before {\n\tposition: absolute;\n\ttop: .9rem;\n\tleft: 1rem;\n\twidth: 12px;\n\theight: 12px;\n\tbackground-color: #42b983;\n\tborder-radius: 50%;\n\tcontent: ' ';\n}\n\n.info > .admonition-title, .todo > .admonition-title {\n\tbackground-color: rgba(0,184,212,.1);\n}\n\n.warning > .admonition-title, .attention > .admonition-title, .caution > .admonition-title {\n\tbackground-color: rgba(255,145,0,.1);\n}\n\n.failure > .admonition-title, .missing > .admonition-title, .fail > .admonition-title, .error > .admonition-title {\n\tbackground-color: rgba(255,82,82,.1);\n}\n\n.admonition.info, .admonition.todo {\n\tborder-color: #00b8d4;\n}\n\n.admonition.warning, .admonition.attention, .admonition.caution {\n\tborder-color: #ff9100;\n}\n\n.admonition.failure, .admonition.missing, .admonition.fail, .admonition.error {\n\tborder-color: #ff5252;\n}\n\n.info > .admonition-title::before, .todo > .admonition-title::before {\n\tbackground-color: #00b8d4;\n\tborder-radius: 50%;\n}\n\n.warning > .admonition-title::before, .attention > .admonition-title::before, .caution > .admonition-title::before {\n\tbackground-color: #ff9100;\n\tborder-radius: 50%;\n}\n\n.failure > .admonition-title::before, .missing > .admonition-title::before, .fail > .admonition-title::before, .error > .admonition-title::before {\n\tbackground-color: #ff5252;\n\t;\n\tborder-radius: 50%;\n}\n\n.admonition > :last-child {\n\tmargin-bottom: 0 !important;\n}\n.admonition {\n\tmargin: 1.5625em 0;\n\tpadding: .6rem;\n\toverflow: hidden;\n\tfont-size: .64rem;\n\tpage-break-inside: avoid;\n\tborder-left: .3rem solid #42b983;\n\tborder-radius: .3rem;\n\tbox-shadow: 0 0.1rem 0.4rem rgba(0,0,0,.05), 0 0 0.05rem rgba(0,0,0,.1);\n\tbackground-color: #fafafa;\n}\n\np.admonition-title {\n\tposition: relative;\n\tmargin: -.6rem -.6rem .8em -.6rem !important;\n\tpadding: .4rem .6rem .4rem 2.5rem;\n\tfont-weight: 700;\n\tbackground-color: rgba(66, 185, 131, .1);\n}\n\n.admonition-title::before {\n\tposition: absolute;\n\ttop: .9rem;\n\tleft: 1rem;\n\twidth: 12px;\n\theight: 12px;\n\tbackground-color: #42b983;\n\tborder-radius: 50%;\n\tcontent: ' ';\n}\n\n.info > .admonition-title, .todo > .admonition-title {\n\tbackground-color: rgba(0,184,212,.1);\n}\n\n.warning > .admonition-title, .attention > .admonition-title, .caution > .admonition-title {\n\tbackground-color: rgba(255,145,0,.1);\n}\n\n.failure > .admonition-title, .missing > .admonition-title, .fail > .admonition-title, .error > .admonition-title {\n\tbackground-color: rgba(255,82,82,.1);\n}\n\n.admonition.info, .admonition.todo {\n\tborder-color: #00b8d4;\n}\n\n.admonition.warning, .admonition.attention, .admonition.caution {\n\tborder-color: #ff9100;\n}\n\n.admonition.failure, .admonition.missing, .admonition.fail, .admonition.error {\n\tborder-color: #ff5252;\n}\n\n.info > .admonition-title::before, .todo > .admonition-title::before {\n\tbackground-color: #00b8d4;\n\tborder-radius: 50%;\n}\n\n.warning > .admonition-title::before, .attention > .admonition-title::before, .caution > .admonition-title::before {\n\tbackground-color: #ff9100;\n\tborder-radius: 50%;\n}\n\n.failure > .admonition-title::before, .missing > .admonition-title::before, .fail > .admonition-title::before, .error > .admonition-title::before {\n\tbackground-color: #ff5252;\n\t;\n\tborder-radius: 50%;\n}\n\n.admonition > :last-child {\n\tmargin-bottom: 0 !important;\n}","source":"style/style.css","raw":".admonition {\n\tmargin: 1.5625em 0;\n\tpadding: .6rem;\n\toverflow: hidden;\n\tfont-size: .64rem;\n\tpage-break-inside: avoid;\n\tborder-left: .3rem solid #42b983;\n\tborder-radius: .3rem;\n\tbox-shadow: 0 0.1rem 0.4rem rgba(0,0,0,.05), 0 0 0.05rem rgba(0,0,0,.1);\n\tbackground-color: #fafafa;\n}\n\np.admonition-title {\n\tposition: relative;\n\tmargin: -.6rem -.6rem .8em -.6rem !important;\n\tpadding: .4rem .6rem .4rem 2.5rem;\n\tfont-weight: 700;\n\tbackground-color: rgba(66, 185, 131, .1);\n}\n\n.admonition-title::before {\n\tposition: absolute;\n\ttop: .9rem;\n\tleft: 1rem;\n\twidth: 12px;\n\theight: 12px;\n\tbackground-color: #42b983;\n\tborder-radius: 50%;\n\tcontent: ' ';\n}\n\n.info > .admonition-title, .todo > .admonition-title {\n\tbackground-color: rgba(0,184,212,.1);\n}\n\n.warning > .admonition-title, .attention > .admonition-title, .caution > .admonition-title {\n\tbackground-color: rgba(255,145,0,.1);\n}\n\n.failure > .admonition-title, .missing > .admonition-title, .fail > .admonition-title, .error > .admonition-title {\n\tbackground-color: rgba(255,82,82,.1);\n}\n\n.admonition.info, .admonition.todo {\n\tborder-color: #00b8d4;\n}\n\n.admonition.warning, .admonition.attention, .admonition.caution {\n\tborder-color: #ff9100;\n}\n\n.admonition.failure, .admonition.missing, .admonition.fail, .admonition.error {\n\tborder-color: #ff5252;\n}\n\n.info > .admonition-title::before, .todo > .admonition-title::before {\n\tbackground-color: #00b8d4;\n\tborder-radius: 50%;\n}\n\n.warning > .admonition-title::before, .attention > .admonition-title::before, .caution > .admonition-title::before {\n\tbackground-color: #ff9100;\n\tborder-radius: 50%;\n}\n\n.failure > .admonition-title::before, .missing > .admonition-title::before, .fail > .admonition-title::before, .error > .admonition-title::before {\n\tbackground-color: #ff5252;\n\t;\n\tborder-radius: 50%;\n}\n\n.admonition > :last-child {\n\tmargin-bottom: 0 !important;\n}\n.admonition {\n\tmargin: 1.5625em 0;\n\tpadding: .6rem;\n\toverflow: hidden;\n\tfont-size: .64rem;\n\tpage-break-inside: avoid;\n\tborder-left: .3rem solid #42b983;\n\tborder-radius: .3rem;\n\tbox-shadow: 0 0.1rem 0.4rem rgba(0,0,0,.05), 0 0 0.05rem rgba(0,0,0,.1);\n\tbackground-color: #fafafa;\n}\n\np.admonition-title {\n\tposition: relative;\n\tmargin: -.6rem -.6rem .8em -.6rem !important;\n\tpadding: .4rem .6rem .4rem 2.5rem;\n\tfont-weight: 700;\n\tbackground-color: rgba(66, 185, 131, .1);\n}\n\n.admonition-title::before {\n\tposition: absolute;\n\ttop: .9rem;\n\tleft: 1rem;\n\twidth: 12px;\n\theight: 12px;\n\tbackground-color: #42b983;\n\tborder-radius: 50%;\n\tcontent: ' ';\n}\n\n.info > .admonition-title, .todo > .admonition-title {\n\tbackground-color: rgba(0,184,212,.1);\n}\n\n.warning > .admonition-title, .attention > .admonition-title, .caution > .admonition-title {\n\tbackground-color: rgba(255,145,0,.1);\n}\n\n.failure > .admonition-title, .missing > .admonition-title, .fail > .admonition-title, .error > .admonition-title {\n\tbackground-color: rgba(255,82,82,.1);\n}\n\n.admonition.info, .admonition.todo {\n\tborder-color: #00b8d4;\n}\n\n.admonition.warning, .admonition.attention, .admonition.caution {\n\tborder-color: #ff9100;\n}\n\n.admonition.failure, .admonition.missing, .admonition.fail, .admonition.error {\n\tborder-color: #ff5252;\n}\n\n.info > .admonition-title::before, .todo > .admonition-title::before {\n\tbackground-color: #00b8d4;\n\tborder-radius: 50%;\n}\n\n.warning > .admonition-title::before, .attention > .admonition-title::before, .caution > .admonition-title::before {\n\tbackground-color: #ff9100;\n\tborder-radius: 50%;\n}\n\n.failure > .admonition-title::before, .missing > .admonition-title::before, .fail > .admonition-title::before, .error > .admonition-title::before {\n\tbackground-color: #ff5252;\n\t;\n\tborder-radius: 50%;\n}\n\n.admonition > :last-child {\n\tmargin-bottom: 0 !important;\n}","date":"2025-09-18T07:47:08.005Z","updated":"2025-09-18T07:47:08.005Z","path":"style/style.css","layout":"false","title":"","comments":1,"_id":"cmfp5q6ak000e3kv3dlye7kkc","content":".admonition {\n\tmargin: 1.5625em 0;\n\tpadding: .6rem;\n\toverflow: hidden;\n\tfont-size: .64rem;\n\tpage-break-inside: avoid;\n\tborder-left: .3rem solid #42b983;\n\tborder-radius: .3rem;\n\tbox-shadow: 0 0.1rem 0.4rem rgba(0,0,0,.05), 0 0 0.05rem rgba(0,0,0,.1);\n\tbackground-color: #fafafa;\n}\n\np.admonition-title {\n\tposition: relative;\n\tmargin: -.6rem -.6rem .8em -.6rem !important;\n\tpadding: .4rem .6rem .4rem 2.5rem;\n\tfont-weight: 700;\n\tbackground-color: rgba(66, 185, 131, .1);\n}\n\n.admonition-title::before {\n\tposition: absolute;\n\ttop: .9rem;\n\tleft: 1rem;\n\twidth: 12px;\n\theight: 12px;\n\tbackground-color: #42b983;\n\tborder-radius: 50%;\n\tcontent: ' ';\n}\n\n.info > .admonition-title, .todo > .admonition-title {\n\tbackground-color: rgba(0,184,212,.1);\n}\n\n.warning > .admonition-title, .attention > .admonition-title, .caution > .admonition-title {\n\tbackground-color: rgba(255,145,0,.1);\n}\n\n.failure > .admonition-title, .missing > .admonition-title, .fail > .admonition-title, .error > .admonition-title {\n\tbackground-color: rgba(255,82,82,.1);\n}\n\n.admonition.info, .admonition.todo {\n\tborder-color: #00b8d4;\n}\n\n.admonition.warning, .admonition.attention, .admonition.caution {\n\tborder-color: #ff9100;\n}\n\n.admonition.failure, .admonition.missing, .admonition.fail, .admonition.error {\n\tborder-color: #ff5252;\n}\n\n.info > .admonition-title::before, .todo > .admonition-title::before {\n\tbackground-color: #00b8d4;\n\tborder-radius: 50%;\n}\n\n.warning > .admonition-title::before, .attention > .admonition-title::before, .caution > .admonition-title::before {\n\tbackground-color: #ff9100;\n\tborder-radius: 50%;\n}\n\n.failure > .admonition-title::before, .missing > .admonition-title::before, .fail > .admonition-title::before, .error > .admonition-title::before {\n\tbackground-color: #ff5252;\n\t;\n\tborder-radius: 50%;\n}\n\n.admonition > :last-child {\n\tmargin-bottom: 0 !important;\n}\n.admonition {\n\tmargin: 1.5625em 0;\n\tpadding: .6rem;\n\toverflow: hidden;\n\tfont-size: .64rem;\n\tpage-break-inside: avoid;\n\tborder-left: .3rem solid #42b983;\n\tborder-radius: .3rem;\n\tbox-shadow: 0 0.1rem 0.4rem rgba(0,0,0,.05), 0 0 0.05rem rgba(0,0,0,.1);\n\tbackground-color: #fafafa;\n}\n\np.admonition-title {\n\tposition: relative;\n\tmargin: -.6rem -.6rem .8em -.6rem !important;\n\tpadding: .4rem .6rem .4rem 2.5rem;\n\tfont-weight: 700;\n\tbackground-color: rgba(66, 185, 131, .1);\n}\n\n.admonition-title::before {\n\tposition: absolute;\n\ttop: .9rem;\n\tleft: 1rem;\n\twidth: 12px;\n\theight: 12px;\n\tbackground-color: #42b983;\n\tborder-radius: 50%;\n\tcontent: ' ';\n}\n\n.info > .admonition-title, .todo > .admonition-title {\n\tbackground-color: rgba(0,184,212,.1);\n}\n\n.warning > .admonition-title, .attention > .admonition-title, .caution > .admonition-title {\n\tbackground-color: rgba(255,145,0,.1);\n}\n\n.failure > .admonition-title, .missing > .admonition-title, .fail > .admonition-title, .error > .admonition-title {\n\tbackground-color: rgba(255,82,82,.1);\n}\n\n.admonition.info, .admonition.todo {\n\tborder-color: #00b8d4;\n}\n\n.admonition.warning, .admonition.attention, .admonition.caution {\n\tborder-color: #ff9100;\n}\n\n.admonition.failure, .admonition.missing, .admonition.fail, .admonition.error {\n\tborder-color: #ff5252;\n}\n\n.info > .admonition-title::before, .todo > .admonition-title::before {\n\tbackground-color: #00b8d4;\n\tborder-radius: 50%;\n}\n\n.warning > .admonition-title::before, .attention > .admonition-title::before, .caution > .admonition-title::before {\n\tbackground-color: #ff9100;\n\tborder-radius: 50%;\n}\n\n.failure > .admonition-title::before, .missing > .admonition-title::before, .fail > .admonition-title::before, .error > .admonition-title::before {\n\tbackground-color: #ff5252;\n\t;\n\tborder-radius: 50%;\n}\n\n.admonition > :last-child {\n\tmargin-bottom: 0 !important;\n}"},{"title":"tags","date":"2025-05-02T12:11:28.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2025-05-02 20:11:28\ntype: \"tags\"\ncomments: false  # 禁用评论（可选）\n---\n","updated":"2025-09-18T07:47:08.005Z","path":"tags/index.html","layout":"page","_id":"cmfp5q6ao000i3kv3f84k9h3r","content":"","excerpt":"","more":""}],"Post":[{"title":"Untitled","author":"wbw121124","_content":"","source":"_drafts/Untitled.md","raw":"---\ntitle: Untitled\nauthor: wbw121124\ntags:\n---\n","slug":"Untitled","published":0,"date":"2025-09-18T08:15:26.758Z","updated":"2025-09-18T07:47:07.989Z","comments":1,"layout":"post","photos":[],"_id":"cmfp5q69r00013kv3f1nce8ma","content":"","excerpt":"","more":""},{"title":"Hello World","mathjax":false,"katex":true,"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!--more-->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\nmathjax: false\nkatex: true\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!--more-->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)","slug":"hello-world","published":1,"date":"2025-09-18T08:15:26.758Z","updated":"2025-09-18T07:47:07.989Z","comments":1,"layout":"post","photos":[],"_id":"cmfp5q6a000033kv3h4v8c3pz","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<span id=\"more\"></span>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\"></a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\"></a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\"></a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\"></a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\"></a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>","more":"<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\"></a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\"></a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\"></a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\"></a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\"></a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>"},{"title":"区间dp","date":"2024-12-31T16:00:00.000Z","_content":"\n# 区间DP\n- 是一类子问题从短到长，而不是从左到右的动态规划问题。\n## 状态\n一般是：$dp_{i,j}$ 表示将区间 $[i,j]$ 的元素合并、拆分的最值、方案数。\n## 转移\n```cpp\nfor (int len = 2; len <= n; len++)//这问题\n\tfor (int i = 1; i + len - 1 <= n; i++)//状态\n\t{\n\t\tint j = i + len - 1;\n\t\tfor (int k = i; k < j; k++)//决策点\n\t\tdp[i][j] = 运算(dp[i][j], 状态转移方程);\n\t}\n```\n\n<!-- more -->\n\n## 例题\n### 洛谷P1775\n[P1775 石子合并（弱化版）](https://www.luogu.com.cn/problem/P1775)\n> 设有 $N(N \\le 300)$ 堆石子排成一排，其编号为 $1,2,3,\\cdots,N$。每堆石子有一定的质量 $m_i\\ (m_i \\le 1000)$。现在要将这 $N$ 堆石子合并成为一堆。每次只能合并相邻的两堆，合并的代价为这两堆石子的质量之和，合并后与这两堆石子相邻的石子将和新堆相邻。合并时由于选择的顺序不同，合并的总代价也不相同。试找出一种合理的方法，使总的代价最小，并输出最小代价。\n#### 状态\n$dp_{i,j}$ 表示将区间 $[i,j]$ 的元素合并的最小代价。\n#### 转移\n```cpp\nfor (int k = i; k < j; k++)\n\tdp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j]);\ndp[i][j] += sum[j] - sum[i - 1];\n```\n#### 答案\n$dp_{1,n}$\n### 洛谷P3146\n[P3146 [USACO16OPEN] 248 G](https://www.luogu.com.cn/problem/P3146)\n> 贝西喜欢在手机上下载游戏来玩，尽管她确实觉得对于自己巨大的蹄子来说，小小的触摸屏用起来相当笨拙。\n> \n> 她对当前正在玩的这个游戏特别感兴趣。游戏开始时给定一个包含 $N$ 个正整数的序列（$2 \\leq N \\leq 248$），每个数的范围在 $1 \\ldots 40$ 之间。在一次操作中，贝西可以选择两个相邻且相等的数，将它们替换为一个比原数大 1 的数（例如，她可以将两个相邻的 7 替换为一个 8）。游戏的目标是最大化最终序列中的最大数值。请帮助贝西获得尽可能高的分数！\n#### 状态\n$dp_{i,j}$ 表示将区间 $[i,j]$ 的元素合并的最大能得到的数。\n#### 转移\n```cpp\nfor (int k = i; k < j; k++)\n\tif (dp[i][k] == dp[k + 1][j])\n\t\tdp[i][j] = max(dp[i][j], dp[i][k] + 1);\n```\n#### 答案\n$max(dp_{i,j})$\n### 洛谷P1622\n[P1622 释放囚犯](https://www.luogu.com.cn/problem/P1622)\n> Caima 王国中有一个奇怪的监狱，这个监狱一共有 $P$ 个牢房，这些牢房一字排开，第 $i$ 个紧挨着第 $i+1$ 个（最后一个除外）。现在正好牢房是满的。\n> \n> 上级下发了一个释放名单，要求每天释放名单上的一个人。这可把看守们吓得不轻，因为看守们知道，现在牢房中的 $P$ 个人，可以相互之间传话。如果某个人离开了，那么原来和这个人能说上话的人，都会很气愤，导致他们那天会一直大吼大叫，搞得看守很头疼。如果给这些要发火的人吃上肉，他们就会安静点。\n#### 状态\n$dp_{i,j}$ 表示将区间 $[a_i,a_j]$ 的人放在一起需要给的肉的数量。\n#### 转移\n```cpp\nfor (int k = i; k < j; k++)\n\tdp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j]);\ndp[i][j] += sum[j] - sum[i - 1] + j - i - 1;\n```\n#### 答案\n$dp_{1,n}$\n### 洛谷P2890\n[P2890 [USACO07OPEN] Cheapest Palindrome G](https://www.luogu.com.cn/problem/P2890)\n> 给定一个由 $n$ 个不同的小写字母构成的长 $m$ 的字符串 $s$。可以通过**在 $s$ 的任意位置**增减字母将 $s$ 改为回文串。增减字母的花费不同，求最小花费。\n#### 状态\n$dp_{i,j}$ 表示将区间 $[i,j]$ 变成回文串的最小花费。\n#### 转移\n```cpp\nif (s[i] == s[j])\n\tdp[i][j] = (len > 2 ? dp[i + 1][j - 1] : 0);\ndp[i][j] = min({ dp[i][j],dp[i][j - 1] + a[s[j]],dp[i + 1][j] + a[s[i]] });\n```\n#### 答案\n$dp_{1,n}$\n#### 类似题\n- [P1435 [IOI 2000] 回文字串](https://www.luogu.com.cn/problem/P1435)，只不过代价为 $1$。\n### 洛谷P2858\n[P2858 [USACO06FEB] Treats for the Cows G/S](https://www.luogu.com.cn/problem/P2858)\n> 约翰经常给产奶量高的奶牛发特殊津贴，于是很快奶牛们拥有了大笔不知该怎么花的钱。为此，约翰购置了 $N$（$1 \\leq N \\leq 2000$） 份美味的零食来卖给奶牛们。每天约翰售出一份零食。当然约翰希望这些零食全部售出后能得到最大的收益，这些零食有以下这些有趣的特性：\n> + 零食按照 $1, \\ldots, N$ 编号，它们被排成一列放在一个很长的盒子里。盒子的两端都有开口，约翰每天可以从盒子的任一端取出最外面的一个。\n> + 与美酒与好吃的奶酪相似，这些零食储存得越久就越好吃。当然，这样约翰就可以把它们卖出更高的价钱。\n> + 每份零食的初始价值不一定相同。约翰进货时，第i份零食的初始价值为 $V_i$（$1 \\leq V \\leq 1000$）。\n> + 第i份零食如果在被买进后的第 $a$ 天出售，则它的售价是 $V_i \\times a$。\n> \n> $V_i$ 的是从盒子顶端往下的第i份零食的初始价值。约翰告诉了你所有零食的初始价值，并希望你能帮他计算一下，在这些零食全被卖出后，他最多能得到多少钱。\n#### 状态\n$dp_{i,j}$ 表示只将区间 $[a_i,a_j]$ 买完的最大价值。\n#### 转移\n```cpp\ndp[i][j] = max(dp[i][j - 1], dp[i + 1][j]) + sum[j] - sum[i - 1];\n```\n#### 答案\n$dp_{1,n}$\n### 洛谷P4170\n[P4170 [CQOI2007] 涂色](https://www.luogu.com.cn/problem/P4170)\n#### 状态\n$dp_{i,j}$ 表示将区间 $[i,j]$ 达到目标的最少涂色次数。\n#### 转移\n```cpp\nif (s[i] == s[j])\n\tdp[i][j] = min(dp[i][j - 1], dp[i + 1][j]);\nelse\n\tfor (int k = i; k < j; k++)\n\t\tdp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j]);\n```\n#### 答案\n$dp_{1,n}$\n### 洛谷P3205\n[P3205 [HNOI2010] 合唱队](https://www.luogu.com.cn/problem/P3205)\n> ...\n> 小 A 心中有一个理想队形，他想知道多少种初始队形可以获得理想的队形。\n> 请求出答案对 $19650827$ 取模的值。\n#### 状态\n$dp_{i,j,0/1}$ 表示这一次是添加到开头/结尾，将区间 $[i,j]$ 达到理想的队形的方案数。\n#### 转移\n```cpp\nif (a[i] < a[i + 1])\n\tdp[i][j][0] = (dp[i][j][0] + dp[i + 1][j][0]) % mod;\nif (a[i] < a[j])\n\tdp[i][j][0] = (dp[i][j][0] + dp[i + 1][j][1]) % mod;\nif (a[j] > a[j - 1])\n\tdp[i][j][1] = (dp[i][j][1] + dp[i][j - 1][1]) % mod;\nif (a[j] > a[i])\n\tdp[i][j][1] = (dp[i][j][1] + dp[i][j - 1][0]) % mod;\n```\n#### 答案\n$(dp_{1,n,0}+dp_{1,n,1})\\mod 19650827$\n## 总结\n1. 题目特征上有合并类、拆分类、两端处理类；\n2. 求最值类区间DP，需要注意无效状态初始化；\n3. 输出答案前，判断是否需要枚举；\n4. 决策点一般是在中间枚举或是两个端点；\n5. 若转移时可以从 $dp_{i+1,j-1}$ 递推，需要注意 $len=2$ 的情况；\n6. 初始状态要分析清楚。\n","source":"_posts/区间dp.md","raw":"---\ntitle: 区间dp\ndate: 2025-01-01 00:00:00\ntags:\n\t- [动态规划]\n\t- [区间dp]\ncategories:\n\t- [编程]\n\t- [算法]\n\t- [动态规划]\n\t- [区间dp]\n---\n\n# 区间DP\n- 是一类子问题从短到长，而不是从左到右的动态规划问题。\n## 状态\n一般是：$dp_{i,j}$ 表示将区间 $[i,j]$ 的元素合并、拆分的最值、方案数。\n## 转移\n```cpp\nfor (int len = 2; len <= n; len++)//这问题\n\tfor (int i = 1; i + len - 1 <= n; i++)//状态\n\t{\n\t\tint j = i + len - 1;\n\t\tfor (int k = i; k < j; k++)//决策点\n\t\tdp[i][j] = 运算(dp[i][j], 状态转移方程);\n\t}\n```\n\n<!-- more -->\n\n## 例题\n### 洛谷P1775\n[P1775 石子合并（弱化版）](https://www.luogu.com.cn/problem/P1775)\n> 设有 $N(N \\le 300)$ 堆石子排成一排，其编号为 $1,2,3,\\cdots,N$。每堆石子有一定的质量 $m_i\\ (m_i \\le 1000)$。现在要将这 $N$ 堆石子合并成为一堆。每次只能合并相邻的两堆，合并的代价为这两堆石子的质量之和，合并后与这两堆石子相邻的石子将和新堆相邻。合并时由于选择的顺序不同，合并的总代价也不相同。试找出一种合理的方法，使总的代价最小，并输出最小代价。\n#### 状态\n$dp_{i,j}$ 表示将区间 $[i,j]$ 的元素合并的最小代价。\n#### 转移\n```cpp\nfor (int k = i; k < j; k++)\n\tdp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j]);\ndp[i][j] += sum[j] - sum[i - 1];\n```\n#### 答案\n$dp_{1,n}$\n### 洛谷P3146\n[P3146 [USACO16OPEN] 248 G](https://www.luogu.com.cn/problem/P3146)\n> 贝西喜欢在手机上下载游戏来玩，尽管她确实觉得对于自己巨大的蹄子来说，小小的触摸屏用起来相当笨拙。\n> \n> 她对当前正在玩的这个游戏特别感兴趣。游戏开始时给定一个包含 $N$ 个正整数的序列（$2 \\leq N \\leq 248$），每个数的范围在 $1 \\ldots 40$ 之间。在一次操作中，贝西可以选择两个相邻且相等的数，将它们替换为一个比原数大 1 的数（例如，她可以将两个相邻的 7 替换为一个 8）。游戏的目标是最大化最终序列中的最大数值。请帮助贝西获得尽可能高的分数！\n#### 状态\n$dp_{i,j}$ 表示将区间 $[i,j]$ 的元素合并的最大能得到的数。\n#### 转移\n```cpp\nfor (int k = i; k < j; k++)\n\tif (dp[i][k] == dp[k + 1][j])\n\t\tdp[i][j] = max(dp[i][j], dp[i][k] + 1);\n```\n#### 答案\n$max(dp_{i,j})$\n### 洛谷P1622\n[P1622 释放囚犯](https://www.luogu.com.cn/problem/P1622)\n> Caima 王国中有一个奇怪的监狱，这个监狱一共有 $P$ 个牢房，这些牢房一字排开，第 $i$ 个紧挨着第 $i+1$ 个（最后一个除外）。现在正好牢房是满的。\n> \n> 上级下发了一个释放名单，要求每天释放名单上的一个人。这可把看守们吓得不轻，因为看守们知道，现在牢房中的 $P$ 个人，可以相互之间传话。如果某个人离开了，那么原来和这个人能说上话的人，都会很气愤，导致他们那天会一直大吼大叫，搞得看守很头疼。如果给这些要发火的人吃上肉，他们就会安静点。\n#### 状态\n$dp_{i,j}$ 表示将区间 $[a_i,a_j]$ 的人放在一起需要给的肉的数量。\n#### 转移\n```cpp\nfor (int k = i; k < j; k++)\n\tdp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j]);\ndp[i][j] += sum[j] - sum[i - 1] + j - i - 1;\n```\n#### 答案\n$dp_{1,n}$\n### 洛谷P2890\n[P2890 [USACO07OPEN] Cheapest Palindrome G](https://www.luogu.com.cn/problem/P2890)\n> 给定一个由 $n$ 个不同的小写字母构成的长 $m$ 的字符串 $s$。可以通过**在 $s$ 的任意位置**增减字母将 $s$ 改为回文串。增减字母的花费不同，求最小花费。\n#### 状态\n$dp_{i,j}$ 表示将区间 $[i,j]$ 变成回文串的最小花费。\n#### 转移\n```cpp\nif (s[i] == s[j])\n\tdp[i][j] = (len > 2 ? dp[i + 1][j - 1] : 0);\ndp[i][j] = min({ dp[i][j],dp[i][j - 1] + a[s[j]],dp[i + 1][j] + a[s[i]] });\n```\n#### 答案\n$dp_{1,n}$\n#### 类似题\n- [P1435 [IOI 2000] 回文字串](https://www.luogu.com.cn/problem/P1435)，只不过代价为 $1$。\n### 洛谷P2858\n[P2858 [USACO06FEB] Treats for the Cows G/S](https://www.luogu.com.cn/problem/P2858)\n> 约翰经常给产奶量高的奶牛发特殊津贴，于是很快奶牛们拥有了大笔不知该怎么花的钱。为此，约翰购置了 $N$（$1 \\leq N \\leq 2000$） 份美味的零食来卖给奶牛们。每天约翰售出一份零食。当然约翰希望这些零食全部售出后能得到最大的收益，这些零食有以下这些有趣的特性：\n> + 零食按照 $1, \\ldots, N$ 编号，它们被排成一列放在一个很长的盒子里。盒子的两端都有开口，约翰每天可以从盒子的任一端取出最外面的一个。\n> + 与美酒与好吃的奶酪相似，这些零食储存得越久就越好吃。当然，这样约翰就可以把它们卖出更高的价钱。\n> + 每份零食的初始价值不一定相同。约翰进货时，第i份零食的初始价值为 $V_i$（$1 \\leq V \\leq 1000$）。\n> + 第i份零食如果在被买进后的第 $a$ 天出售，则它的售价是 $V_i \\times a$。\n> \n> $V_i$ 的是从盒子顶端往下的第i份零食的初始价值。约翰告诉了你所有零食的初始价值，并希望你能帮他计算一下，在这些零食全被卖出后，他最多能得到多少钱。\n#### 状态\n$dp_{i,j}$ 表示只将区间 $[a_i,a_j]$ 买完的最大价值。\n#### 转移\n```cpp\ndp[i][j] = max(dp[i][j - 1], dp[i + 1][j]) + sum[j] - sum[i - 1];\n```\n#### 答案\n$dp_{1,n}$\n### 洛谷P4170\n[P4170 [CQOI2007] 涂色](https://www.luogu.com.cn/problem/P4170)\n#### 状态\n$dp_{i,j}$ 表示将区间 $[i,j]$ 达到目标的最少涂色次数。\n#### 转移\n```cpp\nif (s[i] == s[j])\n\tdp[i][j] = min(dp[i][j - 1], dp[i + 1][j]);\nelse\n\tfor (int k = i; k < j; k++)\n\t\tdp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j]);\n```\n#### 答案\n$dp_{1,n}$\n### 洛谷P3205\n[P3205 [HNOI2010] 合唱队](https://www.luogu.com.cn/problem/P3205)\n> ...\n> 小 A 心中有一个理想队形，他想知道多少种初始队形可以获得理想的队形。\n> 请求出答案对 $19650827$ 取模的值。\n#### 状态\n$dp_{i,j,0/1}$ 表示这一次是添加到开头/结尾，将区间 $[i,j]$ 达到理想的队形的方案数。\n#### 转移\n```cpp\nif (a[i] < a[i + 1])\n\tdp[i][j][0] = (dp[i][j][0] + dp[i + 1][j][0]) % mod;\nif (a[i] < a[j])\n\tdp[i][j][0] = (dp[i][j][0] + dp[i + 1][j][1]) % mod;\nif (a[j] > a[j - 1])\n\tdp[i][j][1] = (dp[i][j][1] + dp[i][j - 1][1]) % mod;\nif (a[j] > a[i])\n\tdp[i][j][1] = (dp[i][j][1] + dp[i][j - 1][0]) % mod;\n```\n#### 答案\n$(dp_{1,n,0}+dp_{1,n,1})\\mod 19650827$\n## 总结\n1. 题目特征上有合并类、拆分类、两端处理类；\n2. 求最值类区间DP，需要注意无效状态初始化；\n3. 输出答案前，判断是否需要枚举；\n4. 决策点一般是在中间枚举或是两个端点；\n5. 若转移时可以从 $dp_{i+1,j-1}$ 递推，需要注意 $len=2$ 的情况；\n6. 初始状态要分析清楚。\n","slug":"区间dp","published":1,"updated":"2025-09-18T07:47:07.989Z","comments":1,"layout":"post","photos":[],"_id":"cmfp5q6a800053kv30xyi3uob","content":"<h1 id=\"区间dp\"><a class=\"markdownIt-Anchor\" href=\"#区间dp\"></a> 区间DP</h1>\n<ul>\n<li>是一类子问题从短到长，而不是从左到右的动态规划问题。</li>\n</ul>\n<h2 id=\"状态\"><a class=\"markdownIt-Anchor\" href=\"#状态\"></a> 状态</h2>\n<p>一般是：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的元素合并、拆分的最值、方案数。</p>\n<h2 id=\"转移\"><a class=\"markdownIt-Anchor\" href=\"#转移\"></a> 转移</h2>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n; len++)<span class=\"comment\">//这问题</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= n; i++)<span class=\"comment\">//状态</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)<span class=\"comment\">//决策点</span></span><br><span class=\"line\">\t\tdp[i][j] = 运算(dp[i][j], 状态转移方程);</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h2 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\"></a> 例题</h2>\n<h3 id=\"洛谷p1775\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1775\"></a> 洛谷P1775</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P1775\">P1775 石子合并（弱化版）</a></p>\n<blockquote>\n<p>设有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo>≤</mo><mn>300</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">N(N \\le 300)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span> 堆石子排成一排，其编号为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">1,2,3,\\cdots,N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>。每堆石子有一定的质量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub><mtext> </mtext><mo stretchy=\"false\">(</mo><msub><mi>m</mi><mi>i</mi></msub><mo>≤</mo><mn>1000</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">m_i\\ (m_i \\le 1000)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\"> </span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>。现在要将这 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 堆石子合并成为一堆。每次只能合并相邻的两堆，合并的代价为这两堆石子的质量之和，合并后与这两堆石子相邻的石子将和新堆相邻。合并时由于选择的顺序不同，合并的总代价也不相同。试找出一种合理的方法，使总的代价最小，并输出最小代价。</p>\n</blockquote>\n<h4 id=\"状态-2\"><a class=\"markdownIt-Anchor\" href=\"#状态-2\"></a> 状态</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的元素合并的最小代价。</p>\n<h4 id=\"转移-2\"><a class=\"markdownIt-Anchor\" href=\"#转移-2\"></a> 转移</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)</span><br><span class=\"line\">\tdp[i][j] = <span class=\"built_in\">min</span>(dp[i][j], dp[i][k] + dp[k + <span class=\"number\">1</span>][j]);</span><br><span class=\"line\">dp[i][j] += sum[j] - sum[i - <span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n<h4 id=\"答案\"><a class=\"markdownIt-Anchor\" href=\"#答案\"></a> 答案</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{1,n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"洛谷p3146\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3146\"></a> 洛谷P3146</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P3146\">P3146 [USACO16OPEN] 248 G</a></p>\n<blockquote>\n<p>贝西喜欢在手机上下载游戏来玩，尽管她确实觉得对于自己巨大的蹄子来说，小小的触摸屏用起来相当笨拙。</p>\n<p>她对当前正在玩的这个游戏特别感兴趣。游戏开始时给定一个包含 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 个正整数的序列（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>248</mn></mrow><annotation encoding=\"application/x-tex\">2 \\leq N \\leq 248</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">4</span><span class=\"mord\">8</span></span></span></span>），每个数的范围在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>…</mo><mn>40</mn></mrow><annotation encoding=\"application/x-tex\">1 \\ldots 40</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">4</span><span class=\"mord\">0</span></span></span></span> 之间。在一次操作中，贝西可以选择两个相邻且相等的数，将它们替换为一个比原数大 1 的数（例如，她可以将两个相邻的 7 替换为一个 8）。游戏的目标是最大化最终序列中的最大数值。请帮助贝西获得尽可能高的分数！</p>\n</blockquote>\n<h4 id=\"状态-3\"><a class=\"markdownIt-Anchor\" href=\"#状态-3\"></a> 状态</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的元素合并的最大能得到的数。</p>\n<h4 id=\"转移-3\"><a class=\"markdownIt-Anchor\" href=\"#转移-3\"></a> 转移</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (dp[i][k] == dp[k + <span class=\"number\">1</span>][j])</span><br><span class=\"line\">\t\tdp[i][j] = <span class=\"built_in\">max</span>(dp[i][j], dp[i][k] + <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"答案-2\"><a class=\"markdownIt-Anchor\" href=\"#答案-2\"></a> 答案</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">max(dp_{i,j})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<h3 id=\"洛谷p1622\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1622\"></a> 洛谷P1622</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P1622\">P1622 释放囚犯</a></p>\n<blockquote>\n<p>Caima 王国中有一个奇怪的监狱，这个监狱一共有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 个牢房，这些牢房一字排开，第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个紧挨着第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个（最后一个除外）。现在正好牢房是满的。</p>\n<p>上级下发了一个释放名单，要求每天释放名单上的一个人。这可把看守们吓得不轻，因为看守们知道，现在牢房中的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 个人，可以相互之间传话。如果某个人离开了，那么原来和这个人能说上话的人，都会很气愤，导致他们那天会一直大吼大叫，搞得看守很头疼。如果给这些要发火的人吃上肉，他们就会安静点。</p>\n</blockquote>\n<h4 id=\"状态-4\"><a class=\"markdownIt-Anchor\" href=\"#状态-4\"></a> 状态</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>j</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a_i,a_j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> 的人放在一起需要给的肉的数量。</p>\n<h4 id=\"转移-4\"><a class=\"markdownIt-Anchor\" href=\"#转移-4\"></a> 转移</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)</span><br><span class=\"line\">\tdp[i][j] = <span class=\"built_in\">min</span>(dp[i][j], dp[i][k] + dp[k + <span class=\"number\">1</span>][j]);</span><br><span class=\"line\">dp[i][j] += sum[j] - sum[i - <span class=\"number\">1</span>] + j - i - <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"答案-3\"><a class=\"markdownIt-Anchor\" href=\"#答案-3\"></a> 答案</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{1,n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"洛谷p2890\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p2890\"></a> 洛谷P2890</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P2890\">P2890 [USACO07OPEN] Cheapest Palindrome G</a></p>\n<blockquote>\n<p>给定一个由 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个不同的小写字母构成的长 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 的字符串 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span>。可以通过<strong>在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> 的任意位置</strong>增减字母将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> 改为回文串。增减字母的花费不同，求最小花费。</p>\n</blockquote>\n<h4 id=\"状态-5\"><a class=\"markdownIt-Anchor\" href=\"#状态-5\"></a> 状态</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 变成回文串的最小花费。</p>\n<h4 id=\"转移-5\"><a class=\"markdownIt-Anchor\" href=\"#转移-5\"></a> 转移</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (s[i] == s[j])</span><br><span class=\"line\">\tdp[i][j] = (len &gt; <span class=\"number\">2</span> ? dp[i + <span class=\"number\">1</span>][j - <span class=\"number\">1</span>] : <span class=\"number\">0</span>);</span><br><span class=\"line\">dp[i][j] = <span class=\"built_in\">min</span>(&#123; dp[i][j],dp[i][j - <span class=\"number\">1</span>] + a[s[j]],dp[i + <span class=\"number\">1</span>][j] + a[s[i]] &#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"答案-4\"><a class=\"markdownIt-Anchor\" href=\"#答案-4\"></a> 答案</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{1,n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<h4 id=\"类似题\"><a class=\"markdownIt-Anchor\" href=\"#类似题\"></a> 类似题</h4>\n<ul>\n<li><a href=\"https://www.luogu.com.cn/problem/P1435\">P1435 [IOI 2000] 回文字串</a>，只不过代价为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>。</li>\n</ul>\n<h3 id=\"洛谷p2858\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p2858\"></a> 洛谷P2858</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P2858\">P2858 [USACO06FEB] Treats for the Cows G/S</a></p>\n<blockquote>\n<p>约翰经常给产奶量高的奶牛发特殊津贴，于是很快奶牛们拥有了大笔不知该怎么花的钱。为此，约翰购置了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>2000</mn></mrow><annotation encoding=\"application/x-tex\">1 \\leq N \\leq 2000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>） 份美味的零食来卖给奶牛们。每天约翰售出一份零食。当然约翰希望这些零食全部售出后能得到最大的收益，这些零食有以下这些有趣的特性：</p>\n<ul>\n<li>零食按照 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">1, \\ldots, N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 编号，它们被排成一列放在一个很长的盒子里。盒子的两端都有开口，约翰每天可以从盒子的任一端取出最外面的一个。</li>\n<li>与美酒与好吃的奶酪相似，这些零食储存得越久就越好吃。当然，这样约翰就可以把它们卖出更高的价钱。</li>\n<li>每份零食的初始价值不一定相同。约翰进货时，第i份零食的初始价值为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">V_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>V</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding=\"application/x-tex\">1 \\leq V \\leq 1000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>）。</li>\n<li>第i份零食如果在被买进后的第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 天出售，则它的售价是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>×</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">V_i \\times a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>。</li>\n</ul>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">V_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的是从盒子顶端往下的第i份零食的初始价值。约翰告诉了你所有零食的初始价值，并希望你能帮他计算一下，在这些零食全被卖出后，他最多能得到多少钱。</p>\n</blockquote>\n<h4 id=\"状态-6\"><a class=\"markdownIt-Anchor\" href=\"#状态-6\"></a> 状态</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示只将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>j</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a_i,a_j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> 买完的最大价值。</p>\n<h4 id=\"转移-6\"><a class=\"markdownIt-Anchor\" href=\"#转移-6\"></a> 转移</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dp[i][j] = <span class=\"built_in\">max</span>(dp[i][j - <span class=\"number\">1</span>], dp[i + <span class=\"number\">1</span>][j]) + sum[j] - sum[i - <span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n<h4 id=\"答案-5\"><a class=\"markdownIt-Anchor\" href=\"#答案-5\"></a> 答案</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{1,n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"洛谷p4170\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p4170\"></a> 洛谷P4170</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P4170\">P4170 [CQOI2007] 涂色</a></p>\n<h4 id=\"状态-7\"><a class=\"markdownIt-Anchor\" href=\"#状态-7\"></a> 状态</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 达到目标的最少涂色次数。</p>\n<h4 id=\"转移-7\"><a class=\"markdownIt-Anchor\" href=\"#转移-7\"></a> 转移</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (s[i] == s[j])</span><br><span class=\"line\">\tdp[i][j] = <span class=\"built_in\">min</span>(dp[i][j - <span class=\"number\">1</span>], dp[i + <span class=\"number\">1</span>][j]);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)</span><br><span class=\"line\">\t\tdp[i][j] = <span class=\"built_in\">min</span>(dp[i][j], dp[i][k] + dp[k + <span class=\"number\">1</span>][j]);</span><br></pre></td></tr></table></figure>\n<h4 id=\"答案-6\"><a class=\"markdownIt-Anchor\" href=\"#答案-6\"></a> 答案</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{1,n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"洛谷p3205\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3205\"></a> 洛谷P3205</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P3205\">P3205 [HNOI2010] 合唱队</a></p>\n<blockquote>\n<p>…<br />\n小 A 心中有一个理想队形，他想知道多少种初始队形可以获得理想的队形。<br />\n请求出答案对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>19650827</mn></mrow><annotation encoding=\"application/x-tex\">19650827</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">9</span><span class=\"mord\">6</span><span class=\"mord\">5</span><span class=\"mord\">0</span><span class=\"mord\">8</span><span class=\"mord\">2</span><span class=\"mord\">7</span></span></span></span> 取模的值。</p>\n</blockquote>\n<h4 id=\"状态-8\"><a class=\"markdownIt-Anchor\" href=\"#状态-8\"></a> 状态</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,0/1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 表示这一次是添加到开头/结尾，将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 达到理想的队形的方案数。</p>\n<h4 id=\"转移-8\"><a class=\"markdownIt-Anchor\" href=\"#转移-8\"></a> 转移</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (a[i] &lt; a[i + <span class=\"number\">1</span>])</span><br><span class=\"line\">\tdp[i][j][<span class=\"number\">0</span>] = (dp[i][j][<span class=\"number\">0</span>] + dp[i + <span class=\"number\">1</span>][j][<span class=\"number\">0</span>]) % mod;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (a[i] &lt; a[j])</span><br><span class=\"line\">\tdp[i][j][<span class=\"number\">0</span>] = (dp[i][j][<span class=\"number\">0</span>] + dp[i + <span class=\"number\">1</span>][j][<span class=\"number\">1</span>]) % mod;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (a[j] &gt; a[j - <span class=\"number\">1</span>])</span><br><span class=\"line\">\tdp[i][j][<span class=\"number\">1</span>] = (dp[i][j][<span class=\"number\">1</span>] + dp[i][j - <span class=\"number\">1</span>][<span class=\"number\">1</span>]) % mod;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (a[j] &gt; a[i])</span><br><span class=\"line\">\tdp[i][j][<span class=\"number\">1</span>] = (dp[i][j][<span class=\"number\">1</span>] + dp[i][j - <span class=\"number\">1</span>][<span class=\"number\">0</span>]) % mod;</span><br></pre></td></tr></table></figure>\n<h4 id=\"答案-7\"><a class=\"markdownIt-Anchor\" href=\"#答案-7\"></a> 答案</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo separator=\"true\">,</mo><mn>0</mn></mrow></msub><mo>+</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo separator=\"true\">,</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo><mspace></mspace><mspace width=\"0.6666666666666666em\"/><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow><mtext> </mtext><mtext> </mtext><mn>19650827</mn></mrow><annotation encoding=\"application/x-tex\">(dp_{1,n,0}+dp_{1,n,1})\\mod 19650827</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.6666666666666666em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">m</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">d</span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">9</span><span class=\"mord\">6</span><span class=\"mord\">5</span><span class=\"mord\">0</span><span class=\"mord\">8</span><span class=\"mord\">2</span><span class=\"mord\">7</span></span></span></span></p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h2>\n<ol>\n<li>题目特征上有合并类、拆分类、两端处理类；</li>\n<li>求最值类区间DP，需要注意无效状态初始化；</li>\n<li>输出答案前，判断是否需要枚举；</li>\n<li>决策点一般是在中间枚举或是两个端点；</li>\n<li>若转移时可以从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i+1,j-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 递推，需要注意 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>e</mi><mi>n</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">len=2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 的情况；</li>\n<li>初始状态要分析清楚。</li>\n</ol>\n","excerpt":"<h1 id=\"区间dp\"><a class=\"markdownIt-Anchor\" href=\"#区间dp\"></a> 区间DP</h1>\n<ul>\n<li>是一类子问题从短到长，而不是从左到右的动态规划问题。</li>\n</ul>\n<h2 id=\"状态\"><a class=\"markdownIt-Anchor\" href=\"#状态\"></a> 状态</h2>\n<p>一般是：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的元素合并、拆分的最值、方案数。</p>\n<h2 id=\"转移\"><a class=\"markdownIt-Anchor\" href=\"#转移\"></a> 转移</h2>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n; len++)<span class=\"comment\">//这问题</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= n; i++)<span class=\"comment\">//状态</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)<span class=\"comment\">//决策点</span></span><br><span class=\"line\">\t\tdp[i][j] = 运算(dp[i][j], 状态转移方程);</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\"></a> 例题</h2>\n<h3 id=\"洛谷p1775\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1775\"></a> 洛谷P1775</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P1775\">P1775 石子合并（弱化版）</a></p>\n<blockquote>\n<p>设有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo>≤</mo><mn>300</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">N(N \\le 300)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span> 堆石子排成一排，其编号为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">1,2,3,\\cdots,N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>。每堆石子有一定的质量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub><mtext> </mtext><mo stretchy=\"false\">(</mo><msub><mi>m</mi><mi>i</mi></msub><mo>≤</mo><mn>1000</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">m_i\\ (m_i \\le 1000)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\"> </span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>。现在要将这 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 堆石子合并成为一堆。每次只能合并相邻的两堆，合并的代价为这两堆石子的质量之和，合并后与这两堆石子相邻的石子将和新堆相邻。合并时由于选择的顺序不同，合并的总代价也不相同。试找出一种合理的方法，使总的代价最小，并输出最小代价。</p>\n</blockquote>\n<h4 id=\"状态-2\"><a class=\"markdownIt-Anchor\" href=\"#状态-2\"></a> 状态</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的元素合并的最小代价。</p>\n<h4 id=\"转移-2\"><a class=\"markdownIt-Anchor\" href=\"#转移-2\"></a> 转移</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)</span><br><span class=\"line\">\tdp[i][j] = <span class=\"built_in\">min</span>(dp[i][j], dp[i][k] + dp[k + <span class=\"number\">1</span>][j]);</span><br><span class=\"line\">dp[i][j] += sum[j] - sum[i - <span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n<h4 id=\"答案\"><a class=\"markdownIt-Anchor\" href=\"#答案\"></a> 答案</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{1,n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"洛谷p3146\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3146\"></a> 洛谷P3146</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P3146\">P3146 [USACO16OPEN] 248 G</a></p>\n<blockquote>\n<p>贝西喜欢在手机上下载游戏来玩，尽管她确实觉得对于自己巨大的蹄子来说，小小的触摸屏用起来相当笨拙。</p>\n<p>她对当前正在玩的这个游戏特别感兴趣。游戏开始时给定一个包含 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 个正整数的序列（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>248</mn></mrow><annotation encoding=\"application/x-tex\">2 \\leq N \\leq 248</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">4</span><span class=\"mord\">8</span></span></span></span>），每个数的范围在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>…</mo><mn>40</mn></mrow><annotation encoding=\"application/x-tex\">1 \\ldots 40</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">4</span><span class=\"mord\">0</span></span></span></span> 之间。在一次操作中，贝西可以选择两个相邻且相等的数，将它们替换为一个比原数大 1 的数（例如，她可以将两个相邻的 7 替换为一个 8）。游戏的目标是最大化最终序列中的最大数值。请帮助贝西获得尽可能高的分数！</p>\n</blockquote>\n<h4 id=\"状态-3\"><a class=\"markdownIt-Anchor\" href=\"#状态-3\"></a> 状态</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的元素合并的最大能得到的数。</p>\n<h4 id=\"转移-3\"><a class=\"markdownIt-Anchor\" href=\"#转移-3\"></a> 转移</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (dp[i][k] == dp[k + <span class=\"number\">1</span>][j])</span><br><span class=\"line\">\t\tdp[i][j] = <span class=\"built_in\">max</span>(dp[i][j], dp[i][k] + <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"答案-2\"><a class=\"markdownIt-Anchor\" href=\"#答案-2\"></a> 答案</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">max(dp_{i,j})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<h3 id=\"洛谷p1622\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1622\"></a> 洛谷P1622</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P1622\">P1622 释放囚犯</a></p>\n<blockquote>\n<p>Caima 王国中有一个奇怪的监狱，这个监狱一共有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 个牢房，这些牢房一字排开，第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个紧挨着第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个（最后一个除外）。现在正好牢房是满的。</p>\n<p>上级下发了一个释放名单，要求每天释放名单上的一个人。这可把看守们吓得不轻，因为看守们知道，现在牢房中的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 个人，可以相互之间传话。如果某个人离开了，那么原来和这个人能说上话的人，都会很气愤，导致他们那天会一直大吼大叫，搞得看守很头疼。如果给这些要发火的人吃上肉，他们就会安静点。</p>\n</blockquote>\n<h4 id=\"状态-4\"><a class=\"markdownIt-Anchor\" href=\"#状态-4\"></a> 状态</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>j</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a_i,a_j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> 的人放在一起需要给的肉的数量。</p>\n<h4 id=\"转移-4\"><a class=\"markdownIt-Anchor\" href=\"#转移-4\"></a> 转移</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)</span><br><span class=\"line\">\tdp[i][j] = <span class=\"built_in\">min</span>(dp[i][j], dp[i][k] + dp[k + <span class=\"number\">1</span>][j]);</span><br><span class=\"line\">dp[i][j] += sum[j] - sum[i - <span class=\"number\">1</span>] + j - i - <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"答案-3\"><a class=\"markdownIt-Anchor\" href=\"#答案-3\"></a> 答案</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{1,n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"洛谷p2890\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p2890\"></a> 洛谷P2890</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P2890\">P2890 [USACO07OPEN] Cheapest Palindrome G</a></p>\n<blockquote>\n<p>给定一个由 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个不同的小写字母构成的长 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 的字符串 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span>。可以通过<strong>在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> 的任意位置</strong>增减字母将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> 改为回文串。增减字母的花费不同，求最小花费。</p>\n</blockquote>\n<h4 id=\"状态-5\"><a class=\"markdownIt-Anchor\" href=\"#状态-5\"></a> 状态</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 变成回文串的最小花费。</p>\n<h4 id=\"转移-5\"><a class=\"markdownIt-Anchor\" href=\"#转移-5\"></a> 转移</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (s[i] == s[j])</span><br><span class=\"line\">\tdp[i][j] = (len &gt; <span class=\"number\">2</span> ? dp[i + <span class=\"number\">1</span>][j - <span class=\"number\">1</span>] : <span class=\"number\">0</span>);</span><br><span class=\"line\">dp[i][j] = <span class=\"built_in\">min</span>(&#123; dp[i][j],dp[i][j - <span class=\"number\">1</span>] + a[s[j]],dp[i + <span class=\"number\">1</span>][j] + a[s[i]] &#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"答案-4\"><a class=\"markdownIt-Anchor\" href=\"#答案-4\"></a> 答案</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{1,n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<h4 id=\"类似题\"><a class=\"markdownIt-Anchor\" href=\"#类似题\"></a> 类似题</h4>\n<ul>\n<li><a href=\"https://www.luogu.com.cn/problem/P1435\">P1435 [IOI 2000] 回文字串</a>，只不过代价为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>。</li>\n</ul>\n<h3 id=\"洛谷p2858\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p2858\"></a> 洛谷P2858</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P2858\">P2858 [USACO06FEB] Treats for the Cows G/S</a></p>\n<blockquote>\n<p>约翰经常给产奶量高的奶牛发特殊津贴，于是很快奶牛们拥有了大笔不知该怎么花的钱。为此，约翰购置了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>2000</mn></mrow><annotation encoding=\"application/x-tex\">1 \\leq N \\leq 2000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>） 份美味的零食来卖给奶牛们。每天约翰售出一份零食。当然约翰希望这些零食全部售出后能得到最大的收益，这些零食有以下这些有趣的特性：</p>\n<ul>\n<li>零食按照 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">1, \\ldots, N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 编号，它们被排成一列放在一个很长的盒子里。盒子的两端都有开口，约翰每天可以从盒子的任一端取出最外面的一个。</li>\n<li>与美酒与好吃的奶酪相似，这些零食储存得越久就越好吃。当然，这样约翰就可以把它们卖出更高的价钱。</li>\n<li>每份零食的初始价值不一定相同。约翰进货时，第i份零食的初始价值为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">V_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>V</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding=\"application/x-tex\">1 \\leq V \\leq 1000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>）。</li>\n<li>第i份零食如果在被买进后的第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 天出售，则它的售价是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>×</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">V_i \\times a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>。</li>\n</ul>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">V_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的是从盒子顶端往下的第i份零食的初始价值。约翰告诉了你所有零食的初始价值，并希望你能帮他计算一下，在这些零食全被卖出后，他最多能得到多少钱。</p>\n</blockquote>\n<h4 id=\"状态-6\"><a class=\"markdownIt-Anchor\" href=\"#状态-6\"></a> 状态</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示只将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>j</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a_i,a_j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> 买完的最大价值。</p>\n<h4 id=\"转移-6\"><a class=\"markdownIt-Anchor\" href=\"#转移-6\"></a> 转移</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dp[i][j] = <span class=\"built_in\">max</span>(dp[i][j - <span class=\"number\">1</span>], dp[i + <span class=\"number\">1</span>][j]) + sum[j] - sum[i - <span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n<h4 id=\"答案-5\"><a class=\"markdownIt-Anchor\" href=\"#答案-5\"></a> 答案</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{1,n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"洛谷p4170\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p4170\"></a> 洛谷P4170</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P4170\">P4170 [CQOI2007] 涂色</a></p>\n<h4 id=\"状态-7\"><a class=\"markdownIt-Anchor\" href=\"#状态-7\"></a> 状态</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 达到目标的最少涂色次数。</p>\n<h4 id=\"转移-7\"><a class=\"markdownIt-Anchor\" href=\"#转移-7\"></a> 转移</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (s[i] == s[j])</span><br><span class=\"line\">\tdp[i][j] = <span class=\"built_in\">min</span>(dp[i][j - <span class=\"number\">1</span>], dp[i + <span class=\"number\">1</span>][j]);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)</span><br><span class=\"line\">\t\tdp[i][j] = <span class=\"built_in\">min</span>(dp[i][j], dp[i][k] + dp[k + <span class=\"number\">1</span>][j]);</span><br></pre></td></tr></table></figure>\n<h4 id=\"答案-6\"><a class=\"markdownIt-Anchor\" href=\"#答案-6\"></a> 答案</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{1,n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"洛谷p3205\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3205\"></a> 洛谷P3205</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P3205\">P3205 [HNOI2010] 合唱队</a></p>\n<blockquote>\n<p>…<br />\n小 A 心中有一个理想队形，他想知道多少种初始队形可以获得理想的队形。<br />\n请求出答案对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>19650827</mn></mrow><annotation encoding=\"application/x-tex\">19650827</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">9</span><span class=\"mord\">6</span><span class=\"mord\">5</span><span class=\"mord\">0</span><span class=\"mord\">8</span><span class=\"mord\">2</span><span class=\"mord\">7</span></span></span></span> 取模的值。</p>\n</blockquote>\n<h4 id=\"状态-8\"><a class=\"markdownIt-Anchor\" href=\"#状态-8\"></a> 状态</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,0/1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 表示这一次是添加到开头/结尾，将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 达到理想的队形的方案数。</p>\n<h4 id=\"转移-8\"><a class=\"markdownIt-Anchor\" href=\"#转移-8\"></a> 转移</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (a[i] &lt; a[i + <span class=\"number\">1</span>])</span><br><span class=\"line\">\tdp[i][j][<span class=\"number\">0</span>] = (dp[i][j][<span class=\"number\">0</span>] + dp[i + <span class=\"number\">1</span>][j][<span class=\"number\">0</span>]) % mod;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (a[i] &lt; a[j])</span><br><span class=\"line\">\tdp[i][j][<span class=\"number\">0</span>] = (dp[i][j][<span class=\"number\">0</span>] + dp[i + <span class=\"number\">1</span>][j][<span class=\"number\">1</span>]) % mod;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (a[j] &gt; a[j - <span class=\"number\">1</span>])</span><br><span class=\"line\">\tdp[i][j][<span class=\"number\">1</span>] = (dp[i][j][<span class=\"number\">1</span>] + dp[i][j - <span class=\"number\">1</span>][<span class=\"number\">1</span>]) % mod;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (a[j] &gt; a[i])</span><br><span class=\"line\">\tdp[i][j][<span class=\"number\">1</span>] = (dp[i][j][<span class=\"number\">1</span>] + dp[i][j - <span class=\"number\">1</span>][<span class=\"number\">0</span>]) % mod;</span><br></pre></td></tr></table></figure>\n<h4 id=\"答案-7\"><a class=\"markdownIt-Anchor\" href=\"#答案-7\"></a> 答案</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo separator=\"true\">,</mo><mn>0</mn></mrow></msub><mo>+</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo separator=\"true\">,</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo><mspace></mspace><mspace width=\"0.6666666666666666em\"/><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow><mtext> </mtext><mtext> </mtext><mn>19650827</mn></mrow><annotation encoding=\"application/x-tex\">(dp_{1,n,0}+dp_{1,n,1})\\mod 19650827</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.6666666666666666em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">m</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">d</span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">9</span><span class=\"mord\">6</span><span class=\"mord\">5</span><span class=\"mord\">0</span><span class=\"mord\">8</span><span class=\"mord\">2</span><span class=\"mord\">7</span></span></span></span></p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h2>\n<ol>\n<li>题目特征上有合并类、拆分类、两端处理类；</li>\n<li>求最值类区间DP，需要注意无效状态初始化；</li>\n<li>输出答案前，判断是否需要枚举；</li>\n<li>决策点一般是在中间枚举或是两个端点；</li>\n<li>若转移时可以从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i+1,j-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 递推，需要注意 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>e</mi><mi>n</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">len=2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 的情况；</li>\n<li>初始状态要分析清楚。</li>\n</ol>"},{"title":"二分图","date":"2024-12-31T16:00:00.000Z","_content":"\n# 二分图\n\n若一张无向图 $G$，可以将所有的点分成 $2$ 个点集，且 $2$ 个点集内部没有连边，那么称 $G$ 可以划分为一张二分图。\n\n- 注意：二分图的划分不一定唯一，且不一定连通。有向图在实际问题中，也可以划分一分图\n\n## 二分图存在的充要条件\n\n- 没有奇环\n\n## 二分图的判定\n\n染色法，任意选择没有访问的点开始 dfs，并且 $0,1$ 交替染色，只要出现一条边的 $2$ 个端点颜色相同，那么就不是二分图。\n\n<!-- more -->\n\n```cpp\nbool dfs(int x, int c)\n{\n\tcolor[x] = c;\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (color[nxt] == c)\n\t\t\treturn false;\n\t\telse if (!color[nxt])\n\t\t\tif (!dfs(nxt, 3 - c))\n\t\t\t\treturn false;\n\treturn true;\n}\n```\n\n## 二分图最大匹配\n\n对于一张无向图 $G$，且 $G$ 可以划分为二分图，我们将 $1$ 条边称为 $1$ 组“匹配”，在 $G$ 中选出最多的匹配且所有选出的边不共点，那么这一组边集，就是一组 $G$ 的最大匹配。\n\n### 匈牙利算法\n\n```cpp\nbool hungary(int x)\n{\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (!vis[nxt])\n\t\t{\n\t\t\tvis[nxt] = true;\n\t\t\tif (!match[nxt] || hungary(match[nxt]))\n\t\t\t{\n\t\t\t\tmatch[nxt] = x;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\treturn false;\n}\n```\n\n## 二分图最小点覆盖\n\n对于一张二分图 $G$，选取最小的点集 $S$，使得点集内的点能覆盖所有的边。（在任意一条边至少有 $1$ 个端点在 $S$ 中）\n\n性质：\n\n- 二分图最大匹配=二分图最小点覆盖\n","source":"_posts/二分图.md","raw":"---\ntitle: 二分图\ndate: 2025-01-01 00:00:00\ntags:\n\t- [二分图]\ncategories:\n\t- [编程]\n\t- [算法]\n\t- [二分图]\n---\n\n# 二分图\n\n若一张无向图 $G$，可以将所有的点分成 $2$ 个点集，且 $2$ 个点集内部没有连边，那么称 $G$ 可以划分为一张二分图。\n\n- 注意：二分图的划分不一定唯一，且不一定连通。有向图在实际问题中，也可以划分一分图\n\n## 二分图存在的充要条件\n\n- 没有奇环\n\n## 二分图的判定\n\n染色法，任意选择没有访问的点开始 dfs，并且 $0,1$ 交替染色，只要出现一条边的 $2$ 个端点颜色相同，那么就不是二分图。\n\n<!-- more -->\n\n```cpp\nbool dfs(int x, int c)\n{\n\tcolor[x] = c;\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (color[nxt] == c)\n\t\t\treturn false;\n\t\telse if (!color[nxt])\n\t\t\tif (!dfs(nxt, 3 - c))\n\t\t\t\treturn false;\n\treturn true;\n}\n```\n\n## 二分图最大匹配\n\n对于一张无向图 $G$，且 $G$ 可以划分为二分图，我们将 $1$ 条边称为 $1$ 组“匹配”，在 $G$ 中选出最多的匹配且所有选出的边不共点，那么这一组边集，就是一组 $G$ 的最大匹配。\n\n### 匈牙利算法\n\n```cpp\nbool hungary(int x)\n{\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (!vis[nxt])\n\t\t{\n\t\t\tvis[nxt] = true;\n\t\t\tif (!match[nxt] || hungary(match[nxt]))\n\t\t\t{\n\t\t\t\tmatch[nxt] = x;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\treturn false;\n}\n```\n\n## 二分图最小点覆盖\n\n对于一张二分图 $G$，选取最小的点集 $S$，使得点集内的点能覆盖所有的边。（在任意一条边至少有 $1$ 个端点在 $S$ 中）\n\n性质：\n\n- 二分图最大匹配=二分图最小点覆盖\n","slug":"二分图","published":1,"updated":"2025-09-18T07:47:07.989Z","comments":1,"layout":"post","photos":[],"_id":"cmfp5q6aa00073kv36dfg3x7j","content":"<h1 id=\"二分图\"><a class=\"markdownIt-Anchor\" href=\"#二分图\"></a> 二分图</h1>\n<p>若一张无向图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>，可以将所有的点分成 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 个点集，且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 个点集内部没有连边，那么称 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 可以划分为一张二分图。</p>\n<ul>\n<li>注意：二分图的划分不一定唯一，且不一定连通。有向图在实际问题中，也可以划分一分图</li>\n</ul>\n<h2 id=\"二分图存在的充要条件\"><a class=\"markdownIt-Anchor\" href=\"#二分图存在的充要条件\"></a> 二分图存在的充要条件</h2>\n<ul>\n<li>没有奇环</li>\n</ul>\n<h2 id=\"二分图的判定\"><a class=\"markdownIt-Anchor\" href=\"#二分图的判定\"></a> 二分图的判定</h2>\n<p>染色法，任意选择没有访问的点开始 dfs，并且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0,1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span></span></span></span> 交替染色，只要出现一条边的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 个端点颜色相同，那么就不是二分图。</p>\n<span id=\"more\"></span>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tcolor[x] = c;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (color[nxt] == c)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!color[nxt])</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!<span class=\"built_in\">dfs</span>(nxt, <span class=\"number\">3</span> - c))</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二分图最大匹配\"><a class=\"markdownIt-Anchor\" href=\"#二分图最大匹配\"></a> 二分图最大匹配</h2>\n<p>对于一张无向图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>，且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 可以划分为二分图，我们将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 条边称为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 组“匹配”，在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 中选出最多的匹配且所有选出的边不共点，那么这一组边集，就是一组 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 的最大匹配。</p>\n<h3 id=\"匈牙利算法\"><a class=\"markdownIt-Anchor\" href=\"#匈牙利算法\"></a> 匈牙利算法</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">hungary</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!vis[nxt])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tvis[nxt] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!match[nxt] || <span class=\"built_in\">hungary</span>(match[nxt]))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tmatch[nxt] = x;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二分图最小点覆盖\"><a class=\"markdownIt-Anchor\" href=\"#二分图最小点覆盖\"></a> 二分图最小点覆盖</h2>\n<p>对于一张二分图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>，选取最小的点集 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>，使得点集内的点能覆盖所有的边。（在任意一条边至少有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个端点在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 中）</p>\n<p>性质：</p>\n<ul>\n<li>二分图最大匹配=二分图最小点覆盖</li>\n</ul>\n","excerpt":"<h1 id=\"二分图\"><a class=\"markdownIt-Anchor\" href=\"#二分图\"></a> 二分图</h1>\n<p>若一张无向图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>，可以将所有的点分成 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 个点集，且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 个点集内部没有连边，那么称 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 可以划分为一张二分图。</p>\n<ul>\n<li>注意：二分图的划分不一定唯一，且不一定连通。有向图在实际问题中，也可以划分一分图</li>\n</ul>\n<h2 id=\"二分图存在的充要条件\"><a class=\"markdownIt-Anchor\" href=\"#二分图存在的充要条件\"></a> 二分图存在的充要条件</h2>\n<ul>\n<li>没有奇环</li>\n</ul>\n<h2 id=\"二分图的判定\"><a class=\"markdownIt-Anchor\" href=\"#二分图的判定\"></a> 二分图的判定</h2>\n<p>染色法，任意选择没有访问的点开始 dfs，并且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0,1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span></span></span></span> 交替染色，只要出现一条边的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 个端点颜色相同，那么就不是二分图。</p>","more":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tcolor[x] = c;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (color[nxt] == c)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!color[nxt])</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!<span class=\"built_in\">dfs</span>(nxt, <span class=\"number\">3</span> - c))</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二分图最大匹配\"><a class=\"markdownIt-Anchor\" href=\"#二分图最大匹配\"></a> 二分图最大匹配</h2>\n<p>对于一张无向图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>，且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 可以划分为二分图，我们将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 条边称为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 组“匹配”，在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 中选出最多的匹配且所有选出的边不共点，那么这一组边集，就是一组 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 的最大匹配。</p>\n<h3 id=\"匈牙利算法\"><a class=\"markdownIt-Anchor\" href=\"#匈牙利算法\"></a> 匈牙利算法</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">hungary</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!vis[nxt])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tvis[nxt] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!match[nxt] || <span class=\"built_in\">hungary</span>(match[nxt]))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tmatch[nxt] = x;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二分图最小点覆盖\"><a class=\"markdownIt-Anchor\" href=\"#二分图最小点覆盖\"></a> 二分图最小点覆盖</h2>\n<p>对于一张二分图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>，选取最小的点集 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>，使得点集内的点能覆盖所有的边。（在任意一条边至少有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个端点在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 中）</p>\n<p>性质：</p>\n<ul>\n<li>二分图最大匹配=二分图最小点覆盖</li>\n</ul>"},{"title":"区间dp（三）","date":"2024-12-31T16:00:00.000Z","_content":"\n# 区间dp（三）\n\n## 洛谷P1880\n\n[P1880 [NOI1995] 石子合并 - 洛谷](https://www.luogu.com.cn/problem/P1880)\n\n石子在圆形操场的四周摆放，直接当没有环形区间dp显然会少答案。那么我们一定要这么做怎么办？少了的话可以加回来，斩环为链，数组多一倍，再区间dp。\n\n$dp_{0/1,i,j}$ 表示区间合并 $[i,j]$ 的最小/最大值。\n\n答案为 $\\displaystyle\\min_{1\\le i\\lt n}^idp_{0,i,i+n-1}$ 和 $\\displaystyle\\max_{1\\le i\\lt n}^idp_{1,i,i+n-1}$。\n\n$\\displaystyle dp_{0,i,j}=\\min_{i\\le k\\lt j}^k\\left(dp_{0,i,k}+dp_{0,k+1,j}+\\sum_{i\\le l\\le j}^la_l\\right)$，$\\displaystyle dp_{1,i,j}=\\max_{i\\le k\\lt j}^k\\left(dp_{1,i,k}+dp_{1,k+1,j}+\\sum_{i\\le l\\le j}^la_l\\right)$。\n\n<!-- more -->\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 200 + 5;\nint n, a[N], dp[2][N][N], sum[N], maxi, mini = LLONG_MAX;\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n;\n\tmemset(dp[0], 0x3f, sizeof dp[0]);\n\tmemset(dp[1], 0xcf, sizeof dp[1]);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> a[i];\n\t\ta[i + n] = a[i];\n\t}\n\tfor (int i = 1; i <= 2 * n; i++)\n\t\tsum[i] = sum[i - 1] + a[i], dp[0][i][i] = dp[1][i][i] = 0;\n\tfor (int len = 2; len <= n; len++)\n\t\tfor (int i = 1; i + len - 1 <= 2 * n; i++)\n\t\t{\n\t\t\tint j = i + len - 1, tmp = sum[j] - sum[i - 1];\n\t\t\tfor (int k = i; k < j; k++)\n\t\t\t{\n\t\t\t\tdp[0][i][j] = min(dp[0][i][j], dp[0][i][k] + dp[0][k + 1][j] + tmp);\n\t\t\t\tdp[1][i][j] = max(dp[1][i][j], dp[1][i][k] + dp[1][k + 1][j] + tmp);\n\t\t\t}\n\t\t}\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tmini = min(mini, dp[0][i][i + n - 1]);\n\t\tmaxi = max(maxi, dp[1][i][i + n - 1]);\n\t}\n\tcout << mini << '\\n' << maxi;\n\treturn 0;\n}\n```\n\n## 洛谷P1063\n\n[P1063 能量项链](https://www.luogu.com.cn/problem/P1063)\n\n这一题也是斩环为链，但需要注意计算答案时要弄清楚位置。\n\n$dp_{i,j}$ 表示区间 $[i,j]$ 的最大能量值。\n\n$\\displaystyle dp_{i,j}=\\max_{i\\lt k\\lt j}^k\\left(dp_{i,k}+dp_{k,j}+a_i\\cdot a_j\\cdot a_k\\right)$。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 200 + 5;\nint n, a[N], dp[N][N], maxi;\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> a[i];\n\t\ta[i + n] = a[i];\n\t}\n\tfor (int len = 2; len <= n + 1; len++)\n\t\tfor (int i = 1; i + len - 1 <= 2 * n; i++)\n\t\t{\n\t\t\tint j = i + len - 1;\n\t\t\tfor (int k = i + 1; k < j; k++)\n\t\t\t\tdp[i][j] = max(dp[i][j], dp[i][k] + dp[k][j] +\n\t\t\t\t\ta[i] * a[j] * a[k]);\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tmaxi = max(maxi, dp[i][i + n]); //这道题不要减1,因为头尾标记共用\n\tcout << maxi;\n\treturn 0;\n}\n```\n\n## 洛谷P4342\n\n[P4342 [IOI 1998] Polygon](https://www.luogu.com.cn/problem/P4342)\n\n这道题不仅需要计算最大值，因为有乘法操作，所以需要维护最小值。\n\n$dp_{i,j,0/1}$ 表示计算区间 $[i,j]$ 的最小值/最大值。\n\n\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 100 + 5;\nint n, a[N], dp[N][N][2], ans = INT_MIN;\nchar c[N];\nint work(int x, int y, char c)\n{\n\tif (c == 't')\n\t\treturn x + y;\n\treturn x * y;\n}\nint help(int x, int y, bool f)\n{\n\tif (!f)\n\t\treturn min(x, y);\n\treturn max(x, y);\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> c[i] >> a[i];\n\t\tc[n + i] = c[i];\n\t\ta[n + i] = a[i];\n\t\tdp[i][i][0] = dp[i][i][1] = dp[n + i][n + i][0] = dp[n + i][n + i][1] = a[i];\n\t}\n\tc[2 * n + 1] = c[1];\n\tfor (int len = 2; len <= n; len++)\n\t\tfor (int i = 1; i + len - 1 <= 2 * n; i++)\n\t\t{\n\t\t\tint j = i + len - 1;\n\t\t\tdp[i][j][0] = INT_MAX; //最小值和最大值初始状态不要赋错\n\t\t\tdp[i][j][1] = INT_MIN;\n\t\t\tfor (int k = i; k < j; k++)\n\t\t\t\tfor (int l = 0; l < 8; l++)\n\t\t\t\t\tdp[i][j][l & 1] = help(dp[i][j][l & 1],\n\t\t\t\t\t\twork(dp[i][k][(l & 2) >> 1], dp[k + 1][j][(l & 4) >> 2],\n\t\t\t\t\t\t\tc[k + 1]), l & 1);\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tans = max(ans, dp[i][n + i - 1][1]);\n\tcout << ans << '\\n';\n\tfor (int i = 1; i <= n; i++)\n\t\tif (dp[i][n + i - 1][1] == ans)\n\t\t\tcout << i << ' ';\n\treturn 0;\n}\n```\n\n## 洛谷P6064\n\n[P6064 [USACO05JAN] Naptime G](https://www.luogu.com.cn/problem/P6064)\n\n我们发现第 $1$ 时间端依赖前一天的最后的时间段，所以这道题需要分情况讨论前一天的最后的时间段是否睡觉，且不是区间dp。\n\n$dp_{i,j,0/1}$ 表示枚举到第 $i$ 端时间，睡了 $j$ 小时，第 $i$ 小时是否睡觉的最大效用值。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n// #define int long long\nusing namespace std;\nconst int N = 3830 + 5;\nint n, m, a[N], dp[N][N][2];\nint work(bool f)\n{\n\tmemset(dp, 0xcf, sizeof dp);\n\tdp[1][0][0] = 0;\n\tdp[1][1][1] = f * a[1];\n\tfor (int i = 2; i <= n; i++)\n\t\tfor (int j = 0; j <= m; j++)\n\t\t{\n\t\t\tdp[i][j][0] = max({ dp[i][j][0],dp[i - 1][j][0],dp[i - 1][j][1] });\n\t\t\tif (j)\n\t\t\t\tdp[i][j][1] = max({ dp[i][j][1],dp[i - 1][j - 1][0],\n\t\t\t\t\tdp[i - 1][j - 1][1] + a[i] });\n\t\t}\n\treturn dp[n][m][f];\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> a[i];\n\tcout << max(work(false), work(true));\n\treturn 0;\n}\n```\n\n","source":"_posts/区间dp（三）.md","raw":"---\ntitle: 区间dp（三）\ndate: 2025-01-01 00:00:00\ntags:\n\t- [动态规划]\n\t- [区间dp]\ncategories:\n\t- [编程]\n\t- [算法]\n\t- [动态规划]\n\t- [区间dp]\n---\n\n# 区间dp（三）\n\n## 洛谷P1880\n\n[P1880 [NOI1995] 石子合并 - 洛谷](https://www.luogu.com.cn/problem/P1880)\n\n石子在圆形操场的四周摆放，直接当没有环形区间dp显然会少答案。那么我们一定要这么做怎么办？少了的话可以加回来，斩环为链，数组多一倍，再区间dp。\n\n$dp_{0/1,i,j}$ 表示区间合并 $[i,j]$ 的最小/最大值。\n\n答案为 $\\displaystyle\\min_{1\\le i\\lt n}^idp_{0,i,i+n-1}$ 和 $\\displaystyle\\max_{1\\le i\\lt n}^idp_{1,i,i+n-1}$。\n\n$\\displaystyle dp_{0,i,j}=\\min_{i\\le k\\lt j}^k\\left(dp_{0,i,k}+dp_{0,k+1,j}+\\sum_{i\\le l\\le j}^la_l\\right)$，$\\displaystyle dp_{1,i,j}=\\max_{i\\le k\\lt j}^k\\left(dp_{1,i,k}+dp_{1,k+1,j}+\\sum_{i\\le l\\le j}^la_l\\right)$。\n\n<!-- more -->\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 200 + 5;\nint n, a[N], dp[2][N][N], sum[N], maxi, mini = LLONG_MAX;\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n;\n\tmemset(dp[0], 0x3f, sizeof dp[0]);\n\tmemset(dp[1], 0xcf, sizeof dp[1]);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> a[i];\n\t\ta[i + n] = a[i];\n\t}\n\tfor (int i = 1; i <= 2 * n; i++)\n\t\tsum[i] = sum[i - 1] + a[i], dp[0][i][i] = dp[1][i][i] = 0;\n\tfor (int len = 2; len <= n; len++)\n\t\tfor (int i = 1; i + len - 1 <= 2 * n; i++)\n\t\t{\n\t\t\tint j = i + len - 1, tmp = sum[j] - sum[i - 1];\n\t\t\tfor (int k = i; k < j; k++)\n\t\t\t{\n\t\t\t\tdp[0][i][j] = min(dp[0][i][j], dp[0][i][k] + dp[0][k + 1][j] + tmp);\n\t\t\t\tdp[1][i][j] = max(dp[1][i][j], dp[1][i][k] + dp[1][k + 1][j] + tmp);\n\t\t\t}\n\t\t}\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tmini = min(mini, dp[0][i][i + n - 1]);\n\t\tmaxi = max(maxi, dp[1][i][i + n - 1]);\n\t}\n\tcout << mini << '\\n' << maxi;\n\treturn 0;\n}\n```\n\n## 洛谷P1063\n\n[P1063 能量项链](https://www.luogu.com.cn/problem/P1063)\n\n这一题也是斩环为链，但需要注意计算答案时要弄清楚位置。\n\n$dp_{i,j}$ 表示区间 $[i,j]$ 的最大能量值。\n\n$\\displaystyle dp_{i,j}=\\max_{i\\lt k\\lt j}^k\\left(dp_{i,k}+dp_{k,j}+a_i\\cdot a_j\\cdot a_k\\right)$。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 200 + 5;\nint n, a[N], dp[N][N], maxi;\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> a[i];\n\t\ta[i + n] = a[i];\n\t}\n\tfor (int len = 2; len <= n + 1; len++)\n\t\tfor (int i = 1; i + len - 1 <= 2 * n; i++)\n\t\t{\n\t\t\tint j = i + len - 1;\n\t\t\tfor (int k = i + 1; k < j; k++)\n\t\t\t\tdp[i][j] = max(dp[i][j], dp[i][k] + dp[k][j] +\n\t\t\t\t\ta[i] * a[j] * a[k]);\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tmaxi = max(maxi, dp[i][i + n]); //这道题不要减1,因为头尾标记共用\n\tcout << maxi;\n\treturn 0;\n}\n```\n\n## 洛谷P4342\n\n[P4342 [IOI 1998] Polygon](https://www.luogu.com.cn/problem/P4342)\n\n这道题不仅需要计算最大值，因为有乘法操作，所以需要维护最小值。\n\n$dp_{i,j,0/1}$ 表示计算区间 $[i,j]$ 的最小值/最大值。\n\n\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 100 + 5;\nint n, a[N], dp[N][N][2], ans = INT_MIN;\nchar c[N];\nint work(int x, int y, char c)\n{\n\tif (c == 't')\n\t\treturn x + y;\n\treturn x * y;\n}\nint help(int x, int y, bool f)\n{\n\tif (!f)\n\t\treturn min(x, y);\n\treturn max(x, y);\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> c[i] >> a[i];\n\t\tc[n + i] = c[i];\n\t\ta[n + i] = a[i];\n\t\tdp[i][i][0] = dp[i][i][1] = dp[n + i][n + i][0] = dp[n + i][n + i][1] = a[i];\n\t}\n\tc[2 * n + 1] = c[1];\n\tfor (int len = 2; len <= n; len++)\n\t\tfor (int i = 1; i + len - 1 <= 2 * n; i++)\n\t\t{\n\t\t\tint j = i + len - 1;\n\t\t\tdp[i][j][0] = INT_MAX; //最小值和最大值初始状态不要赋错\n\t\t\tdp[i][j][1] = INT_MIN;\n\t\t\tfor (int k = i; k < j; k++)\n\t\t\t\tfor (int l = 0; l < 8; l++)\n\t\t\t\t\tdp[i][j][l & 1] = help(dp[i][j][l & 1],\n\t\t\t\t\t\twork(dp[i][k][(l & 2) >> 1], dp[k + 1][j][(l & 4) >> 2],\n\t\t\t\t\t\t\tc[k + 1]), l & 1);\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tans = max(ans, dp[i][n + i - 1][1]);\n\tcout << ans << '\\n';\n\tfor (int i = 1; i <= n; i++)\n\t\tif (dp[i][n + i - 1][1] == ans)\n\t\t\tcout << i << ' ';\n\treturn 0;\n}\n```\n\n## 洛谷P6064\n\n[P6064 [USACO05JAN] Naptime G](https://www.luogu.com.cn/problem/P6064)\n\n我们发现第 $1$ 时间端依赖前一天的最后的时间段，所以这道题需要分情况讨论前一天的最后的时间段是否睡觉，且不是区间dp。\n\n$dp_{i,j,0/1}$ 表示枚举到第 $i$ 端时间，睡了 $j$ 小时，第 $i$ 小时是否睡觉的最大效用值。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n// #define int long long\nusing namespace std;\nconst int N = 3830 + 5;\nint n, m, a[N], dp[N][N][2];\nint work(bool f)\n{\n\tmemset(dp, 0xcf, sizeof dp);\n\tdp[1][0][0] = 0;\n\tdp[1][1][1] = f * a[1];\n\tfor (int i = 2; i <= n; i++)\n\t\tfor (int j = 0; j <= m; j++)\n\t\t{\n\t\t\tdp[i][j][0] = max({ dp[i][j][0],dp[i - 1][j][0],dp[i - 1][j][1] });\n\t\t\tif (j)\n\t\t\t\tdp[i][j][1] = max({ dp[i][j][1],dp[i - 1][j - 1][0],\n\t\t\t\t\tdp[i - 1][j - 1][1] + a[i] });\n\t\t}\n\treturn dp[n][m][f];\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> a[i];\n\tcout << max(work(false), work(true));\n\treturn 0;\n}\n```\n\n","slug":"区间dp（三）","published":1,"updated":"2025-09-18T07:47:07.989Z","comments":1,"layout":"post","photos":[],"_id":"cmfp5q6ag000a3kv385ae77y4","content":"<h1 id=\"区间dp三\"><a class=\"markdownIt-Anchor\" href=\"#区间dp三\"></a> 区间dp（三）</h1>\n<h2 id=\"洛谷p1880\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1880\"></a> 洛谷P1880</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P1880\">P1880 [NOI1995] 石子合并 - 洛谷</a></p>\n<p>石子在圆形操场的四周摆放，直接当没有环形区间dp显然会少答案。那么我们一定要这么做怎么办？少了的话可以加回来，斩环为链，数组多一倍，再区间dp。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{0/1,i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 表示区间合并 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的最小/最大值。</p>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munderover><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>&lt;</mo><mi>n</mi></mrow><mi>i</mi></munderover><mi>d</mi><msub><mi>p</mi><mrow><mn>0</mn><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>i</mi><mo>+</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle\\min_{1\\le i\\lt n}^idp_{0,i,i+n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.2523670000000005em;vertical-align:-0.822843em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4295240000000002em;\"><span style=\"top:-2.372336em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">min</span></span></span><span style=\"top:-3.8678600000000003em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.822843em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munderover><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>&lt;</mo><mi>n</mi></mrow><mi>i</mi></munderover><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>i</mi><mo>+</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle\\max_{1\\le i\\lt n}^idp_{1,i,i+n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.015067em;vertical-align:-0.822843em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.192224em;\"><span style=\"top:-2.372336em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">max</span></span></span><span style=\"top:-3.63056em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.822843em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>d</mi><msub><mi>p</mi><mrow><mn>0</mn><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><munderover><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>i</mi><mo>≤</mo><mi>k</mi><mo>&lt;</mo><mi>j</mi></mrow><mi>k</mi></munderover><mrow><mo fence=\"true\">(</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>0</mn><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub><mo>+</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>0</mn><mo separator=\"true\">,</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>≤</mo><mi>l</mi><mo>≤</mo><mi>j</mi></mrow><mi>l</mi></munderover><msub><mi>a</mi><mi>l</mi></msub><mo fence=\"true\">)</mo></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle dp_{0,i,j}=\\min_{i\\le k\\lt j}^k\\left(dp_{0,i,k}+dp_{0,k+1,j}+\\sum_{i\\le l\\le j}^la_l\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.453968em;\"><span style=\"top:-2.347892em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">min</span></span></span><span style=\"top:-3.86786em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888216em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎝</span></span></span><span style=\"top:-3.2550000000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"overlay\" style=\"height:0.3em;width:0.875em;\"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M291 0 H417 V300 H291 z'/></svg></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎛</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.836113em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.438221em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎠</span></span></span><span style=\"top:-3.2550000000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"overlay\" style=\"height:0.3em;width:0.875em;\"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M457 0 H583 V300 H457 z'/></svg></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><munderover><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>i</mi><mo>≤</mo><mi>k</mi><mo>&lt;</mo><mi>j</mi></mrow><mi>k</mi></munderover><mrow><mo fence=\"true\">(</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub><mo>+</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>≤</mo><mi>l</mi><mo>≤</mo><mi>j</mi></mrow><mi>l</mi></munderover><msub><mi>a</mi><mi>l</mi></msub><mo fence=\"true\">)</mo></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle dp_{1,i,j}=\\max_{i\\le k\\lt j}^k\\left(dp_{1,i,k}+dp_{1,k+1,j}+\\sum_{i\\le l\\le j}^la_l\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2166679999999999em;\"><span style=\"top:-2.347892em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">max</span></span></span><span style=\"top:-3.63056em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888216em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎝</span></span></span><span style=\"top:-3.2550000000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"overlay\" style=\"height:0.3em;width:0.875em;\"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M291 0 H417 V300 H291 z'/></svg></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎛</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.836113em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.438221em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎠</span></span></span><span style=\"top:-3.2550000000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"overlay\" style=\"height:0.3em;width:0.875em;\"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M457 0 H583 V300 H457 z'/></svg></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span>。</p>\n<span id=\"more\"></span>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">200</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, a[N], dp[<span class=\"number\">2</span>][N][N], sum[N], maxi, mini = LLONG_MAX;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp[<span class=\"number\">0</span>], <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dp[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp[<span class=\"number\">1</span>], <span class=\"number\">0xcf</span>, <span class=\"keyword\">sizeof</span> dp[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\t\ta[i + n] = a[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">2</span> * n; i++)</span><br><span class=\"line\">\t\tsum[i] = sum[i - <span class=\"number\">1</span>] + a[i], dp[<span class=\"number\">0</span>][i][i] = dp[<span class=\"number\">1</span>][i][i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n; len++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= <span class=\"number\">2</span> * n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>, tmp = sum[j] - sum[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tdp[<span class=\"number\">0</span>][i][j] = <span class=\"built_in\">min</span>(dp[<span class=\"number\">0</span>][i][j], dp[<span class=\"number\">0</span>][i][k] + dp[<span class=\"number\">0</span>][k + <span class=\"number\">1</span>][j] + tmp);</span><br><span class=\"line\">\t\t\t\tdp[<span class=\"number\">1</span>][i][j] = <span class=\"built_in\">max</span>(dp[<span class=\"number\">1</span>][i][j], dp[<span class=\"number\">1</span>][i][k] + dp[<span class=\"number\">1</span>][k + <span class=\"number\">1</span>][j] + tmp);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmini = <span class=\"built_in\">min</span>(mini, dp[<span class=\"number\">0</span>][i][i + n - <span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\tmaxi = <span class=\"built_in\">max</span>(maxi, dp[<span class=\"number\">1</span>][i][i + n - <span class=\"number\">1</span>]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; mini &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span> &lt;&lt; maxi;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p1063\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1063\"></a> 洛谷P1063</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P1063\">P1063 能量项链</a></p>\n<p>这一题也是斩环为链，但需要注意计算答案时要弄清楚位置。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的最大能量值。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><munderover><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>i</mi><mo>&lt;</mo><mi>k</mi><mo>&lt;</mo><mi>j</mi></mrow><mi>k</mi></munderover><mrow><mo fence=\"true\">(</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub><mo>+</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>+</mo><msub><mi>a</mi><mi>i</mi></msub><mo>⋅</mo><msub><mi>a</mi><mi>j</mi></msub><mo>⋅</mo><msub><mi>a</mi><mi>k</mi></msub><mo fence=\"true\">)</mo></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle dp_{i,j}=\\max_{i\\lt k\\lt j}^k\\left(dp_{i,k}+dp_{k,j}+a_i\\cdot a_j\\cdot a_k\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1048839999999998em;vertical-align:-0.888216em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2166679999999999em;\"><span style=\"top:-2.347892em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">max</span></span></span><span style=\"top:-3.63056em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888216em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">200</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, a[N], dp[N][N], maxi;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\t\ta[i + n] = a[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n + <span class=\"number\">1</span>; len++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= <span class=\"number\">2</span> * n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i + <span class=\"number\">1</span>; k &lt; j; k++)</span><br><span class=\"line\">\t\t\t\tdp[i][j] = <span class=\"built_in\">max</span>(dp[i][j], dp[i][k] + dp[k][j] +</span><br><span class=\"line\">\t\t\t\t\ta[i] * a[j] * a[k]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tmaxi = <span class=\"built_in\">max</span>(maxi, dp[i][i + n]); <span class=\"comment\">//这道题不要减1,因为头尾标记共用</span></span><br><span class=\"line\">\tcout &lt;&lt; maxi;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p4342\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p4342\"></a> 洛谷P4342</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P4342\">P4342 [IOI 1998] Polygon</a></p>\n<p>这道题不仅需要计算最大值，因为有乘法操作，所以需要维护最小值。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,0/1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 表示计算区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的最小值/最大值。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, a[N], dp[N][N][<span class=\"number\">2</span>], ans = INT_MIN;</span><br><span class=\"line\"><span class=\"type\">char</span> c[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">work</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">char</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;t&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x * y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">help</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">bool</span> f)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!f)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"built_in\">min</span>(x, y);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">max</span>(x, y);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; c[i] &gt;&gt; a[i];</span><br><span class=\"line\">\t\tc[n + i] = c[i];</span><br><span class=\"line\">\t\ta[n + i] = a[i];</span><br><span class=\"line\">\t\tdp[i][i][<span class=\"number\">0</span>] = dp[i][i][<span class=\"number\">1</span>] = dp[n + i][n + i][<span class=\"number\">0</span>] = dp[n + i][n + i][<span class=\"number\">1</span>] = a[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tc[<span class=\"number\">2</span> * n + <span class=\"number\">1</span>] = c[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n; len++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= <span class=\"number\">2</span> * n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tdp[i][j][<span class=\"number\">0</span>] = INT_MAX; <span class=\"comment\">//最小值和最大值初始状态不要赋错</span></span><br><span class=\"line\">\t\t\tdp[i][j][<span class=\"number\">1</span>] = INT_MIN;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> l = <span class=\"number\">0</span>; l &lt; <span class=\"number\">8</span>; l++)</span><br><span class=\"line\">\t\t\t\t\tdp[i][j][l &amp; <span class=\"number\">1</span>] = <span class=\"built_in\">help</span>(dp[i][j][l &amp; <span class=\"number\">1</span>],</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">work</span>(dp[i][k][(l &amp; <span class=\"number\">2</span>) &gt;&gt; <span class=\"number\">1</span>], dp[k + <span class=\"number\">1</span>][j][(l &amp; <span class=\"number\">4</span>) &gt;&gt; <span class=\"number\">2</span>],</span><br><span class=\"line\">\t\t\t\t\t\t\tc[k + <span class=\"number\">1</span>]), l &amp; <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tans = <span class=\"built_in\">max</span>(ans, dp[i][n + i - <span class=\"number\">1</span>][<span class=\"number\">1</span>]);</span><br><span class=\"line\">\tcout &lt;&lt; ans &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (dp[i][n + i - <span class=\"number\">1</span>][<span class=\"number\">1</span>] == ans)</span><br><span class=\"line\">\t\t\tcout &lt;&lt; i &lt;&lt; <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p6064\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p6064\"></a> 洛谷P6064</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P6064\">P6064 [USACO05JAN] Naptime G</a></p>\n<p>我们发现第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 时间端依赖前一天的最后的时间段，所以这道题需要分情况讨论前一天的最后的时间段是否睡觉，且不是区间dp。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,0/1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 表示枚举到第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 端时间，睡了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 小时，第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 小时是否睡觉的最大效用值。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"comment\">// #define int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">3830</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, a[N], dp[N][N][<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">work</span><span class=\"params\">(<span class=\"type\">bool</span> f)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp, <span class=\"number\">0xcf</span>, <span class=\"keyword\">sizeof</span> dp);</span><br><span class=\"line\">\tdp[<span class=\"number\">1</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tdp[<span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">1</span>] = f * a[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= m; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tdp[i][j][<span class=\"number\">0</span>] = <span class=\"built_in\">max</span>(&#123; dp[i][j][<span class=\"number\">0</span>],dp[i - <span class=\"number\">1</span>][j][<span class=\"number\">0</span>],dp[i - <span class=\"number\">1</span>][j][<span class=\"number\">1</span>] &#125;);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (j)</span><br><span class=\"line\">\t\t\t\tdp[i][j][<span class=\"number\">1</span>] = <span class=\"built_in\">max</span>(&#123; dp[i][j][<span class=\"number\">1</span>],dp[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>][<span class=\"number\">0</span>],</span><br><span class=\"line\">\t\t\t\t\tdp[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>][<span class=\"number\">1</span>] + a[i] &#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dp[n][m][f];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">max</span>(<span class=\"built_in\">work</span>(<span class=\"literal\">false</span>), <span class=\"built_in\">work</span>(<span class=\"literal\">true</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"<h1 id=\"区间dp三\"><a class=\"markdownIt-Anchor\" href=\"#区间dp三\"></a> 区间dp（三）</h1>\n<h2 id=\"洛谷p1880\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1880\"></a> 洛谷P1880</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P1880\">P1880 [NOI1995] 石子合并 - 洛谷</a></p>\n<p>石子在圆形操场的四周摆放，直接当没有环形区间dp显然会少答案。那么我们一定要这么做怎么办？少了的话可以加回来，斩环为链，数组多一倍，再区间dp。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{0/1,i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 表示区间合并 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的最小/最大值。</p>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munderover><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>&lt;</mo><mi>n</mi></mrow><mi>i</mi></munderover><mi>d</mi><msub><mi>p</mi><mrow><mn>0</mn><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>i</mi><mo>+</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle\\min_{1\\le i\\lt n}^idp_{0,i,i+n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.2523670000000005em;vertical-align:-0.822843em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4295240000000002em;\"><span style=\"top:-2.372336em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">min</span></span></span><span style=\"top:-3.8678600000000003em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.822843em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munderover><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>&lt;</mo><mi>n</mi></mrow><mi>i</mi></munderover><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>i</mi><mo>+</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle\\max_{1\\le i\\lt n}^idp_{1,i,i+n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.015067em;vertical-align:-0.822843em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.192224em;\"><span style=\"top:-2.372336em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">max</span></span></span><span style=\"top:-3.63056em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.822843em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>d</mi><msub><mi>p</mi><mrow><mn>0</mn><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><munderover><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>i</mi><mo>≤</mo><mi>k</mi><mo>&lt;</mo><mi>j</mi></mrow><mi>k</mi></munderover><mrow><mo fence=\"true\">(</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>0</mn><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub><mo>+</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>0</mn><mo separator=\"true\">,</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>≤</mo><mi>l</mi><mo>≤</mo><mi>j</mi></mrow><mi>l</mi></munderover><msub><mi>a</mi><mi>l</mi></msub><mo fence=\"true\">)</mo></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle dp_{0,i,j}=\\min_{i\\le k\\lt j}^k\\left(dp_{0,i,k}+dp_{0,k+1,j}+\\sum_{i\\le l\\le j}^la_l\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.453968em;\"><span style=\"top:-2.347892em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">min</span></span></span><span style=\"top:-3.86786em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888216em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎝</span></span></span><span style=\"top:-3.2550000000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"overlay\" style=\"height:0.3em;width:0.875em;\"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M291 0 H417 V300 H291 z'/></svg></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎛</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.836113em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.438221em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎠</span></span></span><span style=\"top:-3.2550000000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"overlay\" style=\"height:0.3em;width:0.875em;\"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M457 0 H583 V300 H457 z'/></svg></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><munderover><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>i</mi><mo>≤</mo><mi>k</mi><mo>&lt;</mo><mi>j</mi></mrow><mi>k</mi></munderover><mrow><mo fence=\"true\">(</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub><mo>+</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>≤</mo><mi>l</mi><mo>≤</mo><mi>j</mi></mrow><mi>l</mi></munderover><msub><mi>a</mi><mi>l</mi></msub><mo fence=\"true\">)</mo></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle dp_{1,i,j}=\\max_{i\\le k\\lt j}^k\\left(dp_{1,i,k}+dp_{1,k+1,j}+\\sum_{i\\le l\\le j}^la_l\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2166679999999999em;\"><span style=\"top:-2.347892em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">max</span></span></span><span style=\"top:-3.63056em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888216em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎝</span></span></span><span style=\"top:-3.2550000000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"overlay\" style=\"height:0.3em;width:0.875em;\"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M291 0 H417 V300 H291 z'/></svg></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎛</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.836113em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.438221em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎠</span></span></span><span style=\"top:-3.2550000000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"overlay\" style=\"height:0.3em;width:0.875em;\"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M457 0 H583 V300 H457 z'/></svg></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span>。</p>","more":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">200</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, a[N], dp[<span class=\"number\">2</span>][N][N], sum[N], maxi, mini = LLONG_MAX;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp[<span class=\"number\">0</span>], <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dp[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp[<span class=\"number\">1</span>], <span class=\"number\">0xcf</span>, <span class=\"keyword\">sizeof</span> dp[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\t\ta[i + n] = a[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">2</span> * n; i++)</span><br><span class=\"line\">\t\tsum[i] = sum[i - <span class=\"number\">1</span>] + a[i], dp[<span class=\"number\">0</span>][i][i] = dp[<span class=\"number\">1</span>][i][i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n; len++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= <span class=\"number\">2</span> * n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>, tmp = sum[j] - sum[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tdp[<span class=\"number\">0</span>][i][j] = <span class=\"built_in\">min</span>(dp[<span class=\"number\">0</span>][i][j], dp[<span class=\"number\">0</span>][i][k] + dp[<span class=\"number\">0</span>][k + <span class=\"number\">1</span>][j] + tmp);</span><br><span class=\"line\">\t\t\t\tdp[<span class=\"number\">1</span>][i][j] = <span class=\"built_in\">max</span>(dp[<span class=\"number\">1</span>][i][j], dp[<span class=\"number\">1</span>][i][k] + dp[<span class=\"number\">1</span>][k + <span class=\"number\">1</span>][j] + tmp);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmini = <span class=\"built_in\">min</span>(mini, dp[<span class=\"number\">0</span>][i][i + n - <span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\tmaxi = <span class=\"built_in\">max</span>(maxi, dp[<span class=\"number\">1</span>][i][i + n - <span class=\"number\">1</span>]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; mini &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span> &lt;&lt; maxi;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p1063\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1063\"></a> 洛谷P1063</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P1063\">P1063 能量项链</a></p>\n<p>这一题也是斩环为链，但需要注意计算答案时要弄清楚位置。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的最大能量值。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><munderover><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>i</mi><mo>&lt;</mo><mi>k</mi><mo>&lt;</mo><mi>j</mi></mrow><mi>k</mi></munderover><mrow><mo fence=\"true\">(</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub><mo>+</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>+</mo><msub><mi>a</mi><mi>i</mi></msub><mo>⋅</mo><msub><mi>a</mi><mi>j</mi></msub><mo>⋅</mo><msub><mi>a</mi><mi>k</mi></msub><mo fence=\"true\">)</mo></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle dp_{i,j}=\\max_{i\\lt k\\lt j}^k\\left(dp_{i,k}+dp_{k,j}+a_i\\cdot a_j\\cdot a_k\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1048839999999998em;vertical-align:-0.888216em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2166679999999999em;\"><span style=\"top:-2.347892em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">max</span></span></span><span style=\"top:-3.63056em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888216em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">200</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, a[N], dp[N][N], maxi;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\t\ta[i + n] = a[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n + <span class=\"number\">1</span>; len++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= <span class=\"number\">2</span> * n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i + <span class=\"number\">1</span>; k &lt; j; k++)</span><br><span class=\"line\">\t\t\t\tdp[i][j] = <span class=\"built_in\">max</span>(dp[i][j], dp[i][k] + dp[k][j] +</span><br><span class=\"line\">\t\t\t\t\ta[i] * a[j] * a[k]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tmaxi = <span class=\"built_in\">max</span>(maxi, dp[i][i + n]); <span class=\"comment\">//这道题不要减1,因为头尾标记共用</span></span><br><span class=\"line\">\tcout &lt;&lt; maxi;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p4342\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p4342\"></a> 洛谷P4342</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P4342\">P4342 [IOI 1998] Polygon</a></p>\n<p>这道题不仅需要计算最大值，因为有乘法操作，所以需要维护最小值。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,0/1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 表示计算区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的最小值/最大值。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, a[N], dp[N][N][<span class=\"number\">2</span>], ans = INT_MIN;</span><br><span class=\"line\"><span class=\"type\">char</span> c[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">work</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">char</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;t&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x * y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">help</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">bool</span> f)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!f)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"built_in\">min</span>(x, y);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">max</span>(x, y);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; c[i] &gt;&gt; a[i];</span><br><span class=\"line\">\t\tc[n + i] = c[i];</span><br><span class=\"line\">\t\ta[n + i] = a[i];</span><br><span class=\"line\">\t\tdp[i][i][<span class=\"number\">0</span>] = dp[i][i][<span class=\"number\">1</span>] = dp[n + i][n + i][<span class=\"number\">0</span>] = dp[n + i][n + i][<span class=\"number\">1</span>] = a[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tc[<span class=\"number\">2</span> * n + <span class=\"number\">1</span>] = c[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n; len++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= <span class=\"number\">2</span> * n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tdp[i][j][<span class=\"number\">0</span>] = INT_MAX; <span class=\"comment\">//最小值和最大值初始状态不要赋错</span></span><br><span class=\"line\">\t\t\tdp[i][j][<span class=\"number\">1</span>] = INT_MIN;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> l = <span class=\"number\">0</span>; l &lt; <span class=\"number\">8</span>; l++)</span><br><span class=\"line\">\t\t\t\t\tdp[i][j][l &amp; <span class=\"number\">1</span>] = <span class=\"built_in\">help</span>(dp[i][j][l &amp; <span class=\"number\">1</span>],</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">work</span>(dp[i][k][(l &amp; <span class=\"number\">2</span>) &gt;&gt; <span class=\"number\">1</span>], dp[k + <span class=\"number\">1</span>][j][(l &amp; <span class=\"number\">4</span>) &gt;&gt; <span class=\"number\">2</span>],</span><br><span class=\"line\">\t\t\t\t\t\t\tc[k + <span class=\"number\">1</span>]), l &amp; <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tans = <span class=\"built_in\">max</span>(ans, dp[i][n + i - <span class=\"number\">1</span>][<span class=\"number\">1</span>]);</span><br><span class=\"line\">\tcout &lt;&lt; ans &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (dp[i][n + i - <span class=\"number\">1</span>][<span class=\"number\">1</span>] == ans)</span><br><span class=\"line\">\t\t\tcout &lt;&lt; i &lt;&lt; <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p6064\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p6064\"></a> 洛谷P6064</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P6064\">P6064 [USACO05JAN] Naptime G</a></p>\n<p>我们发现第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 时间端依赖前一天的最后的时间段，所以这道题需要分情况讨论前一天的最后的时间段是否睡觉，且不是区间dp。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,0/1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 表示枚举到第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 端时间，睡了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 小时，第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 小时是否睡觉的最大效用值。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"comment\">// #define int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">3830</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, a[N], dp[N][N][<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">work</span><span class=\"params\">(<span class=\"type\">bool</span> f)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp, <span class=\"number\">0xcf</span>, <span class=\"keyword\">sizeof</span> dp);</span><br><span class=\"line\">\tdp[<span class=\"number\">1</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tdp[<span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">1</span>] = f * a[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= m; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tdp[i][j][<span class=\"number\">0</span>] = <span class=\"built_in\">max</span>(&#123; dp[i][j][<span class=\"number\">0</span>],dp[i - <span class=\"number\">1</span>][j][<span class=\"number\">0</span>],dp[i - <span class=\"number\">1</span>][j][<span class=\"number\">1</span>] &#125;);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (j)</span><br><span class=\"line\">\t\t\t\tdp[i][j][<span class=\"number\">1</span>] = <span class=\"built_in\">max</span>(&#123; dp[i][j][<span class=\"number\">1</span>],dp[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>][<span class=\"number\">0</span>],</span><br><span class=\"line\">\t\t\t\t\tdp[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>][<span class=\"number\">1</span>] + a[i] &#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dp[n][m][f];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">max</span>(<span class=\"built_in\">work</span>(<span class=\"literal\">false</span>), <span class=\"built_in\">work</span>(<span class=\"literal\">true</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"区间dp（二）","date":"2024-12-31T16:00:00.000Z","_content":"\n# 区间dp（二）\n\n## 洛谷P1220\n\n[P1220 关路灯](https://www.luogu.com.cn/problem/P1220)\n\n> 请你为老张编一程序来安排关灯的顺序，使从老张开始关灯时刻算起所有灯消耗电最少（灯关掉后便不再消耗电了）。\n\n老张关路灯像区间dp，可以发现他关路灯时不会关关过的中间加的，不然不优。\n\n### 状态\n\n$dp_{i,j,0/1}$ 表示区间关 $[i,j]$ 最后达到 $i/j$ 的最少功耗。\n\n### 答案\n\n$$\\min(dp_{1,n,0},dp_{1,n,1})$$\n\n<!-- more -->\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 50 + 5;\nint n, m, dp[N][N][2], a[N], b[N], sum[N];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tmemset(dp, 0x3f, sizeof dp);\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> a[i] >> b[i], sum[i] = sum[i - 1] + b[i];\n\tdp[m][m][0] = dp[m][m][1] = 0;\n\tfor (int len = 2; len <= n; len++)\n\t\tfor (int i = 1; i + len - 1 <= n; i++)\n\t\t{\n\t\t\tint j = i + len - 1, tmp = sum[n] - sum[j] + sum[i],\n\t\t\t\ttmp1 = sum[n] - sum[j - 1] + sum[i - 1];\n\t\t\tdp[i][j][0] = min(dp[i + 1][j][0] + (a[i + 1] - a[i]) * tmp,\n\t\t\t\tdp[i + 1][j][1] + (a[j] - a[i]) * tmp);\n\t\t\tdp[i][j][1] = min(dp[i][j - 1][0] + (a[j] - a[i]) * tmp1,\n\t\t\t\tdp[i][j - 1][1] + (a[j] - a[j - 1]) * tmp1);\n\t\t}\n\tcout << min(dp[1][n][0], dp[1][n][1]);\n\treturn 0;\n}\n```\n\n## 洛谷P8675\n\n[P8675 [蓝桥杯 2018 国 B] 搭积木](https://www.luogu.com.cn/problem/P8675)\n\n### 状态\n\n$dp_{l,i,j}$ 表示搭 $l$ 层的区间 $[i,j]$ 的方案数。\n\n### 答案\n\n$$\\displaystyle\\left(\\sum^l_{1\\le l\\le n}\\sum^i_{1\\le i\\le m}\\sum^j_{i\\le j\\le m}dp_{l,i,j}\\right)\\bmod{10^9+7}$$\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 100 + 5;\nint n, m, dp[N][N][N], sum[N][N], vis[N][N], ans, mod = 1e9 + 7;\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = n; i >= 1; i--)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\tvis[i][j] = vis[i][j - 1] + (c == 'X');\n\t\t}\n\tdp[0][1][m] = 1;\n\tfor (int l = 1; l <= n; l++)\n\t{\n\t\tmemset(sum, 0, sizeof sum);\n\t\tfor (int i = 1; i <= m; i++)\n\t\t\tfor (int j = i; j <= m; j++)\n\t\t\t\tsum[i][j] = (sum[i - 1][j] + sum[i][j - 1] - sum[i - 1][j - 1] +\n\t\t\t\t\tdp[l - 1][i][j] + mod) % mod;\n\t\tfor (int len = 1; len <= m; len++)\n\t\t\tfor (int i = 1; i + len - 1 <= m; i++)\n\t\t\t{\n\t\t\t\tint j = i + len - 1;\n\t\t\t\tif (!(vis[l][j] - vis[l][i - 1]))\n\t\t\t\t\tans = (ans + (dp[l][i][j] = (sum[i][m] - sum[i][j - 1] +\n\t\t\t\t\t\tmod) % mod)) % mod;\n\t\t\t}\n\t}\n\tcout << (ans + 1) % mod;\n\treturn 0;\n}\n```\n\n## 洛谷P4302\n\n[P4302 [SCOI2003] 字符串折叠](https://www.luogu.com.cn/problem/P4302)\n\n> 给一个字符串，求它的最短折叠。\n>\n> 例如 `AAAAAAAAAABABABCCD` 的最短折叠为：`9(A)3(AB)CCD`。\n>\n> `NEERCYESYESYESNEERCYESYESYES` 的是 `2(NEERC3(YES))`\n\n### 状态\n\n$dp_{i,j}$ 表示折叠区间 $[i,j]$ 的最短长度。\n\n### 答案\n\n$$dp_{1,n}$$\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 100 + 5;\nint n, dp[N][N];\nstring s;\nbool check(int x, int y, int z)\n{\n\tfor (int i = x; i <= y; i++)\n\t\tif (s[i] != s[x + ((i - x) % z)])\n\t\t\treturn false;\n\treturn true;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> s;\n\tn = s.size();\n\ts = '#' + s;\n\tmemset(dp, 0x3f, sizeof dp);\n\tfor (int i = 1; i <= n; i++)\n\t\tdp[i][i] = 1;\n\tfor (int len = 2; len <= n; len++)\n\t\tfor (int i = 1; i + len - 1 <= n; i++)\n\t\t{\n\t\t\tint j = i + len - 1;\n\t\t\tdp[i][j] = len;\n\t\t\tfor (int k = i; k < j; k++)\n\t\t\t{\n\t\t\t\tdp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j]);\n\t\t\t\tif (!(len % (k - i + 1)) && check(i, j, k - i + 1))\n\t\t\t\t\tdp[i][j] = min(dp[i][j], dp[i][k] + 2 +\n\t\t\t\t\t\t(int)to_string(len / (k - i + 1)).size());\n\t\t\t}\n\t\t}\n\tcout << dp[1][n];\n\treturn 0;\n}\n```\n\n## 洛谷P2135\n\n[P2135 方块消除](https://www.luogu.com.cn/problem/P2135)\n\n双倍经验：[UVA10559 方块消除 Blocks](https://www.luogu.com.cn/problem/UVA10559)\n\n> Jimmy 最近迷上了一款叫做方块消除的游戏。游戏规则如下：$n$ 个带颜色方格排成一列，相同颜色的方块连成一个区域（如果两个相邻方块颜色相同，则这两个方块属于同一区域）。为简化题目，将连起来的同一颜色方块的数目用一个数表示。\n> \n> 例如，`9 122233331` 表示为\n> \n> ```plain\n4\n1 2 3 1\n1 3 4 1\n> ```\n> \n> 游戏时，你可以任选一个区域消去。设这个区域包含的方块数为 $x$，则将得到 $x^2$ 个分值。方块消去之后，其余的方块就会竖直落到底部或其他方块上。而且当有一列方块被完全消去时，其右边的所有方块就会向左移一格。Jimmy 希望你能找出得最高分的最佳方案，你能帮助他吗？\n\n### 状态\n\n$dp_{i,j,k}$ 表示消去区间 $[i,j]$ 且一起消去了 $i$ 前面和它相同的 $k$ 个的最高可能得分。\n\n### 答案\n\n$$dp_{1,n,0}$$\n\n```cpp\n/*此代码状态设计相反*/\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 50 + 5;\nint n, m, a[N], b[N], dp[N][N][1005], sum[N];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> a[i];\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> b[i];\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = i + 1; j <= n; j++)\n\t\t\tif (a[i] == a[j])\n\t\t\t\tsum[i] += b[j];\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 0; j <= sum[i]; j++)\n\t\t\tdp[i][i][j] = (b[i] + j) * (b[i] + j);\n\tfor (int len = 2; len <= n; len++)\n\t\tfor (int i = 1; i + len - 1 <= n; i++)\n\t\t{\n\t\t\tint j = i + len - 1;\n\t\t\tfor (int k = 0; k <= sum[j]; k++)\n\t\t\t\tdp[i][j][k] = dp[i][j - 1][0] + (b[j] + k) * (b[j] + k);\n\t\t\tfor (int k = i; k <= j - 2; k++)\n\t\t\t\tif (a[j] == a[k])\n\t\t\t\t\tfor (int l = 0; l <= sum[j]; l++)\n\t\t\t\t\t\tdp[i][j][l] = max(dp[i][j][l], dp[i][k][b[j] + l] +\n\t\t\t\t\t\t\tdp[k + 1][j - 1][0]);\n\t\t}\n\tcout << dp[1][n][0];\n\treturn 0;\n}\n```\n\n\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 50 + 5;\nint n, m, a[N], b[N], dp[N][N][1005], sum[N];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> a[i];\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> b[i];\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j < i; j++)\n\t\t\tif (a[i] == a[j])\n\t\t\t\tsum[i] += b[j];\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 0; j <= sum[i]; j++)\n\t\t\tdp[i][i][j] = (b[i] + j) * (b[i] + j);\n\tfor (int len = 2; len <= n; len++)\n\t\tfor (int i = 1; i + len - 1 <= n; i++)\n\t\t{\n\t\t\tint j = i + len - 1;\n\t\t\tfor (int k = 0; k <= sum[i]; k++)\n\t\t\t\tdp[i][j][k] = dp[i + 1][j][0] + (b[i] + k) * (b[i] + k);\n\t\t\tfor (int k = i + 1; k < j; k++)\n\t\t\t\tif (a[i] == a[k + 1])\n\t\t\t\t\tfor (int l = 0; l <= sum[i]; l++)\n\t\t\t\t\t\tdp[i][j][l] = max(dp[i][j][l], dp[i + 1][k][0] +\n\t\t\t\t\t\t\tdp[k + 1][j][b[i] + l]);\n\t\t}\n\tcout << dp[1][n][0];\n\treturn 0;\n}\n```\n\n","source":"_posts/区间dp（二）.md","raw":"---\ntitle: 区间dp（二）\ndate: 2025-01-01 00:00:00\ntags:\n\t- [动态规划]\n\t- [区间dp]\ncategories:\n\t- [编程]\n\t- [算法]\n\t- [动态规划]\n\t- [区间dp]\n---\n\n# 区间dp（二）\n\n## 洛谷P1220\n\n[P1220 关路灯](https://www.luogu.com.cn/problem/P1220)\n\n> 请你为老张编一程序来安排关灯的顺序，使从老张开始关灯时刻算起所有灯消耗电最少（灯关掉后便不再消耗电了）。\n\n老张关路灯像区间dp，可以发现他关路灯时不会关关过的中间加的，不然不优。\n\n### 状态\n\n$dp_{i,j,0/1}$ 表示区间关 $[i,j]$ 最后达到 $i/j$ 的最少功耗。\n\n### 答案\n\n$$\\min(dp_{1,n,0},dp_{1,n,1})$$\n\n<!-- more -->\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 50 + 5;\nint n, m, dp[N][N][2], a[N], b[N], sum[N];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tmemset(dp, 0x3f, sizeof dp);\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> a[i] >> b[i], sum[i] = sum[i - 1] + b[i];\n\tdp[m][m][0] = dp[m][m][1] = 0;\n\tfor (int len = 2; len <= n; len++)\n\t\tfor (int i = 1; i + len - 1 <= n; i++)\n\t\t{\n\t\t\tint j = i + len - 1, tmp = sum[n] - sum[j] + sum[i],\n\t\t\t\ttmp1 = sum[n] - sum[j - 1] + sum[i - 1];\n\t\t\tdp[i][j][0] = min(dp[i + 1][j][0] + (a[i + 1] - a[i]) * tmp,\n\t\t\t\tdp[i + 1][j][1] + (a[j] - a[i]) * tmp);\n\t\t\tdp[i][j][1] = min(dp[i][j - 1][0] + (a[j] - a[i]) * tmp1,\n\t\t\t\tdp[i][j - 1][1] + (a[j] - a[j - 1]) * tmp1);\n\t\t}\n\tcout << min(dp[1][n][0], dp[1][n][1]);\n\treturn 0;\n}\n```\n\n## 洛谷P8675\n\n[P8675 [蓝桥杯 2018 国 B] 搭积木](https://www.luogu.com.cn/problem/P8675)\n\n### 状态\n\n$dp_{l,i,j}$ 表示搭 $l$ 层的区间 $[i,j]$ 的方案数。\n\n### 答案\n\n$$\\displaystyle\\left(\\sum^l_{1\\le l\\le n}\\sum^i_{1\\le i\\le m}\\sum^j_{i\\le j\\le m}dp_{l,i,j}\\right)\\bmod{10^9+7}$$\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 100 + 5;\nint n, m, dp[N][N][N], sum[N][N], vis[N][N], ans, mod = 1e9 + 7;\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = n; i >= 1; i--)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\tvis[i][j] = vis[i][j - 1] + (c == 'X');\n\t\t}\n\tdp[0][1][m] = 1;\n\tfor (int l = 1; l <= n; l++)\n\t{\n\t\tmemset(sum, 0, sizeof sum);\n\t\tfor (int i = 1; i <= m; i++)\n\t\t\tfor (int j = i; j <= m; j++)\n\t\t\t\tsum[i][j] = (sum[i - 1][j] + sum[i][j - 1] - sum[i - 1][j - 1] +\n\t\t\t\t\tdp[l - 1][i][j] + mod) % mod;\n\t\tfor (int len = 1; len <= m; len++)\n\t\t\tfor (int i = 1; i + len - 1 <= m; i++)\n\t\t\t{\n\t\t\t\tint j = i + len - 1;\n\t\t\t\tif (!(vis[l][j] - vis[l][i - 1]))\n\t\t\t\t\tans = (ans + (dp[l][i][j] = (sum[i][m] - sum[i][j - 1] +\n\t\t\t\t\t\tmod) % mod)) % mod;\n\t\t\t}\n\t}\n\tcout << (ans + 1) % mod;\n\treturn 0;\n}\n```\n\n## 洛谷P4302\n\n[P4302 [SCOI2003] 字符串折叠](https://www.luogu.com.cn/problem/P4302)\n\n> 给一个字符串，求它的最短折叠。\n>\n> 例如 `AAAAAAAAAABABABCCD` 的最短折叠为：`9(A)3(AB)CCD`。\n>\n> `NEERCYESYESYESNEERCYESYESYES` 的是 `2(NEERC3(YES))`\n\n### 状态\n\n$dp_{i,j}$ 表示折叠区间 $[i,j]$ 的最短长度。\n\n### 答案\n\n$$dp_{1,n}$$\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 100 + 5;\nint n, dp[N][N];\nstring s;\nbool check(int x, int y, int z)\n{\n\tfor (int i = x; i <= y; i++)\n\t\tif (s[i] != s[x + ((i - x) % z)])\n\t\t\treturn false;\n\treturn true;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> s;\n\tn = s.size();\n\ts = '#' + s;\n\tmemset(dp, 0x3f, sizeof dp);\n\tfor (int i = 1; i <= n; i++)\n\t\tdp[i][i] = 1;\n\tfor (int len = 2; len <= n; len++)\n\t\tfor (int i = 1; i + len - 1 <= n; i++)\n\t\t{\n\t\t\tint j = i + len - 1;\n\t\t\tdp[i][j] = len;\n\t\t\tfor (int k = i; k < j; k++)\n\t\t\t{\n\t\t\t\tdp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j]);\n\t\t\t\tif (!(len % (k - i + 1)) && check(i, j, k - i + 1))\n\t\t\t\t\tdp[i][j] = min(dp[i][j], dp[i][k] + 2 +\n\t\t\t\t\t\t(int)to_string(len / (k - i + 1)).size());\n\t\t\t}\n\t\t}\n\tcout << dp[1][n];\n\treturn 0;\n}\n```\n\n## 洛谷P2135\n\n[P2135 方块消除](https://www.luogu.com.cn/problem/P2135)\n\n双倍经验：[UVA10559 方块消除 Blocks](https://www.luogu.com.cn/problem/UVA10559)\n\n> Jimmy 最近迷上了一款叫做方块消除的游戏。游戏规则如下：$n$ 个带颜色方格排成一列，相同颜色的方块连成一个区域（如果两个相邻方块颜色相同，则这两个方块属于同一区域）。为简化题目，将连起来的同一颜色方块的数目用一个数表示。\n> \n> 例如，`9 122233331` 表示为\n> \n> ```plain\n4\n1 2 3 1\n1 3 4 1\n> ```\n> \n> 游戏时，你可以任选一个区域消去。设这个区域包含的方块数为 $x$，则将得到 $x^2$ 个分值。方块消去之后，其余的方块就会竖直落到底部或其他方块上。而且当有一列方块被完全消去时，其右边的所有方块就会向左移一格。Jimmy 希望你能找出得最高分的最佳方案，你能帮助他吗？\n\n### 状态\n\n$dp_{i,j,k}$ 表示消去区间 $[i,j]$ 且一起消去了 $i$ 前面和它相同的 $k$ 个的最高可能得分。\n\n### 答案\n\n$$dp_{1,n,0}$$\n\n```cpp\n/*此代码状态设计相反*/\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 50 + 5;\nint n, m, a[N], b[N], dp[N][N][1005], sum[N];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> a[i];\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> b[i];\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = i + 1; j <= n; j++)\n\t\t\tif (a[i] == a[j])\n\t\t\t\tsum[i] += b[j];\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 0; j <= sum[i]; j++)\n\t\t\tdp[i][i][j] = (b[i] + j) * (b[i] + j);\n\tfor (int len = 2; len <= n; len++)\n\t\tfor (int i = 1; i + len - 1 <= n; i++)\n\t\t{\n\t\t\tint j = i + len - 1;\n\t\t\tfor (int k = 0; k <= sum[j]; k++)\n\t\t\t\tdp[i][j][k] = dp[i][j - 1][0] + (b[j] + k) * (b[j] + k);\n\t\t\tfor (int k = i; k <= j - 2; k++)\n\t\t\t\tif (a[j] == a[k])\n\t\t\t\t\tfor (int l = 0; l <= sum[j]; l++)\n\t\t\t\t\t\tdp[i][j][l] = max(dp[i][j][l], dp[i][k][b[j] + l] +\n\t\t\t\t\t\t\tdp[k + 1][j - 1][0]);\n\t\t}\n\tcout << dp[1][n][0];\n\treturn 0;\n}\n```\n\n\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 50 + 5;\nint n, m, a[N], b[N], dp[N][N][1005], sum[N];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> a[i];\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> b[i];\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j < i; j++)\n\t\t\tif (a[i] == a[j])\n\t\t\t\tsum[i] += b[j];\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 0; j <= sum[i]; j++)\n\t\t\tdp[i][i][j] = (b[i] + j) * (b[i] + j);\n\tfor (int len = 2; len <= n; len++)\n\t\tfor (int i = 1; i + len - 1 <= n; i++)\n\t\t{\n\t\t\tint j = i + len - 1;\n\t\t\tfor (int k = 0; k <= sum[i]; k++)\n\t\t\t\tdp[i][j][k] = dp[i + 1][j][0] + (b[i] + k) * (b[i] + k);\n\t\t\tfor (int k = i + 1; k < j; k++)\n\t\t\t\tif (a[i] == a[k + 1])\n\t\t\t\t\tfor (int l = 0; l <= sum[i]; l++)\n\t\t\t\t\t\tdp[i][j][l] = max(dp[i][j][l], dp[i + 1][k][0] +\n\t\t\t\t\t\t\tdp[k + 1][j][b[i] + l]);\n\t\t}\n\tcout << dp[1][n][0];\n\treturn 0;\n}\n```\n\n","slug":"区间dp（二）","published":1,"updated":"2025-09-18T07:47:07.989Z","comments":1,"layout":"post","photos":[],"_id":"cmfp5q6aj000d3kv3e1w912cx","content":"<h1 id=\"区间dp二\"><a class=\"markdownIt-Anchor\" href=\"#区间dp二\"></a> 区间dp（二）</h1>\n<h2 id=\"洛谷p1220\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1220\"></a> 洛谷P1220</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P1220\">P1220 关路灯</a></p>\n<blockquote>\n<p>请你为老张编一程序来安排关灯的顺序，使从老张开始关灯时刻算起所有灯消耗电最少（灯关掉后便不再消耗电了）。</p>\n</blockquote>\n<p>老张关路灯像区间dp，可以发现他关路灯时不会关关过的中间加的，不然不优。</p>\n<h3 id=\"状态\"><a class=\"markdownIt-Anchor\" href=\"#状态\"></a> 状态</h3>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,0/1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 表示区间关 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 最后达到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mi mathvariant=\"normal\">/</mi><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">i/j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的最少功耗。</p>\n<h3 id=\"答案\"><a class=\"markdownIt-Anchor\" href=\"#答案\"></a> 答案</h3>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>min</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo separator=\"true\">,</mo><mn>0</mn></mrow></msub><mo separator=\"true\">,</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo separator=\"true\">,</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\min(dp_{1,n,0},dp_{1,n,1})\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mop\">min</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<span id=\"more\"></span>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">50</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dp[N][N][<span class=\"number\">2</span>], a[N], b[N], sum[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dp);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i] &gt;&gt; b[i], sum[i] = sum[i - <span class=\"number\">1</span>] + b[i];</span><br><span class=\"line\">\tdp[m][m][<span class=\"number\">0</span>] = dp[m][m][<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n; len++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>, tmp = sum[n] - sum[j] + sum[i],</span><br><span class=\"line\">\t\t\t\ttmp1 = sum[n] - sum[j - <span class=\"number\">1</span>] + sum[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\tdp[i][j][<span class=\"number\">0</span>] = <span class=\"built_in\">min</span>(dp[i + <span class=\"number\">1</span>][j][<span class=\"number\">0</span>] + (a[i + <span class=\"number\">1</span>] - a[i]) * tmp,</span><br><span class=\"line\">\t\t\t\tdp[i + <span class=\"number\">1</span>][j][<span class=\"number\">1</span>] + (a[j] - a[i]) * tmp);</span><br><span class=\"line\">\t\t\tdp[i][j][<span class=\"number\">1</span>] = <span class=\"built_in\">min</span>(dp[i][j - <span class=\"number\">1</span>][<span class=\"number\">0</span>] + (a[j] - a[i]) * tmp1,</span><br><span class=\"line\">\t\t\t\tdp[i][j - <span class=\"number\">1</span>][<span class=\"number\">1</span>] + (a[j] - a[j - <span class=\"number\">1</span>]) * tmp1);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">min</span>(dp[<span class=\"number\">1</span>][n][<span class=\"number\">0</span>], dp[<span class=\"number\">1</span>][n][<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p8675\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p8675\"></a> 洛谷P8675</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P8675\">P8675 [蓝桥杯 2018 国 B] 搭积木</a></p>\n<h3 id=\"状态-2\"><a class=\"markdownIt-Anchor\" href=\"#状态-2\"></a> 状态</h3>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>l</mi><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{l,i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示搭 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> 层的区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的方案数。</p>\n<h3 id=\"答案-2\"><a class=\"markdownIt-Anchor\" href=\"#答案-2\"></a> 答案</h3>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mo fence=\"true\">(</mo><munderover><mo>∑</mo><mrow><mn>1</mn><mo>≤</mo><mi>l</mi><mo>≤</mo><mi>n</mi></mrow><mi>l</mi></munderover><munderover><mo>∑</mo><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>m</mi></mrow><mi>i</mi></munderover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>≤</mo><mi>j</mi><mo>≤</mo><mi>m</mi></mrow><mi>j</mi></munderover><mi>d</mi><msub><mi>p</mi><mrow><mi>l</mi><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo fence=\"true\">)</mo></mrow><mtext> </mtext><mo lspace=\"0.22em\" rspace=\"0.22em\"><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow></mo><mtext> </mtext><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo>+</mo><mn>7</mn></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle\\left(\\sum^l_{1\\le l\\le n}\\sum^i_{1\\le i\\le m}\\sum^j_{i\\le j\\le m}dp_{l,i,j}\\right)\\bmod{10^9+7}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.2725540000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.836113em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.397292em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8116690000000002em;\"><span style=\"top:-1.8723309999999997em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.372848em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8587770000000006em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.347113em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.05555555555555555em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\"><span class=\"mord\"><span class=\"mord mathrm\">m</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">d</span></span></span><span class=\"mspace\" style=\"margin-right:0.05555555555555555em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9474379999999999em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">9</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">7</span></span></span></span></span></span></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dp[N][N][N], sum[N][N], vis[N][N], ans, mod = <span class=\"number\">1e9</span> + <span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = n; i &gt;= <span class=\"number\">1</span>; i--)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">char</span> c;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; c;</span><br><span class=\"line\">\t\t\tvis[i][j] = vis[i][j - <span class=\"number\">1</span>] + (c == <span class=\"string\">&#x27;X&#x27;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>][<span class=\"number\">1</span>][m] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> l = <span class=\"number\">1</span>; l &lt;= n; l++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(sum, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span> sum);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j &lt;= m; j++)</span><br><span class=\"line\">\t\t\t\tsum[i][j] = (sum[i - <span class=\"number\">1</span>][j] + sum[i][j - <span class=\"number\">1</span>] - sum[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>] +</span><br><span class=\"line\">\t\t\t\t\tdp[l - <span class=\"number\">1</span>][i][j] + mod) % mod;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">1</span>; len &lt;= m; len++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= m; i++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (!(vis[l][j] - vis[l][i - <span class=\"number\">1</span>]))</span><br><span class=\"line\">\t\t\t\t\tans = (ans + (dp[l][i][j] = (sum[i][m] - sum[i][j - <span class=\"number\">1</span>] +</span><br><span class=\"line\">\t\t\t\t\t\tmod) % mod)) % mod;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; (ans + <span class=\"number\">1</span>) % mod;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p4302\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p4302\"></a> 洛谷P4302</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P4302\">P4302 [SCOI2003] 字符串折叠</a></p>\n<blockquote>\n<p>给一个字符串，求它的最短折叠。</p>\n<p>例如 <code>AAAAAAAAAABABABCCD</code> 的最短折叠为：<code>9(A)3(AB)CCD</code>。</p>\n<p><code>NEERCYESYESYESNEERCYESYESYES</code> 的是 <code>2(NEERC3(YES))</code></p>\n</blockquote>\n<h3 id=\"状态-3\"><a class=\"markdownIt-Anchor\" href=\"#状态-3\"></a> 状态</h3>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示折叠区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的最短长度。</p>\n<h3 id=\"答案-3\"><a class=\"markdownIt-Anchor\" href=\"#答案-3\"></a> 答案</h3>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{1,n}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, dp[N][N];</span><br><span class=\"line\">string s;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">int</span> z)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = x; i &lt;= y; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (s[i] != s[x + ((i - x) % z)])</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; s;</span><br><span class=\"line\">\tn = s.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">\ts = <span class=\"string\">&#x27;#&#x27;</span> + s;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dp);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tdp[i][i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n; len++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tdp[i][j] = len;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tdp[i][j] = <span class=\"built_in\">min</span>(dp[i][j], dp[i][k] + dp[k + <span class=\"number\">1</span>][j]);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (!(len % (k - i + <span class=\"number\">1</span>)) &amp;&amp; <span class=\"built_in\">check</span>(i, j, k - i + <span class=\"number\">1</span>))</span><br><span class=\"line\">\t\t\t\t\tdp[i][j] = <span class=\"built_in\">min</span>(dp[i][j], dp[i][k] + <span class=\"number\">2</span> +</span><br><span class=\"line\">\t\t\t\t\t\t(<span class=\"type\">int</span>)<span class=\"built_in\">to_string</span>(len / (k - i + <span class=\"number\">1</span>)).<span class=\"built_in\">size</span>());</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; dp[<span class=\"number\">1</span>][n];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p2135\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p2135\"></a> 洛谷P2135</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P2135\">P2135 方块消除</a></p>\n<p>双倍经验：<a href=\"https://www.luogu.com.cn/problem/UVA10559\">UVA10559 方块消除 Blocks</a></p>\n<blockquote>\n<p>Jimmy 最近迷上了一款叫做方块消除的游戏。游戏规则如下：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个带颜色方格排成一列，相同颜色的方块连成一个区域（如果两个相邻方块颜色相同，则这两个方块属于同一区域）。为简化题目，将连起来的同一颜色方块的数目用一个数表示。</p>\n<p>例如，<code>9 122233331</code> 表示为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br><span class=\"line\">1 2 3 1</span><br><span class=\"line\">1 3 4 1</span><br></pre></td></tr></table></figure>\n<p>游戏时，你可以任选一个区域消去。设这个区域包含的方块数为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>，则将得到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">x^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> 个分值。方块消去之后，其余的方块就会竖直落到底部或其他方块上。而且当有一列方块被完全消去时，其右边的所有方块就会向左移一格。Jimmy 希望你能找出得最高分的最佳方案，你能帮助他吗？</p>\n</blockquote>\n<h3 id=\"状态-4\"><a class=\"markdownIt-Anchor\" href=\"#状态-4\"></a> 状态</h3>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示消去区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 且一起消去了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 前面和它相同的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 个的最高可能得分。</p>\n<h3 id=\"答案-4\"><a class=\"markdownIt-Anchor\" href=\"#答案-4\"></a> 答案</h3>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo separator=\"true\">,</mo><mn>0</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{1,n,0}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*此代码状态设计相反*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">50</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, a[N], b[N], dp[N][N][<span class=\"number\">1005</span>], sum[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; b[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">1</span>; j &lt;= n; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[i] == a[j])</span><br><span class=\"line\">\t\t\t\tsum[i] += b[j];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= sum[i]; j++)</span><br><span class=\"line\">\t\t\tdp[i][i][j] = (b[i] + j) * (b[i] + j);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n; len++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt;= sum[j]; k++)</span><br><span class=\"line\">\t\t\t\tdp[i][j][k] = dp[i][j - <span class=\"number\">1</span>][<span class=\"number\">0</span>] + (b[j] + k) * (b[j] + k);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt;= j - <span class=\"number\">2</span>; k++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (a[j] == a[k])</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> l = <span class=\"number\">0</span>; l &lt;= sum[j]; l++)</span><br><span class=\"line\">\t\t\t\t\t\tdp[i][j][l] = <span class=\"built_in\">max</span>(dp[i][j][l], dp[i][k][b[j] + l] +</span><br><span class=\"line\">\t\t\t\t\t\t\tdp[k + <span class=\"number\">1</span>][j - <span class=\"number\">1</span>][<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; dp[<span class=\"number\">1</span>][n][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">50</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, a[N], b[N], dp[N][N][<span class=\"number\">1005</span>], sum[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; b[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt; i; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[i] == a[j])</span><br><span class=\"line\">\t\t\t\tsum[i] += b[j];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= sum[i]; j++)</span><br><span class=\"line\">\t\t\tdp[i][i][j] = (b[i] + j) * (b[i] + j);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n; len++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt;= sum[i]; k++)</span><br><span class=\"line\">\t\t\t\tdp[i][j][k] = dp[i + <span class=\"number\">1</span>][j][<span class=\"number\">0</span>] + (b[i] + k) * (b[i] + k);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i + <span class=\"number\">1</span>; k &lt; j; k++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (a[i] == a[k + <span class=\"number\">1</span>])</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> l = <span class=\"number\">0</span>; l &lt;= sum[i]; l++)</span><br><span class=\"line\">\t\t\t\t\t\tdp[i][j][l] = <span class=\"built_in\">max</span>(dp[i][j][l], dp[i + <span class=\"number\">1</span>][k][<span class=\"number\">0</span>] +</span><br><span class=\"line\">\t\t\t\t\t\t\tdp[k + <span class=\"number\">1</span>][j][b[i] + l]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; dp[<span class=\"number\">1</span>][n][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"<h1 id=\"区间dp二\"><a class=\"markdownIt-Anchor\" href=\"#区间dp二\"></a> 区间dp（二）</h1>\n<h2 id=\"洛谷p1220\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1220\"></a> 洛谷P1220</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P1220\">P1220 关路灯</a></p>\n<blockquote>\n<p>请你为老张编一程序来安排关灯的顺序，使从老张开始关灯时刻算起所有灯消耗电最少（灯关掉后便不再消耗电了）。</p>\n</blockquote>\n<p>老张关路灯像区间dp，可以发现他关路灯时不会关关过的中间加的，不然不优。</p>\n<h3 id=\"状态\"><a class=\"markdownIt-Anchor\" href=\"#状态\"></a> 状态</h3>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,0/1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 表示区间关 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 最后达到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mi mathvariant=\"normal\">/</mi><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">i/j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的最少功耗。</p>\n<h3 id=\"答案\"><a class=\"markdownIt-Anchor\" href=\"#答案\"></a> 答案</h3>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>min</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo separator=\"true\">,</mo><mn>0</mn></mrow></msub><mo separator=\"true\">,</mo><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo separator=\"true\">,</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\min(dp_{1,n,0},dp_{1,n,1})\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mop\">min</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>","more":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">50</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dp[N][N][<span class=\"number\">2</span>], a[N], b[N], sum[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dp);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i] &gt;&gt; b[i], sum[i] = sum[i - <span class=\"number\">1</span>] + b[i];</span><br><span class=\"line\">\tdp[m][m][<span class=\"number\">0</span>] = dp[m][m][<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n; len++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>, tmp = sum[n] - sum[j] + sum[i],</span><br><span class=\"line\">\t\t\t\ttmp1 = sum[n] - sum[j - <span class=\"number\">1</span>] + sum[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\tdp[i][j][<span class=\"number\">0</span>] = <span class=\"built_in\">min</span>(dp[i + <span class=\"number\">1</span>][j][<span class=\"number\">0</span>] + (a[i + <span class=\"number\">1</span>] - a[i]) * tmp,</span><br><span class=\"line\">\t\t\t\tdp[i + <span class=\"number\">1</span>][j][<span class=\"number\">1</span>] + (a[j] - a[i]) * tmp);</span><br><span class=\"line\">\t\t\tdp[i][j][<span class=\"number\">1</span>] = <span class=\"built_in\">min</span>(dp[i][j - <span class=\"number\">1</span>][<span class=\"number\">0</span>] + (a[j] - a[i]) * tmp1,</span><br><span class=\"line\">\t\t\t\tdp[i][j - <span class=\"number\">1</span>][<span class=\"number\">1</span>] + (a[j] - a[j - <span class=\"number\">1</span>]) * tmp1);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">min</span>(dp[<span class=\"number\">1</span>][n][<span class=\"number\">0</span>], dp[<span class=\"number\">1</span>][n][<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p8675\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p8675\"></a> 洛谷P8675</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P8675\">P8675 [蓝桥杯 2018 国 B] 搭积木</a></p>\n<h3 id=\"状态-2\"><a class=\"markdownIt-Anchor\" href=\"#状态-2\"></a> 状态</h3>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>l</mi><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{l,i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示搭 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> 层的区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的方案数。</p>\n<h3 id=\"答案-2\"><a class=\"markdownIt-Anchor\" href=\"#答案-2\"></a> 答案</h3>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mo fence=\"true\">(</mo><munderover><mo>∑</mo><mrow><mn>1</mn><mo>≤</mo><mi>l</mi><mo>≤</mo><mi>n</mi></mrow><mi>l</mi></munderover><munderover><mo>∑</mo><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>m</mi></mrow><mi>i</mi></munderover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>≤</mo><mi>j</mi><mo>≤</mo><mi>m</mi></mrow><mi>j</mi></munderover><mi>d</mi><msub><mi>p</mi><mrow><mi>l</mi><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo fence=\"true\">)</mo></mrow><mtext> </mtext><mo lspace=\"0.22em\" rspace=\"0.22em\"><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow></mo><mtext> </mtext><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo>+</mo><mn>7</mn></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle\\left(\\sum^l_{1\\le l\\le n}\\sum^i_{1\\le i\\le m}\\sum^j_{i\\le j\\le m}dp_{l,i,j}\\right)\\bmod{10^9+7}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.2725540000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.836113em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.397292em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8116690000000002em;\"><span style=\"top:-1.8723309999999997em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.372848em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8587770000000006em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.347113em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.05555555555555555em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\"><span class=\"mord\"><span class=\"mord mathrm\">m</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">d</span></span></span><span class=\"mspace\" style=\"margin-right:0.05555555555555555em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9474379999999999em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">9</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">7</span></span></span></span></span></span></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dp[N][N][N], sum[N][N], vis[N][N], ans, mod = <span class=\"number\">1e9</span> + <span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = n; i &gt;= <span class=\"number\">1</span>; i--)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">char</span> c;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; c;</span><br><span class=\"line\">\t\t\tvis[i][j] = vis[i][j - <span class=\"number\">1</span>] + (c == <span class=\"string\">&#x27;X&#x27;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>][<span class=\"number\">1</span>][m] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> l = <span class=\"number\">1</span>; l &lt;= n; l++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(sum, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span> sum);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j &lt;= m; j++)</span><br><span class=\"line\">\t\t\t\tsum[i][j] = (sum[i - <span class=\"number\">1</span>][j] + sum[i][j - <span class=\"number\">1</span>] - sum[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>] +</span><br><span class=\"line\">\t\t\t\t\tdp[l - <span class=\"number\">1</span>][i][j] + mod) % mod;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">1</span>; len &lt;= m; len++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= m; i++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (!(vis[l][j] - vis[l][i - <span class=\"number\">1</span>]))</span><br><span class=\"line\">\t\t\t\t\tans = (ans + (dp[l][i][j] = (sum[i][m] - sum[i][j - <span class=\"number\">1</span>] +</span><br><span class=\"line\">\t\t\t\t\t\tmod) % mod)) % mod;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; (ans + <span class=\"number\">1</span>) % mod;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p4302\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p4302\"></a> 洛谷P4302</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P4302\">P4302 [SCOI2003] 字符串折叠</a></p>\n<blockquote>\n<p>给一个字符串，求它的最短折叠。</p>\n<p>例如 <code>AAAAAAAAAABABABCCD</code> 的最短折叠为：<code>9(A)3(AB)CCD</code>。</p>\n<p><code>NEERCYESYESYESNEERCYESYESYES</code> 的是 <code>2(NEERC3(YES))</code></p>\n</blockquote>\n<h3 id=\"状态-3\"><a class=\"markdownIt-Anchor\" href=\"#状态-3\"></a> 状态</h3>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示折叠区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的最短长度。</p>\n<h3 id=\"答案-3\"><a class=\"markdownIt-Anchor\" href=\"#答案-3\"></a> 答案</h3>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{1,n}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, dp[N][N];</span><br><span class=\"line\">string s;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">int</span> z)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = x; i &lt;= y; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (s[i] != s[x + ((i - x) % z)])</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; s;</span><br><span class=\"line\">\tn = s.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">\ts = <span class=\"string\">&#x27;#&#x27;</span> + s;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dp);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tdp[i][i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n; len++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tdp[i][j] = len;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt; j; k++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tdp[i][j] = <span class=\"built_in\">min</span>(dp[i][j], dp[i][k] + dp[k + <span class=\"number\">1</span>][j]);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (!(len % (k - i + <span class=\"number\">1</span>)) &amp;&amp; <span class=\"built_in\">check</span>(i, j, k - i + <span class=\"number\">1</span>))</span><br><span class=\"line\">\t\t\t\t\tdp[i][j] = <span class=\"built_in\">min</span>(dp[i][j], dp[i][k] + <span class=\"number\">2</span> +</span><br><span class=\"line\">\t\t\t\t\t\t(<span class=\"type\">int</span>)<span class=\"built_in\">to_string</span>(len / (k - i + <span class=\"number\">1</span>)).<span class=\"built_in\">size</span>());</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; dp[<span class=\"number\">1</span>][n];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p2135\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p2135\"></a> 洛谷P2135</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P2135\">P2135 方块消除</a></p>\n<p>双倍经验：<a href=\"https://www.luogu.com.cn/problem/UVA10559\">UVA10559 方块消除 Blocks</a></p>\n<blockquote>\n<p>Jimmy 最近迷上了一款叫做方块消除的游戏。游戏规则如下：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个带颜色方格排成一列，相同颜色的方块连成一个区域（如果两个相邻方块颜色相同，则这两个方块属于同一区域）。为简化题目，将连起来的同一颜色方块的数目用一个数表示。</p>\n<p>例如，<code>9 122233331</code> 表示为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br><span class=\"line\">1 2 3 1</span><br><span class=\"line\">1 3 4 1</span><br></pre></td></tr></table></figure>\n<p>游戏时，你可以任选一个区域消去。设这个区域包含的方块数为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>，则将得到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">x^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> 个分值。方块消去之后，其余的方块就会竖直落到底部或其他方块上。而且当有一列方块被完全消去时，其右边的所有方块就会向左移一格。Jimmy 希望你能找出得最高分的最佳方案，你能帮助他吗？</p>\n</blockquote>\n<h3 id=\"状态-4\"><a class=\"markdownIt-Anchor\" href=\"#状态-4\"></a> 状态</h3>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示消去区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[i,j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 且一起消去了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 前面和它相同的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 个的最高可能得分。</p>\n<h3 id=\"答案-4\"><a class=\"markdownIt-Anchor\" href=\"#答案-4\"></a> 答案</h3>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo separator=\"true\">,</mo><mn>0</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{1,n,0}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*此代码状态设计相反*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">50</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, a[N], b[N], dp[N][N][<span class=\"number\">1005</span>], sum[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; b[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">1</span>; j &lt;= n; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[i] == a[j])</span><br><span class=\"line\">\t\t\t\tsum[i] += b[j];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= sum[i]; j++)</span><br><span class=\"line\">\t\t\tdp[i][i][j] = (b[i] + j) * (b[i] + j);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n; len++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt;= sum[j]; k++)</span><br><span class=\"line\">\t\t\t\tdp[i][j][k] = dp[i][j - <span class=\"number\">1</span>][<span class=\"number\">0</span>] + (b[j] + k) * (b[j] + k);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i; k &lt;= j - <span class=\"number\">2</span>; k++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (a[j] == a[k])</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> l = <span class=\"number\">0</span>; l &lt;= sum[j]; l++)</span><br><span class=\"line\">\t\t\t\t\t\tdp[i][j][l] = <span class=\"built_in\">max</span>(dp[i][j][l], dp[i][k][b[j] + l] +</span><br><span class=\"line\">\t\t\t\t\t\t\tdp[k + <span class=\"number\">1</span>][j - <span class=\"number\">1</span>][<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; dp[<span class=\"number\">1</span>][n][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">50</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, a[N], b[N], dp[N][N][<span class=\"number\">1005</span>], sum[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; b[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt; i; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[i] == a[j])</span><br><span class=\"line\">\t\t\t\tsum[i] += b[j];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= sum[i]; j++)</span><br><span class=\"line\">\t\t\tdp[i][i][j] = (b[i] + j) * (b[i] + j);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> len = <span class=\"number\">2</span>; len &lt;= n; len++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i + len - <span class=\"number\">1</span> &lt;= n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> j = i + len - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt;= sum[i]; k++)</span><br><span class=\"line\">\t\t\t\tdp[i][j][k] = dp[i + <span class=\"number\">1</span>][j][<span class=\"number\">0</span>] + (b[i] + k) * (b[i] + k);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = i + <span class=\"number\">1</span>; k &lt; j; k++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (a[i] == a[k + <span class=\"number\">1</span>])</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> l = <span class=\"number\">0</span>; l &lt;= sum[i]; l++)</span><br><span class=\"line\">\t\t\t\t\t\tdp[i][j][l] = <span class=\"built_in\">max</span>(dp[i][j][l], dp[i + <span class=\"number\">1</span>][k][<span class=\"number\">0</span>] +</span><br><span class=\"line\">\t\t\t\t\t\t\tdp[k + <span class=\"number\">1</span>][j][b[i] + l]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; dp[<span class=\"number\">1</span>][n][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"平衡树","date":"2019-12-31T16:00:00.000Z","_content":"\n# 平衡树\n\n全称是二叉搜索平衡树\n\n二叉搜索树：对于一棵二叉树，每个节点有权值 $val$，任意节点 $x$ 的左子树的权值小于等于 $val_x$，右子树反之。\n\n二叉搜索树的优点：\n\n1. 具有单调性，可以 $log_2$ 的时间查找。\n2. 二叉搜索树的中序遍历是单调不减的，可以将下标当做权值，这样一个序列可以映射到一棵二叉搜索树。\n\n为什么需要平衡树？\n\n- 一个序列对应的二叉搜索树不唯一。我们希望找到高度最小的那颗应用。\n\n若一棵二叉树的任意一个结点 $x$，其左右子树高度差不超过 $1$，称为二叉平衡树。\n\n<!-- more -->\n\n算法竞赛领域常用的平衡树：\n\n1. treap\n2. splay\n3. fhq_treap\n\n其中，treap 和 fhq_treap 利用的是随机平衡，不追求绝对平衡。splay 是贪心策略平衡。treap 和 splay 都是通过旋转改变形态，fhq_treap 通过分裂和合并来改变形态。\n\n## Fhq_treap 实现\n\n1. 分裂操作\n\n\t将一棵平衡树分裂成 $a$ 和 $b$ 两棵子树，且 $val_a\\le val,val_b>val$。$val$ 是选取的某个数。\n\n\t```cpp\n\tstruct node {\n\t\tint val, l, r, size, rnk;\n\t}tree[N];\n\tvoid update(int cur)\n\t{\n\t\ttree[cur].size = tree[tree[cur].l].size + tree[tree[cur].r].size + 1;\n\t\treturn;\n\t}\n\tvoid split(int cur, int& a, int& b, int val)\n\t{\n\t\tif (!cur)\n\t\t{\n\t\t\ta = b = 0;\n\t\t\treturn;\n\t\t}\n\t\tif (tree[cur].val <= val)\n\t\t{\n\t\t\ta = cur;\n\t\t\tsplit(tree[cur].r, tree[cur].r, b, val);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb = cur;\n\t\t\tsplit(tree[cur].l, a, tree[cur].l, val);\n\t\t}\n\t\tupdate(cur);\n\t\treturn;\n\t}\n\t```\n\n2. 合并操作\n\n\t将 $a,b$ 两棵平衡树合并，且 $a$ 平衡树的任意权值一定小于等于 $b$ 平衡树的任意权值。\n\n模板完整代码：\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, root, cnt;\nstruct node {\n\tint val, l, r, size, rnk;\n}tree[N];\nvoid update(int cur)\n{\n\ttree[cur].size = tree[tree[cur].l].size + tree[tree[cur].r].size + 1;\n\treturn;\n}\nint add_node(int val)\n{\n\ttree[++cnt] = { val,0,0,1,rand() };\n\treturn cnt;\n}\nvoid split(int cur, int& a, int& b, int val)\n{\n\tif (!cur)\n\t{\n\t\ta = b = 0;\n\t\treturn;\n\t}\n\tif (tree[cur].val <= val)\n\t{\n\t\ta = cur;\n\t\tsplit(tree[cur].r, tree[cur].r, b, val);\n\t}\n\telse\n\t{\n\t\tb = cur;\n\t\tsplit(tree[cur].l, a, tree[cur].l, val);\n\t}\n\tupdate(cur);\n\treturn;\n}\nvoid merge(int& cur, int a, int b)//合并\n{\n\tif (!a || !b)\n\t{\n\t\tcur = a + b;\n\t\treturn;\n\t}\n\tif (tree[a].rnk <= tree[b].rnk)\n\t{\n\t\tcur = a;\n\t\tmerge(tree[a].r, tree[a].r, b);\n\t}\n\telse\n\t{\n\t\tcur = b;\n\t\tmerge(tree[b].l, a, tree[b].l);\n\t}\n\tupdate(cur);\n\treturn;\n}\nvoid insert(int& cur, int val)//插入\n{\n\tint a = 0, b = 0, c = add_node(val);\n\tsplit(cur, a, b, val);\n\tmerge(a, a, c);\n\tmerge(cur, a, b);\n\treturn;\n}\nvoid del(int& cur, int val)//输出\n{\n\tint a = 0, b = 0, c = 0;\n\tsplit(cur, a, b, val);\n\tsplit(a, a, c, val - 1);\n\tmerge(c, tree[c].l, tree[c].r);\n\tmerge(a, a, c);\n\tmerge(cur, a, b);\n\treturn;\n}\nint find_num(int cur, int x)//寻找第 $x$ 个元素\n{\n\twhile (tree[tree[cur].l].size + 1 != x)\n\t\tif (tree[tree[cur].l].size >= x)\n\t\t\tcur = tree[cur].l;\n\t\telse\n\t\t{\n\t\t\tx -= tree[tree[cur].l].size + 1;\n\t\t\tcur = tree[cur].r;\n\t\t}\n\treturn tree[cur].val;\n}\nint find_rank(int& cur, int val)//寻找 $val$ 的第一个位置\n{\n\tint a = 0, b = 0;\n\tsplit(cur, a, b, val - 1);\n\tint tmp = tree[a].size + 1;\n\tmerge(cur, a, b);\n\treturn tmp;\n}\nint prev(int& cur, int val)//寻找前驱\n{\n\tint a = 0, b = 0;\n\tsplit(cur, a, b, val - 1);\n\tint tmp = find_num(a, tree[a].size);\n\tmerge(cur, a, b);\n\treturn tmp;\n}\nint suf(int& cur, int val)//寻找后继\n{\n\tint a = 0, b = 0;\n\tsplit(cur, a, b, val);\n\tint tmp = find_num(b, 1);\n\tmerge(cur, a, b);\n\treturn tmp;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tsrand(time(0));\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint opt, val;\n\t\tcin >> opt >> val;\n\t\tif (opt == 1)\n\t\t\tinsert(root, val);\n\t\telse if (opt == 2)\n\t\t\tdel(root, val);\n\t\telse if (opt == 3)\n\t\t\tcout << find_rank(root, val) << '\\n';\n\t\telse if (opt == 4)\n\t\t\tcout << find_num(root, val) << '\\n';\n\t\telse if (opt == 5)\n\t\t\tcout << prev(root, val) << '\\n';\n\t\telse\n\t\t\tcout << suf(root, val) << '\\n';\n\t}\n\treturn 0;\n}\n```\n\n### 例题\n\n#### 洛谷P1486\n\n[P1486 郁闷的出纳员](https://www.luogu.com.cn/problem/P1486)\n\nNOI2004 的题。\n\n> 第一行有两个整数 $n$ 和 $\\min$。$n$ 表示下面有多少条命令，$\\min$ 表示工资下界。\n>\n> 接下来的 $n$ 行，每行一个字符 $x$ 和一个整数 $k$，表示一条命令。命令可以是以下四种之一：\n>\n> - `I k`  新建一个工资档案，初始工资为 $k$。如果某员工的初始工资低于工资下界，他将立刻离开公司。\n> - `A k`   把每位员工的工资加上 $k$。\n> - `S k`   把每位员工的工资扣除 $k$。\n> - `F k`    查询第 $k$ 多的工资。\n>\n> 在初始时，可以认为公司里一个员工也没有。\n\n维护一个全局懒标记，懒标记减的时候删除离开的人。\n\n```cpp\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tsrand(time(0));\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tchar c;\n\t\tint x;\n\t\tcin >> c >> x;\n\t\tif (c == 'I')\n\t\t\tif (x >= m)\n\t\t\t\tinsert(root, x - tag);\n\t\t\telse\n\t\t\t\t;\n\t\telse if (c == 'A')\n\t\t\ttag += x;\n\t\telse if (c == 'S')\n\t\t{\n\t\t\ttag -= x;\n\t\t\twhile (root && find_num(root, 1) + tag < m)\n\t\t\t\tdel(root, find_num(root, 1)), sum++;\n\t\t}\n\t\telse\n\t\t\tif (!root || tree[root].size < x)\n\t\t\t\tcout << \"-1\\n\";\n\t\t\telse\n\t\t\t\tcout << find_num(root, tree[root].size - x + 1) + tag << '\\n';\n\t}\n\tcout << sum;\n\treturn 0;\n}\n```\n\n#### 洛谷P2234\n\n[P2234 营业额统计](https://www.luogu.com.cn/problem/P2234)\n\n> 而分析整个公司的从成立到现在营业情况是否稳定，只需要把每一天的最小波动值加起来就可以了。你的任务就是编写一个程序帮助 Tiger 来计算这一个值。\n>\n> 我们定义，一天的最小波动值 = $\\min\\{|\\text{该天以前某一天的营业额}-\\text{该天营业额}|\\}$。\n>\n> 特别地，第一天的最小波动值为第一天的营业额。\n\n和前驱后继减，即可保证最小。\n\n```cpp\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tsrand(time(0));\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint x;\n\t\tcin >> x;\n\t\tinsert(root, x);\n\t\tif (i == 1)\n\t\t\tsum += x;\n\t\telse if (tree[root].size == find_rank(root, x))\n\t\t\tsum += abs(prev(root, x) - x);\n\t\telse if (find_rank(root, x) == 1)\n\t\t\tsum += abs(suf(root, x) - x);\n\t\telse\n\t\t\tsum += min(abs(prev(root, x) - x), abs(suf(root, x) - x));\n\t}\n\tcout << sum;\n\treturn 0;\n}\n```\n\n#### 洛谷P3224\n\n[P3224 永无乡](https://www.luogu.com.cn/problem/P3224)\n\n> 永无乡包含 $n$ 座岛，编号从 $1$ 到 $n$ ，每座岛都有自己的独一无二的重要度，按照重要度可以将这 $n$ 座岛排名，名次用 $1$  到 $n$ 来表示。某些岛之间由巨大的桥连接，通过桥可以从一个岛到达另一个岛。如果从岛 $a$ 出发经过若干座（含 $0$ 座）桥可以 到达岛 $b$ ，则称岛 $a$ 和岛 $b$ 是连通的。\n>\n> 现在有两种操作：\n>\n> `B x y` 表示在岛 $x$ 与岛 $y$ 之间修建一座新桥。\n>\n> `Q x k` 表示询问当前与岛 $x$ 连通的所有岛中第 $k$ 重要的是哪座岛，即所有与岛 $x$ 连通的岛中重要度排名第 $k$ 小的岛是哪座，请你输出那个岛的编号。\n\n使用并查集+平衡树，合并使用启发式合并，即拆小的往大的上 merge。\n\n```cpp\nint find(int x)\n{\n\tif (x == fa[x])\n\t\treturn x;\n\treturn fa[x] = find(fa[x]);\n}\nvoid dfs(int x, int& y)\n{\n\tif (!x)\n\t\treturn;\n\tint a = 0, b = 0, c = x, val = tree[x].val;\n\tint l = tree[x].l, r = tree[x].r;\n\ttree[x].l = tree[x].r = 0;\n\tsplit(y, a, b, val);\n\tmerge(a, a, c);\n\tmerge(y, a, b);\n\tdfs(l, y);\n\tdfs(r, y);\n\treturn;\n}\nvoid unionn(int x, int y)\n{\n\tx = find(x);\n\ty = find(y);\n\tif (x != y)\n\t\tif (tree[root[x]].size <= tree[root[y]].size)\n\t\t{\n\t\t\tfa[x] = y;\n\t\t\tdfs(root[x], root[y]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tswap(x, y);\n\t\t\tfa[x] = y;\n\t\t\tdfs(root[x], root[y]);\n\t\t}\n\treturn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tsrand(time(0));\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> a[i], b[a[i]] = i, fa[i] = i, root[i] = i,\n\t\ttree[i] = { a[i],0,0,1,rand() };\n\tcnt = n;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tunionn(x, y);\n\t}\n\tcin >> q;\n\twhile (q--)\n\t{\n\t\tchar c;\n\t\tint x, y;\n\t\tcin >> c >> x >> y;\n\t\tif (c == 'B')\n\t\t\tunionn(x, y);\n\t\telse\n\t\t\tif (tree[root[find(x)]].size < y)\n\t\t\t\tcout << \"-1\\n\";\n\t\t\telse\n\t\t\t\tcout << b[find_num(root[find(x)], y)] << '\\n';\n\t}\n\treturn 0;\n}\n```\n\n#### 洛谷P6136\n\n[P6136 【模板】普通平衡树（数据加强版）](https://www.luogu.com.cn/problem/P6136)\n\n```cpp\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tsrand(time(0));\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tint x;\n\t\tcin >> x;\n\t\tinsert(root, x);\n\t}\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tint opt, val;\n\t\tcin >> opt >> val;\n\t\tval ^= last;\n\t\tif(opt == 1)\n\t\t\tinsert(root, val);\n\t\telse if(opt == 2)\n\t\t\tdel(root, val);\n\t\telse if(opt == 3)\n\t\t\tans ^= (last = find_rank(root, val));\n\t\telse if(opt == 4)\n\t\t\tans ^= (last = find_num(root, val));\n\t\telse if(opt == 5)\n\t\t\tans ^= (last = prev(root, val));\n\t\telse\n\t\t\tans ^= (last = suf(root, val));\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```\n\n\n\n## 文艺平衡树（fhq_treap 版）\n\n需要区间反转时，为了实现区间翻转，我们使用懒标记（lazy tag），像线段树一样。\n\n- pushdown 函数\n\n\t```cpp\n\tvoid pushdown(int cur)\n\t{\n\t\tif (!tree[cur].tag)\n\t\t\treturn;\n\t\tswap(tree[cur].l, tree[cur].r);\n\t\ttree[tree[cur].l].tag ^= 1;\n\t\ttree[tree[cur].r].tag ^= 1;\n\t\ttree[cur].tag = 0;\n\t\treturn;\n\t}\n\t```\n\n- split 函数\n\n\t```cpp\n\tvoid split(int cur, int& a, int& b, int val)\n\t{\n\t\tif (!cur)\n\t\t{\n\t\t\ta = b = 0;\n\t\t\treturn;\n\t\t}\n\t\tpushdown(cur);\n\t\tif (tree[tree[cur].l].size + 1 <= val)//文艺平衡树是按size分的\n\t\t{\n\t\t\ta = cur;\n\t\t\tsplit(tree[cur].r, tree[cur].r, b, val - tree[tree[cur].l].size - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb = cur;\n\t\t\tsplit(tree[cur].l, a, tree[cur].l, val);\n\t\t}\n\t\tupdate(cur);\n\t\treturn;\n\t}\n\t```\n\n- merge 函数\n\n\t```cpp\n\tvoid merge(int& cur, int a, int b)\n\t{\n\t\tif (!a || !b)\n\t\t{\n\t\t\tcur = a + b;\n\t\t\treturn;\n\t\t}\n\t\tif (tree[a].rnk <= tree[b].rnk)\n\t\t{\n\t\t\tpushdown(a);\n\t\t\tcur = a;\n\t\t\tmerge(tree[a].r, tree[a].r, b);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpushdown(b);\n\t\t\tcur = b;\n\t\t\tmerge(tree[b].l, a, tree[b].l);\n\t\t}\n\t\tupdate(cur);//记得update，forget to update 3 times\n\t\treturn;\n\t}\n\t```\n\n- reverse 函数\n\n\t```cpp\n\tvoid reverse(int& cur, int x, int y)\n\t{\n\t\tint a = 0, b = 0, c = 0;\n\t\tsplit(cur, a, b, y);\n\t\tsplit(a, a, c, x - 1);\n\t\ttree[c].tag ^= 1;\n\t\tmerge(a, a, c);\n\t\tmerge(cur, a, b);\n\t\treturn;\n\t}\n\t```\n- print 函数\n\n\t```cpp\n\tvoid print(int x)\n\t{\n\t\tif (!x)\n\t\t\treturn;\n\t\tpushdown(x);\n\t\tprint(tree[x].l);\n\t\tcout << tree[x].val << ' ';\n\t\tprint(tree[x].r);\n\t\treturn;\n\t}\n\t```\n\n### 例题\n\n#### 洛谷P3391\n\n[P3391 【模板】文艺平衡树 - 洛谷](https://www.luogu.com.cn/problem/P3391)\n\n#### 洛谷P3850\n\n[P3850 书架](https://www.luogu.com.cn/problem/P3850)\n\n> Knuth 先生家里有个精致的书架，书架上有 *N* 本书，如今他想学到更多的知识，于是又买来了 *M* 本不同的新书。现在他要把新买的书依次插入到书架中，他已经把每本书要插入的位置标记好了，并且相应的将它们放好。由于 Knuth 年龄已大，过几天他已经记不清某些位置上放的到底是什么书了，请问你能帮助他吗？\n\n文艺平衡树加一个 `string` 就可以了\n\n```cpp\nstruct node {\n\tint val, l, r, size, rnk, tag;\n\tstring s;\n}tree[N];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tsrand(time(0));\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> s;\n\t\tint a = add_node(i);\n\t\ttree[a].s = s;\n\t\tmerge(root, root, a);\n\t}\n\tcin >> m;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x;\n\t\tcin >> s >> x;\n\t\tint a = 0, b = 0, c = add_node(x);\n\t\ttree[c].s = s;\n\t\tsplit(root, a, b, x);\n\t\tmerge(a, a, c);\n\t\tmerge(root, a, b);\n\t}\n\tcin >> m;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x;\n\t\tcin >> x;\n\t\tint a = 0, b = 0, c = 0;\n\t\tsplit(root, a, b, x + 1);\n\t\tsplit(a, a, c, x);\n\t\tcout << tree[c].s << '\\n';\n\t\tmerge(a, a, c);\n\t\tmerge(root, a, b);\n\t}\n\treturn 0;\n}\n```\n\n","source":"_posts/平衡树.md","raw":"---\ntitle: 平衡树\ndate: 2020-01-01 00:00:00\ntags:\n\t- [平衡树]\ncategories:\n\t- [编程]\n\t- [算法]\n\t- [平衡树]\n\t- [数据结构]\n---\n\n# 平衡树\n\n全称是二叉搜索平衡树\n\n二叉搜索树：对于一棵二叉树，每个节点有权值 $val$，任意节点 $x$ 的左子树的权值小于等于 $val_x$，右子树反之。\n\n二叉搜索树的优点：\n\n1. 具有单调性，可以 $log_2$ 的时间查找。\n2. 二叉搜索树的中序遍历是单调不减的，可以将下标当做权值，这样一个序列可以映射到一棵二叉搜索树。\n\n为什么需要平衡树？\n\n- 一个序列对应的二叉搜索树不唯一。我们希望找到高度最小的那颗应用。\n\n若一棵二叉树的任意一个结点 $x$，其左右子树高度差不超过 $1$，称为二叉平衡树。\n\n<!-- more -->\n\n算法竞赛领域常用的平衡树：\n\n1. treap\n2. splay\n3. fhq_treap\n\n其中，treap 和 fhq_treap 利用的是随机平衡，不追求绝对平衡。splay 是贪心策略平衡。treap 和 splay 都是通过旋转改变形态，fhq_treap 通过分裂和合并来改变形态。\n\n## Fhq_treap 实现\n\n1. 分裂操作\n\n\t将一棵平衡树分裂成 $a$ 和 $b$ 两棵子树，且 $val_a\\le val,val_b>val$。$val$ 是选取的某个数。\n\n\t```cpp\n\tstruct node {\n\t\tint val, l, r, size, rnk;\n\t}tree[N];\n\tvoid update(int cur)\n\t{\n\t\ttree[cur].size = tree[tree[cur].l].size + tree[tree[cur].r].size + 1;\n\t\treturn;\n\t}\n\tvoid split(int cur, int& a, int& b, int val)\n\t{\n\t\tif (!cur)\n\t\t{\n\t\t\ta = b = 0;\n\t\t\treturn;\n\t\t}\n\t\tif (tree[cur].val <= val)\n\t\t{\n\t\t\ta = cur;\n\t\t\tsplit(tree[cur].r, tree[cur].r, b, val);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb = cur;\n\t\t\tsplit(tree[cur].l, a, tree[cur].l, val);\n\t\t}\n\t\tupdate(cur);\n\t\treturn;\n\t}\n\t```\n\n2. 合并操作\n\n\t将 $a,b$ 两棵平衡树合并，且 $a$ 平衡树的任意权值一定小于等于 $b$ 平衡树的任意权值。\n\n模板完整代码：\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, root, cnt;\nstruct node {\n\tint val, l, r, size, rnk;\n}tree[N];\nvoid update(int cur)\n{\n\ttree[cur].size = tree[tree[cur].l].size + tree[tree[cur].r].size + 1;\n\treturn;\n}\nint add_node(int val)\n{\n\ttree[++cnt] = { val,0,0,1,rand() };\n\treturn cnt;\n}\nvoid split(int cur, int& a, int& b, int val)\n{\n\tif (!cur)\n\t{\n\t\ta = b = 0;\n\t\treturn;\n\t}\n\tif (tree[cur].val <= val)\n\t{\n\t\ta = cur;\n\t\tsplit(tree[cur].r, tree[cur].r, b, val);\n\t}\n\telse\n\t{\n\t\tb = cur;\n\t\tsplit(tree[cur].l, a, tree[cur].l, val);\n\t}\n\tupdate(cur);\n\treturn;\n}\nvoid merge(int& cur, int a, int b)//合并\n{\n\tif (!a || !b)\n\t{\n\t\tcur = a + b;\n\t\treturn;\n\t}\n\tif (tree[a].rnk <= tree[b].rnk)\n\t{\n\t\tcur = a;\n\t\tmerge(tree[a].r, tree[a].r, b);\n\t}\n\telse\n\t{\n\t\tcur = b;\n\t\tmerge(tree[b].l, a, tree[b].l);\n\t}\n\tupdate(cur);\n\treturn;\n}\nvoid insert(int& cur, int val)//插入\n{\n\tint a = 0, b = 0, c = add_node(val);\n\tsplit(cur, a, b, val);\n\tmerge(a, a, c);\n\tmerge(cur, a, b);\n\treturn;\n}\nvoid del(int& cur, int val)//输出\n{\n\tint a = 0, b = 0, c = 0;\n\tsplit(cur, a, b, val);\n\tsplit(a, a, c, val - 1);\n\tmerge(c, tree[c].l, tree[c].r);\n\tmerge(a, a, c);\n\tmerge(cur, a, b);\n\treturn;\n}\nint find_num(int cur, int x)//寻找第 $x$ 个元素\n{\n\twhile (tree[tree[cur].l].size + 1 != x)\n\t\tif (tree[tree[cur].l].size >= x)\n\t\t\tcur = tree[cur].l;\n\t\telse\n\t\t{\n\t\t\tx -= tree[tree[cur].l].size + 1;\n\t\t\tcur = tree[cur].r;\n\t\t}\n\treturn tree[cur].val;\n}\nint find_rank(int& cur, int val)//寻找 $val$ 的第一个位置\n{\n\tint a = 0, b = 0;\n\tsplit(cur, a, b, val - 1);\n\tint tmp = tree[a].size + 1;\n\tmerge(cur, a, b);\n\treturn tmp;\n}\nint prev(int& cur, int val)//寻找前驱\n{\n\tint a = 0, b = 0;\n\tsplit(cur, a, b, val - 1);\n\tint tmp = find_num(a, tree[a].size);\n\tmerge(cur, a, b);\n\treturn tmp;\n}\nint suf(int& cur, int val)//寻找后继\n{\n\tint a = 0, b = 0;\n\tsplit(cur, a, b, val);\n\tint tmp = find_num(b, 1);\n\tmerge(cur, a, b);\n\treturn tmp;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tsrand(time(0));\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint opt, val;\n\t\tcin >> opt >> val;\n\t\tif (opt == 1)\n\t\t\tinsert(root, val);\n\t\telse if (opt == 2)\n\t\t\tdel(root, val);\n\t\telse if (opt == 3)\n\t\t\tcout << find_rank(root, val) << '\\n';\n\t\telse if (opt == 4)\n\t\t\tcout << find_num(root, val) << '\\n';\n\t\telse if (opt == 5)\n\t\t\tcout << prev(root, val) << '\\n';\n\t\telse\n\t\t\tcout << suf(root, val) << '\\n';\n\t}\n\treturn 0;\n}\n```\n\n### 例题\n\n#### 洛谷P1486\n\n[P1486 郁闷的出纳员](https://www.luogu.com.cn/problem/P1486)\n\nNOI2004 的题。\n\n> 第一行有两个整数 $n$ 和 $\\min$。$n$ 表示下面有多少条命令，$\\min$ 表示工资下界。\n>\n> 接下来的 $n$ 行，每行一个字符 $x$ 和一个整数 $k$，表示一条命令。命令可以是以下四种之一：\n>\n> - `I k`  新建一个工资档案，初始工资为 $k$。如果某员工的初始工资低于工资下界，他将立刻离开公司。\n> - `A k`   把每位员工的工资加上 $k$。\n> - `S k`   把每位员工的工资扣除 $k$。\n> - `F k`    查询第 $k$ 多的工资。\n>\n> 在初始时，可以认为公司里一个员工也没有。\n\n维护一个全局懒标记，懒标记减的时候删除离开的人。\n\n```cpp\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tsrand(time(0));\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tchar c;\n\t\tint x;\n\t\tcin >> c >> x;\n\t\tif (c == 'I')\n\t\t\tif (x >= m)\n\t\t\t\tinsert(root, x - tag);\n\t\t\telse\n\t\t\t\t;\n\t\telse if (c == 'A')\n\t\t\ttag += x;\n\t\telse if (c == 'S')\n\t\t{\n\t\t\ttag -= x;\n\t\t\twhile (root && find_num(root, 1) + tag < m)\n\t\t\t\tdel(root, find_num(root, 1)), sum++;\n\t\t}\n\t\telse\n\t\t\tif (!root || tree[root].size < x)\n\t\t\t\tcout << \"-1\\n\";\n\t\t\telse\n\t\t\t\tcout << find_num(root, tree[root].size - x + 1) + tag << '\\n';\n\t}\n\tcout << sum;\n\treturn 0;\n}\n```\n\n#### 洛谷P2234\n\n[P2234 营业额统计](https://www.luogu.com.cn/problem/P2234)\n\n> 而分析整个公司的从成立到现在营业情况是否稳定，只需要把每一天的最小波动值加起来就可以了。你的任务就是编写一个程序帮助 Tiger 来计算这一个值。\n>\n> 我们定义，一天的最小波动值 = $\\min\\{|\\text{该天以前某一天的营业额}-\\text{该天营业额}|\\}$。\n>\n> 特别地，第一天的最小波动值为第一天的营业额。\n\n和前驱后继减，即可保证最小。\n\n```cpp\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tsrand(time(0));\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint x;\n\t\tcin >> x;\n\t\tinsert(root, x);\n\t\tif (i == 1)\n\t\t\tsum += x;\n\t\telse if (tree[root].size == find_rank(root, x))\n\t\t\tsum += abs(prev(root, x) - x);\n\t\telse if (find_rank(root, x) == 1)\n\t\t\tsum += abs(suf(root, x) - x);\n\t\telse\n\t\t\tsum += min(abs(prev(root, x) - x), abs(suf(root, x) - x));\n\t}\n\tcout << sum;\n\treturn 0;\n}\n```\n\n#### 洛谷P3224\n\n[P3224 永无乡](https://www.luogu.com.cn/problem/P3224)\n\n> 永无乡包含 $n$ 座岛，编号从 $1$ 到 $n$ ，每座岛都有自己的独一无二的重要度，按照重要度可以将这 $n$ 座岛排名，名次用 $1$  到 $n$ 来表示。某些岛之间由巨大的桥连接，通过桥可以从一个岛到达另一个岛。如果从岛 $a$ 出发经过若干座（含 $0$ 座）桥可以 到达岛 $b$ ，则称岛 $a$ 和岛 $b$ 是连通的。\n>\n> 现在有两种操作：\n>\n> `B x y` 表示在岛 $x$ 与岛 $y$ 之间修建一座新桥。\n>\n> `Q x k` 表示询问当前与岛 $x$ 连通的所有岛中第 $k$ 重要的是哪座岛，即所有与岛 $x$ 连通的岛中重要度排名第 $k$ 小的岛是哪座，请你输出那个岛的编号。\n\n使用并查集+平衡树，合并使用启发式合并，即拆小的往大的上 merge。\n\n```cpp\nint find(int x)\n{\n\tif (x == fa[x])\n\t\treturn x;\n\treturn fa[x] = find(fa[x]);\n}\nvoid dfs(int x, int& y)\n{\n\tif (!x)\n\t\treturn;\n\tint a = 0, b = 0, c = x, val = tree[x].val;\n\tint l = tree[x].l, r = tree[x].r;\n\ttree[x].l = tree[x].r = 0;\n\tsplit(y, a, b, val);\n\tmerge(a, a, c);\n\tmerge(y, a, b);\n\tdfs(l, y);\n\tdfs(r, y);\n\treturn;\n}\nvoid unionn(int x, int y)\n{\n\tx = find(x);\n\ty = find(y);\n\tif (x != y)\n\t\tif (tree[root[x]].size <= tree[root[y]].size)\n\t\t{\n\t\t\tfa[x] = y;\n\t\t\tdfs(root[x], root[y]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tswap(x, y);\n\t\t\tfa[x] = y;\n\t\t\tdfs(root[x], root[y]);\n\t\t}\n\treturn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tsrand(time(0));\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> a[i], b[a[i]] = i, fa[i] = i, root[i] = i,\n\t\ttree[i] = { a[i],0,0,1,rand() };\n\tcnt = n;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tunionn(x, y);\n\t}\n\tcin >> q;\n\twhile (q--)\n\t{\n\t\tchar c;\n\t\tint x, y;\n\t\tcin >> c >> x >> y;\n\t\tif (c == 'B')\n\t\t\tunionn(x, y);\n\t\telse\n\t\t\tif (tree[root[find(x)]].size < y)\n\t\t\t\tcout << \"-1\\n\";\n\t\t\telse\n\t\t\t\tcout << b[find_num(root[find(x)], y)] << '\\n';\n\t}\n\treturn 0;\n}\n```\n\n#### 洛谷P6136\n\n[P6136 【模板】普通平衡树（数据加强版）](https://www.luogu.com.cn/problem/P6136)\n\n```cpp\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tsrand(time(0));\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tint x;\n\t\tcin >> x;\n\t\tinsert(root, x);\n\t}\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tint opt, val;\n\t\tcin >> opt >> val;\n\t\tval ^= last;\n\t\tif(opt == 1)\n\t\t\tinsert(root, val);\n\t\telse if(opt == 2)\n\t\t\tdel(root, val);\n\t\telse if(opt == 3)\n\t\t\tans ^= (last = find_rank(root, val));\n\t\telse if(opt == 4)\n\t\t\tans ^= (last = find_num(root, val));\n\t\telse if(opt == 5)\n\t\t\tans ^= (last = prev(root, val));\n\t\telse\n\t\t\tans ^= (last = suf(root, val));\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```\n\n\n\n## 文艺平衡树（fhq_treap 版）\n\n需要区间反转时，为了实现区间翻转，我们使用懒标记（lazy tag），像线段树一样。\n\n- pushdown 函数\n\n\t```cpp\n\tvoid pushdown(int cur)\n\t{\n\t\tif (!tree[cur].tag)\n\t\t\treturn;\n\t\tswap(tree[cur].l, tree[cur].r);\n\t\ttree[tree[cur].l].tag ^= 1;\n\t\ttree[tree[cur].r].tag ^= 1;\n\t\ttree[cur].tag = 0;\n\t\treturn;\n\t}\n\t```\n\n- split 函数\n\n\t```cpp\n\tvoid split(int cur, int& a, int& b, int val)\n\t{\n\t\tif (!cur)\n\t\t{\n\t\t\ta = b = 0;\n\t\t\treturn;\n\t\t}\n\t\tpushdown(cur);\n\t\tif (tree[tree[cur].l].size + 1 <= val)//文艺平衡树是按size分的\n\t\t{\n\t\t\ta = cur;\n\t\t\tsplit(tree[cur].r, tree[cur].r, b, val - tree[tree[cur].l].size - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb = cur;\n\t\t\tsplit(tree[cur].l, a, tree[cur].l, val);\n\t\t}\n\t\tupdate(cur);\n\t\treturn;\n\t}\n\t```\n\n- merge 函数\n\n\t```cpp\n\tvoid merge(int& cur, int a, int b)\n\t{\n\t\tif (!a || !b)\n\t\t{\n\t\t\tcur = a + b;\n\t\t\treturn;\n\t\t}\n\t\tif (tree[a].rnk <= tree[b].rnk)\n\t\t{\n\t\t\tpushdown(a);\n\t\t\tcur = a;\n\t\t\tmerge(tree[a].r, tree[a].r, b);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpushdown(b);\n\t\t\tcur = b;\n\t\t\tmerge(tree[b].l, a, tree[b].l);\n\t\t}\n\t\tupdate(cur);//记得update，forget to update 3 times\n\t\treturn;\n\t}\n\t```\n\n- reverse 函数\n\n\t```cpp\n\tvoid reverse(int& cur, int x, int y)\n\t{\n\t\tint a = 0, b = 0, c = 0;\n\t\tsplit(cur, a, b, y);\n\t\tsplit(a, a, c, x - 1);\n\t\ttree[c].tag ^= 1;\n\t\tmerge(a, a, c);\n\t\tmerge(cur, a, b);\n\t\treturn;\n\t}\n\t```\n- print 函数\n\n\t```cpp\n\tvoid print(int x)\n\t{\n\t\tif (!x)\n\t\t\treturn;\n\t\tpushdown(x);\n\t\tprint(tree[x].l);\n\t\tcout << tree[x].val << ' ';\n\t\tprint(tree[x].r);\n\t\treturn;\n\t}\n\t```\n\n### 例题\n\n#### 洛谷P3391\n\n[P3391 【模板】文艺平衡树 - 洛谷](https://www.luogu.com.cn/problem/P3391)\n\n#### 洛谷P3850\n\n[P3850 书架](https://www.luogu.com.cn/problem/P3850)\n\n> Knuth 先生家里有个精致的书架，书架上有 *N* 本书，如今他想学到更多的知识，于是又买来了 *M* 本不同的新书。现在他要把新买的书依次插入到书架中，他已经把每本书要插入的位置标记好了，并且相应的将它们放好。由于 Knuth 年龄已大，过几天他已经记不清某些位置上放的到底是什么书了，请问你能帮助他吗？\n\n文艺平衡树加一个 `string` 就可以了\n\n```cpp\nstruct node {\n\tint val, l, r, size, rnk, tag;\n\tstring s;\n}tree[N];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tsrand(time(0));\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> s;\n\t\tint a = add_node(i);\n\t\ttree[a].s = s;\n\t\tmerge(root, root, a);\n\t}\n\tcin >> m;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x;\n\t\tcin >> s >> x;\n\t\tint a = 0, b = 0, c = add_node(x);\n\t\ttree[c].s = s;\n\t\tsplit(root, a, b, x);\n\t\tmerge(a, a, c);\n\t\tmerge(root, a, b);\n\t}\n\tcin >> m;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x;\n\t\tcin >> x;\n\t\tint a = 0, b = 0, c = 0;\n\t\tsplit(root, a, b, x + 1);\n\t\tsplit(a, a, c, x);\n\t\tcout << tree[c].s << '\\n';\n\t\tmerge(a, a, c);\n\t\tmerge(root, a, b);\n\t}\n\treturn 0;\n}\n```\n\n","slug":"平衡树","published":1,"updated":"2025-09-18T07:47:07.989Z","comments":1,"layout":"post","photos":[],"_id":"cmfp5q6al000f3kv3es9xccpl","content":"<h1 id=\"平衡树\"><a class=\"markdownIt-Anchor\" href=\"#平衡树\"></a> 平衡树</h1>\n<p>全称是二叉搜索平衡树</p>\n<p>二叉搜索树：对于一棵二叉树，每个节点有权值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">val</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span>，任意节点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的左子树的权值小于等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mi>a</mi><msub><mi>l</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">val_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，右子树反之。</p>\n<p>二叉搜索树的优点：</p>\n<ol>\n<li>具有单调性，可以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">log_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的时间查找。</li>\n<li>二叉搜索树的中序遍历是单调不减的，可以将下标当做权值，这样一个序列可以映射到一棵二叉搜索树。</li>\n</ol>\n<p>为什么需要平衡树？</p>\n<ul>\n<li>一个序列对应的二叉搜索树不唯一。我们希望找到高度最小的那颗应用。</li>\n</ul>\n<p>若一棵二叉树的任意一个结点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>，其左右子树高度差不超过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>，称为二叉平衡树。</p>\n<span id=\"more\"></span>\n<p>算法竞赛领域常用的平衡树：</p>\n<ol>\n<li>treap</li>\n<li>splay</li>\n<li>fhq_treap</li>\n</ol>\n<p>其中，treap 和 fhq_treap 利用的是随机平衡，不追求绝对平衡。splay 是贪心策略平衡。treap 和 splay 都是通过旋转改变形态，fhq_treap 通过分裂和合并来改变形态。</p>\n<h2 id=\"fhq_treap-实现\"><a class=\"markdownIt-Anchor\" href=\"#fhq_treap-实现\"></a> Fhq_treap 实现</h2>\n<ol>\n<li>\n<p>分裂操作</p>\n<p>将一棵平衡树分裂成 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 两棵子树，且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mi>a</mi><msub><mi>l</mi><mi>a</mi></msub><mo>≤</mo><mi>v</mi><mi>a</mi><mi>l</mi><mo separator=\"true\">,</mo><mi>v</mi><mi>a</mi><msub><mi>l</mi><mi>b</mi></msub><mo>&gt;</mo><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">val_a\\le val,val_b&gt;val</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span>。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">val</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> 是选取的某个数。</p>\n <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">node</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> val, l, r, size, rnk;</span><br><span class=\"line\">&#125;tree[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"type\">int</span> cur)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\ttree[cur].size = tree[tree[cur].l].size + tree[tree[cur].r].size + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">split</span><span class=\"params\">(<span class=\"type\">int</span> cur, <span class=\"type\">int</span>&amp; a, <span class=\"type\">int</span>&amp; b, <span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!cur)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta = b = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (tree[cur].val &lt;= val)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta = cur;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(tree[cur].r, tree[cur].r, b, val);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tb = cur;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(tree[cur].l, a, tree[cur].l, val);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">update</span>(cur);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>合并操作</p>\n<p>将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a,b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 两棵平衡树合并，且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 平衡树的任意权值一定小于等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 平衡树的任意权值。</p>\n</li>\n</ol>\n<p>模板完整代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, root, cnt;</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">node</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> val, l, r, size, rnk;</span><br><span class=\"line\">&#125;tree[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"type\">int</span> cur)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\ttree[cur].size = tree[tree[cur].l].size + tree[tree[cur].r].size + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">add_node</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\ttree[++cnt] = &#123; val,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"built_in\">rand</span>() &#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> cnt;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">split</span><span class=\"params\">(<span class=\"type\">int</span> cur, <span class=\"type\">int</span>&amp; a, <span class=\"type\">int</span>&amp; b, <span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!cur)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta = b = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (tree[cur].val &lt;= val)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta = cur;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(tree[cur].r, tree[cur].r, b, val);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tb = cur;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(tree[cur].l, a, tree[cur].l, val);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">update</span>(cur);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span><span class=\"comment\">//合并</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!a || !b)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcur = a + b;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (tree[a].rnk &lt;= tree[b].rnk)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcur = a;</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(tree[a].r, tree[a].r, b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcur = b;</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(tree[b].l, a, tree[b].l);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">update</span>(cur);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">insert</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> val)</span><span class=\"comment\">//插入</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>, c = <span class=\"built_in\">add_node</span>(val);</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(cur, a, b, val);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(a, a, c);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(cur, a, b);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">del</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> val)</span><span class=\"comment\">//输出</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>, c = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(cur, a, b, val);</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(a, a, c, val - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(c, tree[c].l, tree[c].r);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(a, a, c);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(cur, a, b);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">find_num</span><span class=\"params\">(<span class=\"type\">int</span> cur, <span class=\"type\">int</span> x)</span><span class=\"comment\">//寻找第 $x$ 个元素</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (tree[tree[cur].l].size + <span class=\"number\">1</span> != x)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (tree[tree[cur].l].size &gt;= x)</span><br><span class=\"line\">\t\t\tcur = tree[cur].l;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tx -= tree[tree[cur].l].size + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tcur = tree[cur].r;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tree[cur].val;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">find_rank</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> val)</span><span class=\"comment\">//寻找 $val$ 的第一个位置</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(cur, a, b, val - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"type\">int</span> tmp = tree[a].size + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(cur, a, b);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">prev</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> val)</span><span class=\"comment\">//寻找前驱</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(cur, a, b, val - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"type\">int</span> tmp = <span class=\"built_in\">find_num</span>(a, tree[a].size);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(cur, a, b);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">suf</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> val)</span><span class=\"comment\">//寻找后继</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(cur, a, b, val);</span><br><span class=\"line\">\t<span class=\"type\">int</span> tmp = <span class=\"built_in\">find_num</span>(b, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(cur, a, b);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> opt, val;</span><br><span class=\"line\">\t\tcin &gt;&gt; opt &gt;&gt; val;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (opt == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">insert</span>(root, val);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (opt == <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">del</span>(root, val);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (opt == <span class=\"number\">3</span>)</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"built_in\">find_rank</span>(root, val) &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (opt == <span class=\"number\">4</span>)</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"built_in\">find_num</span>(root, val) &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (opt == <span class=\"number\">5</span>)</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"built_in\">prev</span>(root, val) &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"built_in\">suf</span>(root, val) &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\"></a> 例题</h3>\n<h4 id=\"洛谷p1486\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1486\"></a> 洛谷P1486</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P1486\">P1486 郁闷的出纳员</a></p>\n<p>NOI2004 的题。</p>\n<blockquote>\n<p>第一行有两个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>min</mi><mo>⁡</mo></mrow><annotation encoding=\"application/x-tex\">\\min</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66786em;vertical-align:0em;\"></span><span class=\"mop\">min</span></span></span></span>。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 表示下面有多少条命令，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>min</mi><mo>⁡</mo></mrow><annotation encoding=\"application/x-tex\">\\min</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66786em;vertical-align:0em;\"></span><span class=\"mop\">min</span></span></span></span> 表示工资下界。</p>\n<p>接下来的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 行，每行一个字符 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和一个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>，表示一条命令。命令可以是以下四种之一：</p>\n<ul>\n<li><code>I k</code>  新建一个工资档案，初始工资为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>。如果某员工的初始工资低于工资下界，他将立刻离开公司。</li>\n<li><code>A k</code>   把每位员工的工资加上 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>。</li>\n<li><code>S k</code>   把每位员工的工资扣除 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>。</li>\n<li><code>F k</code>    查询第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 多的工资。</li>\n</ul>\n<p>在初始时，可以认为公司里一个员工也没有。</p>\n</blockquote>\n<p>维护一个全局懒标记，懒标记减的时候删除离开的人。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">char</span> c;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\tcin &gt;&gt; c &gt;&gt; x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;I&#x27;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (x &gt;= m)</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">insert</span>(root, x - tag);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;A&#x27;</span>)</span><br><span class=\"line\">\t\t\ttag += x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;S&#x27;</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ttag -= x;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (root &amp;&amp; <span class=\"built_in\">find_num</span>(root, <span class=\"number\">1</span>) + tag &lt; m)</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">del</span>(root, <span class=\"built_in\">find_num</span>(root, <span class=\"number\">1</span>)), sum++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!root || tree[root].size &lt; x)</span><br><span class=\"line\">\t\t\t\tcout &lt;&lt; <span class=\"string\">&quot;-1\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\tcout &lt;&lt; <span class=\"built_in\">find_num</span>(root, tree[root].size - x + <span class=\"number\">1</span>) + tag &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; sum;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"洛谷p2234\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p2234\"></a> 洛谷P2234</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P2234\">P2234 营业额统计</a></p>\n<blockquote>\n<p>而分析整个公司的从成立到现在营业情况是否稳定，只需要把每一天的最小波动值加起来就可以了。你的任务就是编写一个程序帮助 Tiger 来计算这一个值。</p>\n<p>我们定义，一天的最小波动值 = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>min</mi><mo>⁡</mo><mo stretchy=\"false\">{</mo><mi mathvariant=\"normal\">∣</mi><mtext>该天以前某一天的营业额</mtext><mo>−</mo><mtext>该天营业额</mtext><mi mathvariant=\"normal\">∣</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\min\\{|\\text{该天以前某一天的营业额}-\\text{该天营业额}|\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">min</span><span class=\"mopen\">{</span><span class=\"mord\">∣</span><span class=\"mord text\"><span class=\"mord cjk_fallback\">该天以前某一天的营业额</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">该天营业额</span></span><span class=\"mord\">∣</span><span class=\"mclose\">}</span></span></span></span>。</p>\n<p>特别地，第一天的最小波动值为第一天的营业额。</p>\n</blockquote>\n<p>和前驱后继减，即可保证最小。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\t<span class=\"built_in\">insert</span>(root, x);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (i == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\tsum += x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tree[root].size == <span class=\"built_in\">find_rank</span>(root, x))</span><br><span class=\"line\">\t\t\tsum += <span class=\"built_in\">abs</span>(<span class=\"built_in\">prev</span>(root, x) - x);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">find_rank</span>(root, x) == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\tsum += <span class=\"built_in\">abs</span>(<span class=\"built_in\">suf</span>(root, x) - x);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tsum += <span class=\"built_in\">min</span>(<span class=\"built_in\">abs</span>(<span class=\"built_in\">prev</span>(root, x) - x), <span class=\"built_in\">abs</span>(<span class=\"built_in\">suf</span>(root, x) - x));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; sum;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"洛谷p3224\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3224\"></a> 洛谷P3224</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P3224\">P3224 永无乡</a></p>\n<blockquote>\n<p>永无乡包含 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 座岛，编号从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> ，每座岛都有自己的独一无二的重要度，按照重要度可以将这 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 座岛排名，名次用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>  到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 来表示。某些岛之间由巨大的桥连接，通过桥可以从一个岛到达另一个岛。如果从岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 出发经过若干座（含 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 座）桥可以 到达岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> ，则称岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 和岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 是连通的。</p>\n<p>现在有两种操作：</p>\n<p><code>B x y</code> 表示在岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 与岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 之间修建一座新桥。</p>\n<p><code>Q x k</code> 表示询问当前与岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 连通的所有岛中第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 重要的是哪座岛，即所有与岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 连通的岛中重要度排名第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 小的岛是哪座，请你输出那个岛的编号。</p>\n</blockquote>\n<p>使用并查集+平衡树，合并使用启发式合并，即拆小的往大的上 merge。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x == fa[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> x;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> fa[x] = <span class=\"built_in\">find</span>(fa[x]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span>&amp; y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!x)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>, c = x, val = tree[x].val;</span><br><span class=\"line\">\t<span class=\"type\">int</span> l = tree[x].l, r = tree[x].r;</span><br><span class=\"line\">\ttree[x].l = tree[x].r = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(y, a, b, val);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(a, a, c);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(y, a, b);</span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(l, y);</span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(r, y);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">unionn</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tx = <span class=\"built_in\">find</span>(x);</span><br><span class=\"line\">\ty = <span class=\"built_in\">find</span>(y);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x != y)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (tree[root[x]].size &lt;= tree[root[y]].size)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tfa[x] = y;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">dfs</span>(root[x], root[y]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">swap</span>(x, y);</span><br><span class=\"line\">\t\t\tfa[x] = y;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">dfs</span>(root[x], root[y]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i], b[a[i]] = i, fa[i] = i, root[i] = i,</span><br><span class=\"line\">\t\ttree[i] = &#123; a[i],<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"built_in\">rand</span>() &#125;;</span><br><span class=\"line\">\tcnt = n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\t<span class=\"built_in\">unionn</span>(x, y);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcin &gt;&gt; q;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (q--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">char</span> c;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y;</span><br><span class=\"line\">\t\tcin &gt;&gt; c &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;B&#x27;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">unionn</span>(x, y);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (tree[root[<span class=\"built_in\">find</span>(x)]].size &lt; y)</span><br><span class=\"line\">\t\t\t\tcout &lt;&lt; <span class=\"string\">&quot;-1\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\tcout &lt;&lt; b[<span class=\"built_in\">find_num</span>(root[<span class=\"built_in\">find</span>(x)], y)] &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"洛谷p6136\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p6136\"></a> 洛谷P6136</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P6136\">P6136 【模板】普通平衡树（数据加强版）</a></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\t<span class=\"built_in\">insert</span>(root, x);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> opt, val;</span><br><span class=\"line\">\t\tcin &gt;&gt; opt &gt;&gt; val;</span><br><span class=\"line\">\t\tval ^= last;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(opt == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">insert</span>(root, val);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(opt == <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">del</span>(root, val);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(opt == <span class=\"number\">3</span>)</span><br><span class=\"line\">\t\t\tans ^= (last = <span class=\"built_in\">find_rank</span>(root, val));</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(opt == <span class=\"number\">4</span>)</span><br><span class=\"line\">\t\t\tans ^= (last = <span class=\"built_in\">find_num</span>(root, val));</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(opt == <span class=\"number\">5</span>)</span><br><span class=\"line\">\t\t\tans ^= (last = <span class=\"built_in\">prev</span>(root, val));</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tans ^= (last = <span class=\"built_in\">suf</span>(root, val));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"文艺平衡树fhq_treap-版\"><a class=\"markdownIt-Anchor\" href=\"#文艺平衡树fhq_treap-版\"></a> 文艺平衡树（fhq_treap 版）</h2>\n<p>需要区间反转时，为了实现区间翻转，我们使用懒标记（lazy tag），像线段树一样。</p>\n<ul>\n<li>\n<p>pushdown 函数</p>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">pushdown</span><span class=\"params\">(<span class=\"type\">int</span> cur)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!tree[cur].tag)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">swap</span>(tree[cur].l, tree[cur].r);</span><br><span class=\"line\">\ttree[tree[cur].l].tag ^= <span class=\"number\">1</span>;</span><br><span class=\"line\">\ttree[tree[cur].r].tag ^= <span class=\"number\">1</span>;</span><br><span class=\"line\">\ttree[cur].tag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>split 函数</p>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">split</span><span class=\"params\">(<span class=\"type\">int</span> cur, <span class=\"type\">int</span>&amp; a, <span class=\"type\">int</span>&amp; b, <span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!cur)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta = b = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">pushdown</span>(cur);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (tree[tree[cur].l].size + <span class=\"number\">1</span> &lt;= val)<span class=\"comment\">//文艺平衡树是按size分的</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta = cur;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(tree[cur].r, tree[cur].r, b, val - tree[tree[cur].l].size - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tb = cur;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(tree[cur].l, a, tree[cur].l, val);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">update</span>(cur);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>merge 函数</p>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!a || !b)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcur = a + b;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (tree[a].rnk &lt;= tree[b].rnk)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">pushdown</span>(a);</span><br><span class=\"line\">\t\tcur = a;</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(tree[a].r, tree[a].r, b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">pushdown</span>(b);</span><br><span class=\"line\">\t\tcur = b;</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(tree[b].l, a, tree[b].l);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">update</span>(cur);<span class=\"comment\">//记得update，forget to update 3 times</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>reverse 函数</p>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">reverse</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>, c = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(cur, a, b, y);</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(a, a, c, x - <span class=\"number\">1</span>);</span><br><span class=\"line\">\ttree[c].tag ^= <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(a, a, c);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(cur, a, b);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>print 函数</p>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!x)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">pushdown</span>(x);</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(tree[x].l);</span><br><span class=\"line\">\tcout &lt;&lt; tree[x].val &lt;&lt; <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(tree[x].r);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"例题-2\"><a class=\"markdownIt-Anchor\" href=\"#例题-2\"></a> 例题</h3>\n<h4 id=\"洛谷p3391\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3391\"></a> 洛谷P3391</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P3391\">P3391 【模板】文艺平衡树 - 洛谷</a></p>\n<h4 id=\"洛谷p3850\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3850\"></a> 洛谷P3850</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P3850\">P3850 书架</a></p>\n<blockquote>\n<p>Knuth 先生家里有个精致的书架，书架上有 <em>N</em> 本书，如今他想学到更多的知识，于是又买来了 <em>M</em> 本不同的新书。现在他要把新买的书依次插入到书架中，他已经把每本书要插入的位置标记好了，并且相应的将它们放好。由于 Knuth 年龄已大，过几天他已经记不清某些位置上放的到底是什么书了，请问你能帮助他吗？</p>\n</blockquote>\n<p>文艺平衡树加一个 <code>string</code> 就可以了</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">node</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> val, l, r, size, rnk, tag;</span><br><span class=\"line\">\tstring s;</span><br><span class=\"line\">&#125;tree[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; s;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> a = <span class=\"built_in\">add_node</span>(i);</span><br><span class=\"line\">\t\ttree[a].s = s;</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(root, root, a);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcin &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\tcin &gt;&gt; s &gt;&gt; x;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>, c = <span class=\"built_in\">add_node</span>(x);</span><br><span class=\"line\">\t\ttree[c].s = s;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(root, a, b, x);</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(a, a, c);</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(root, a, b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcin &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>, c = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(root, a, b, x + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(a, a, c, x);</span><br><span class=\"line\">\t\tcout &lt;&lt; tree[c].s &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(a, a, c);</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(root, a, b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"<h1 id=\"平衡树\"><a class=\"markdownIt-Anchor\" href=\"#平衡树\"></a> 平衡树</h1>\n<p>全称是二叉搜索平衡树</p>\n<p>二叉搜索树：对于一棵二叉树，每个节点有权值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">val</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span>，任意节点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的左子树的权值小于等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mi>a</mi><msub><mi>l</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">val_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，右子树反之。</p>\n<p>二叉搜索树的优点：</p>\n<ol>\n<li>具有单调性，可以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">log_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的时间查找。</li>\n<li>二叉搜索树的中序遍历是单调不减的，可以将下标当做权值，这样一个序列可以映射到一棵二叉搜索树。</li>\n</ol>\n<p>为什么需要平衡树？</p>\n<ul>\n<li>一个序列对应的二叉搜索树不唯一。我们希望找到高度最小的那颗应用。</li>\n</ul>\n<p>若一棵二叉树的任意一个结点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>，其左右子树高度差不超过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>，称为二叉平衡树。</p>","more":"<p>算法竞赛领域常用的平衡树：</p>\n<ol>\n<li>treap</li>\n<li>splay</li>\n<li>fhq_treap</li>\n</ol>\n<p>其中，treap 和 fhq_treap 利用的是随机平衡，不追求绝对平衡。splay 是贪心策略平衡。treap 和 splay 都是通过旋转改变形态，fhq_treap 通过分裂和合并来改变形态。</p>\n<h2 id=\"fhq_treap-实现\"><a class=\"markdownIt-Anchor\" href=\"#fhq_treap-实现\"></a> Fhq_treap 实现</h2>\n<ol>\n<li>\n<p>分裂操作</p>\n<p>将一棵平衡树分裂成 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 两棵子树，且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mi>a</mi><msub><mi>l</mi><mi>a</mi></msub><mo>≤</mo><mi>v</mi><mi>a</mi><mi>l</mi><mo separator=\"true\">,</mo><mi>v</mi><mi>a</mi><msub><mi>l</mi><mi>b</mi></msub><mo>&gt;</mo><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">val_a\\le val,val_b&gt;val</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span>。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">val</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> 是选取的某个数。</p>\n <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">node</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> val, l, r, size, rnk;</span><br><span class=\"line\">&#125;tree[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"type\">int</span> cur)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\ttree[cur].size = tree[tree[cur].l].size + tree[tree[cur].r].size + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">split</span><span class=\"params\">(<span class=\"type\">int</span> cur, <span class=\"type\">int</span>&amp; a, <span class=\"type\">int</span>&amp; b, <span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!cur)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta = b = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (tree[cur].val &lt;= val)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta = cur;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(tree[cur].r, tree[cur].r, b, val);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tb = cur;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(tree[cur].l, a, tree[cur].l, val);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">update</span>(cur);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>合并操作</p>\n<p>将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a,b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 两棵平衡树合并，且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 平衡树的任意权值一定小于等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 平衡树的任意权值。</p>\n</li>\n</ol>\n<p>模板完整代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, root, cnt;</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">node</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> val, l, r, size, rnk;</span><br><span class=\"line\">&#125;tree[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"type\">int</span> cur)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\ttree[cur].size = tree[tree[cur].l].size + tree[tree[cur].r].size + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">add_node</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\ttree[++cnt] = &#123; val,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"built_in\">rand</span>() &#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> cnt;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">split</span><span class=\"params\">(<span class=\"type\">int</span> cur, <span class=\"type\">int</span>&amp; a, <span class=\"type\">int</span>&amp; b, <span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!cur)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta = b = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (tree[cur].val &lt;= val)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta = cur;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(tree[cur].r, tree[cur].r, b, val);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tb = cur;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(tree[cur].l, a, tree[cur].l, val);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">update</span>(cur);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span><span class=\"comment\">//合并</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!a || !b)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcur = a + b;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (tree[a].rnk &lt;= tree[b].rnk)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcur = a;</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(tree[a].r, tree[a].r, b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcur = b;</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(tree[b].l, a, tree[b].l);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">update</span>(cur);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">insert</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> val)</span><span class=\"comment\">//插入</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>, c = <span class=\"built_in\">add_node</span>(val);</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(cur, a, b, val);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(a, a, c);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(cur, a, b);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">del</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> val)</span><span class=\"comment\">//输出</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>, c = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(cur, a, b, val);</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(a, a, c, val - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(c, tree[c].l, tree[c].r);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(a, a, c);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(cur, a, b);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">find_num</span><span class=\"params\">(<span class=\"type\">int</span> cur, <span class=\"type\">int</span> x)</span><span class=\"comment\">//寻找第 $x$ 个元素</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (tree[tree[cur].l].size + <span class=\"number\">1</span> != x)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (tree[tree[cur].l].size &gt;= x)</span><br><span class=\"line\">\t\t\tcur = tree[cur].l;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tx -= tree[tree[cur].l].size + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tcur = tree[cur].r;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tree[cur].val;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">find_rank</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> val)</span><span class=\"comment\">//寻找 $val$ 的第一个位置</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(cur, a, b, val - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"type\">int</span> tmp = tree[a].size + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(cur, a, b);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">prev</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> val)</span><span class=\"comment\">//寻找前驱</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(cur, a, b, val - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"type\">int</span> tmp = <span class=\"built_in\">find_num</span>(a, tree[a].size);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(cur, a, b);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">suf</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> val)</span><span class=\"comment\">//寻找后继</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(cur, a, b, val);</span><br><span class=\"line\">\t<span class=\"type\">int</span> tmp = <span class=\"built_in\">find_num</span>(b, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(cur, a, b);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> opt, val;</span><br><span class=\"line\">\t\tcin &gt;&gt; opt &gt;&gt; val;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (opt == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">insert</span>(root, val);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (opt == <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">del</span>(root, val);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (opt == <span class=\"number\">3</span>)</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"built_in\">find_rank</span>(root, val) &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (opt == <span class=\"number\">4</span>)</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"built_in\">find_num</span>(root, val) &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (opt == <span class=\"number\">5</span>)</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"built_in\">prev</span>(root, val) &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"built_in\">suf</span>(root, val) &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\"></a> 例题</h3>\n<h4 id=\"洛谷p1486\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1486\"></a> 洛谷P1486</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P1486\">P1486 郁闷的出纳员</a></p>\n<p>NOI2004 的题。</p>\n<blockquote>\n<p>第一行有两个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>min</mi><mo>⁡</mo></mrow><annotation encoding=\"application/x-tex\">\\min</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66786em;vertical-align:0em;\"></span><span class=\"mop\">min</span></span></span></span>。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 表示下面有多少条命令，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>min</mi><mo>⁡</mo></mrow><annotation encoding=\"application/x-tex\">\\min</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66786em;vertical-align:0em;\"></span><span class=\"mop\">min</span></span></span></span> 表示工资下界。</p>\n<p>接下来的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 行，每行一个字符 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和一个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>，表示一条命令。命令可以是以下四种之一：</p>\n<ul>\n<li><code>I k</code>  新建一个工资档案，初始工资为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>。如果某员工的初始工资低于工资下界，他将立刻离开公司。</li>\n<li><code>A k</code>   把每位员工的工资加上 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>。</li>\n<li><code>S k</code>   把每位员工的工资扣除 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>。</li>\n<li><code>F k</code>    查询第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 多的工资。</li>\n</ul>\n<p>在初始时，可以认为公司里一个员工也没有。</p>\n</blockquote>\n<p>维护一个全局懒标记，懒标记减的时候删除离开的人。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">char</span> c;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\tcin &gt;&gt; c &gt;&gt; x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;I&#x27;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (x &gt;= m)</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">insert</span>(root, x - tag);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;A&#x27;</span>)</span><br><span class=\"line\">\t\t\ttag += x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;S&#x27;</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ttag -= x;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (root &amp;&amp; <span class=\"built_in\">find_num</span>(root, <span class=\"number\">1</span>) + tag &lt; m)</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">del</span>(root, <span class=\"built_in\">find_num</span>(root, <span class=\"number\">1</span>)), sum++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!root || tree[root].size &lt; x)</span><br><span class=\"line\">\t\t\t\tcout &lt;&lt; <span class=\"string\">&quot;-1\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\tcout &lt;&lt; <span class=\"built_in\">find_num</span>(root, tree[root].size - x + <span class=\"number\">1</span>) + tag &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; sum;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"洛谷p2234\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p2234\"></a> 洛谷P2234</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P2234\">P2234 营业额统计</a></p>\n<blockquote>\n<p>而分析整个公司的从成立到现在营业情况是否稳定，只需要把每一天的最小波动值加起来就可以了。你的任务就是编写一个程序帮助 Tiger 来计算这一个值。</p>\n<p>我们定义，一天的最小波动值 = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>min</mi><mo>⁡</mo><mo stretchy=\"false\">{</mo><mi mathvariant=\"normal\">∣</mi><mtext>该天以前某一天的营业额</mtext><mo>−</mo><mtext>该天营业额</mtext><mi mathvariant=\"normal\">∣</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\min\\{|\\text{该天以前某一天的营业额}-\\text{该天营业额}|\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">min</span><span class=\"mopen\">{</span><span class=\"mord\">∣</span><span class=\"mord text\"><span class=\"mord cjk_fallback\">该天以前某一天的营业额</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">该天营业额</span></span><span class=\"mord\">∣</span><span class=\"mclose\">}</span></span></span></span>。</p>\n<p>特别地，第一天的最小波动值为第一天的营业额。</p>\n</blockquote>\n<p>和前驱后继减，即可保证最小。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\t<span class=\"built_in\">insert</span>(root, x);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (i == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\tsum += x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tree[root].size == <span class=\"built_in\">find_rank</span>(root, x))</span><br><span class=\"line\">\t\t\tsum += <span class=\"built_in\">abs</span>(<span class=\"built_in\">prev</span>(root, x) - x);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">find_rank</span>(root, x) == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\tsum += <span class=\"built_in\">abs</span>(<span class=\"built_in\">suf</span>(root, x) - x);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tsum += <span class=\"built_in\">min</span>(<span class=\"built_in\">abs</span>(<span class=\"built_in\">prev</span>(root, x) - x), <span class=\"built_in\">abs</span>(<span class=\"built_in\">suf</span>(root, x) - x));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; sum;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"洛谷p3224\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3224\"></a> 洛谷P3224</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P3224\">P3224 永无乡</a></p>\n<blockquote>\n<p>永无乡包含 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 座岛，编号从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> ，每座岛都有自己的独一无二的重要度，按照重要度可以将这 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 座岛排名，名次用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>  到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 来表示。某些岛之间由巨大的桥连接，通过桥可以从一个岛到达另一个岛。如果从岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 出发经过若干座（含 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 座）桥可以 到达岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> ，则称岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 和岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 是连通的。</p>\n<p>现在有两种操作：</p>\n<p><code>B x y</code> 表示在岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 与岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 之间修建一座新桥。</p>\n<p><code>Q x k</code> 表示询问当前与岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 连通的所有岛中第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 重要的是哪座岛，即所有与岛 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 连通的岛中重要度排名第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 小的岛是哪座，请你输出那个岛的编号。</p>\n</blockquote>\n<p>使用并查集+平衡树，合并使用启发式合并，即拆小的往大的上 merge。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x == fa[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> x;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> fa[x] = <span class=\"built_in\">find</span>(fa[x]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span>&amp; y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!x)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>, c = x, val = tree[x].val;</span><br><span class=\"line\">\t<span class=\"type\">int</span> l = tree[x].l, r = tree[x].r;</span><br><span class=\"line\">\ttree[x].l = tree[x].r = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(y, a, b, val);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(a, a, c);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(y, a, b);</span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(l, y);</span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(r, y);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">unionn</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tx = <span class=\"built_in\">find</span>(x);</span><br><span class=\"line\">\ty = <span class=\"built_in\">find</span>(y);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x != y)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (tree[root[x]].size &lt;= tree[root[y]].size)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tfa[x] = y;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">dfs</span>(root[x], root[y]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">swap</span>(x, y);</span><br><span class=\"line\">\t\t\tfa[x] = y;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">dfs</span>(root[x], root[y]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i], b[a[i]] = i, fa[i] = i, root[i] = i,</span><br><span class=\"line\">\t\ttree[i] = &#123; a[i],<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"built_in\">rand</span>() &#125;;</span><br><span class=\"line\">\tcnt = n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\t<span class=\"built_in\">unionn</span>(x, y);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcin &gt;&gt; q;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (q--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">char</span> c;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y;</span><br><span class=\"line\">\t\tcin &gt;&gt; c &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;B&#x27;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">unionn</span>(x, y);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (tree[root[<span class=\"built_in\">find</span>(x)]].size &lt; y)</span><br><span class=\"line\">\t\t\t\tcout &lt;&lt; <span class=\"string\">&quot;-1\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\tcout &lt;&lt; b[<span class=\"built_in\">find_num</span>(root[<span class=\"built_in\">find</span>(x)], y)] &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"洛谷p6136\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p6136\"></a> 洛谷P6136</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P6136\">P6136 【模板】普通平衡树（数据加强版）</a></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\t<span class=\"built_in\">insert</span>(root, x);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> opt, val;</span><br><span class=\"line\">\t\tcin &gt;&gt; opt &gt;&gt; val;</span><br><span class=\"line\">\t\tval ^= last;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(opt == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">insert</span>(root, val);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(opt == <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">del</span>(root, val);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(opt == <span class=\"number\">3</span>)</span><br><span class=\"line\">\t\t\tans ^= (last = <span class=\"built_in\">find_rank</span>(root, val));</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(opt == <span class=\"number\">4</span>)</span><br><span class=\"line\">\t\t\tans ^= (last = <span class=\"built_in\">find_num</span>(root, val));</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(opt == <span class=\"number\">5</span>)</span><br><span class=\"line\">\t\t\tans ^= (last = <span class=\"built_in\">prev</span>(root, val));</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tans ^= (last = <span class=\"built_in\">suf</span>(root, val));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"文艺平衡树fhq_treap-版\"><a class=\"markdownIt-Anchor\" href=\"#文艺平衡树fhq_treap-版\"></a> 文艺平衡树（fhq_treap 版）</h2>\n<p>需要区间反转时，为了实现区间翻转，我们使用懒标记（lazy tag），像线段树一样。</p>\n<ul>\n<li>\n<p>pushdown 函数</p>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">pushdown</span><span class=\"params\">(<span class=\"type\">int</span> cur)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!tree[cur].tag)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">swap</span>(tree[cur].l, tree[cur].r);</span><br><span class=\"line\">\ttree[tree[cur].l].tag ^= <span class=\"number\">1</span>;</span><br><span class=\"line\">\ttree[tree[cur].r].tag ^= <span class=\"number\">1</span>;</span><br><span class=\"line\">\ttree[cur].tag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>split 函数</p>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">split</span><span class=\"params\">(<span class=\"type\">int</span> cur, <span class=\"type\">int</span>&amp; a, <span class=\"type\">int</span>&amp; b, <span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!cur)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta = b = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">pushdown</span>(cur);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (tree[tree[cur].l].size + <span class=\"number\">1</span> &lt;= val)<span class=\"comment\">//文艺平衡树是按size分的</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta = cur;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(tree[cur].r, tree[cur].r, b, val - tree[tree[cur].l].size - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tb = cur;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(tree[cur].l, a, tree[cur].l, val);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">update</span>(cur);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>merge 函数</p>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!a || !b)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcur = a + b;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (tree[a].rnk &lt;= tree[b].rnk)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">pushdown</span>(a);</span><br><span class=\"line\">\t\tcur = a;</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(tree[a].r, tree[a].r, b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">pushdown</span>(b);</span><br><span class=\"line\">\t\tcur = b;</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(tree[b].l, a, tree[b].l);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">update</span>(cur);<span class=\"comment\">//记得update，forget to update 3 times</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>reverse 函数</p>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">reverse</span><span class=\"params\">(<span class=\"type\">int</span>&amp; cur, <span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>, c = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(cur, a, b, y);</span><br><span class=\"line\">\t<span class=\"built_in\">split</span>(a, a, c, x - <span class=\"number\">1</span>);</span><br><span class=\"line\">\ttree[c].tag ^= <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(a, a, c);</span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(cur, a, b);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>print 函数</p>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!x)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">pushdown</span>(x);</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(tree[x].l);</span><br><span class=\"line\">\tcout &lt;&lt; tree[x].val &lt;&lt; <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(tree[x].r);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"例题-2\"><a class=\"markdownIt-Anchor\" href=\"#例题-2\"></a> 例题</h3>\n<h4 id=\"洛谷p3391\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3391\"></a> 洛谷P3391</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P3391\">P3391 【模板】文艺平衡树 - 洛谷</a></p>\n<h4 id=\"洛谷p3850\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3850\"></a> 洛谷P3850</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P3850\">P3850 书架</a></p>\n<blockquote>\n<p>Knuth 先生家里有个精致的书架，书架上有 <em>N</em> 本书，如今他想学到更多的知识，于是又买来了 <em>M</em> 本不同的新书。现在他要把新买的书依次插入到书架中，他已经把每本书要插入的位置标记好了，并且相应的将它们放好。由于 Knuth 年龄已大，过几天他已经记不清某些位置上放的到底是什么书了，请问你能帮助他吗？</p>\n</blockquote>\n<p>文艺平衡树加一个 <code>string</code> 就可以了</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">node</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> val, l, r, size, rnk, tag;</span><br><span class=\"line\">\tstring s;</span><br><span class=\"line\">&#125;tree[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; s;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> a = <span class=\"built_in\">add_node</span>(i);</span><br><span class=\"line\">\t\ttree[a].s = s;</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(root, root, a);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcin &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\tcin &gt;&gt; s &gt;&gt; x;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>, c = <span class=\"built_in\">add_node</span>(x);</span><br><span class=\"line\">\t\ttree[c].s = s;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(root, a, b, x);</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(a, a, c);</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(root, a, b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcin &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>, c = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(root, a, b, x + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">split</span>(a, a, c, x);</span><br><span class=\"line\">\t\tcout &lt;&lt; tree[c].s &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(a, a, c);</span><br><span class=\"line\">\t\t<span class=\"built_in\">merge</span>(root, a, b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"状压DP","hot":true,"new":true,"date":"2025-05-02T12:11:28.000Z","_content":"\n# 状压DP\n\n> 状压 DP 是动态规划的一种，通过将状态压缩为整数来达到优化转移的目的。\n>\n> ——[OI-WIKI](https://oi.wiki/dp/state/)\n\n<!--more-->\n\n我们看 [P10447 最短 Hamilton 路径](https://www.luogu.com.cn/problem/P10447)：\n\n> 给定一张 $n$ 个点的带权无向图，点从 $0 \\sim n-1$ 标号，求起点 $0$ 到终点 $n-1$ 的最短 Hamilton 路径。 \n>\n> Hamilton 路径的定义是从 $0$ 到 $n-1$ 不重不漏地经过每个点恰好一次。\n\n我们发现状态转移需要获取点有没有转移过，所以定义 $dp _ {0/1,0/1,\\cdots,0/1,i}$ 表示最后到点 $i$，其他点有没有转移的最短 Hamilton 路径长度。\n\n写 $n+1$ 个循环的代码十分长，能不能让转移更简洁？\n\n这个状态前面特别像二进制整数，我们可以用数表示。\n\n$dp _ {i,j}$ 表示点有没有转移是二进制下 $i$，最后达到 $j$ 的最短 Hamilton 路径的长度。\n\n答案为 $dp _ {2^n-1,n-1}$。\n\n优化：枚举 $i$ 时 $i=i+2$ 而不是 $i=i+1$。\n\n时间复杂度 $O(\\frac{2^nn^2}{2})=O(2^{n-1}n^2)$。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 20 + 5;\nint n, dp[1 << 20][N], dis[N][N];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tmemset(dp, 0x3f, sizeof dp);\n\tcin >> n;\n\tfor (int i = 0; i < n; i++)\n\t\tfor (int j = 0; j < n; j++)\n\t\t\tcin >> dis[i][j];\n\tdp[1][0] = 0;\n\tfor (int i = 3; i < (1ll << n); i += 2)\n\t\tfor (int j = 0; j < n; j++)\n\t\t\tif ((i >> j) & 1)\n\t\t\t\tfor (int k = 0; k < n; k++)\n\t\t\t\t\tif (((i >> k) & 1) && j != k)\n\t\t\t\t\t\tdp[i][j] = min(dp[i][j], dp[i ^ (1ll << j)][k] + dis[k][j]);\n\tcout << dp[(1 << n) - 1][n - 1];\n\treturn 0;\n}\n```\n\n## 例题\n\n### 洛谷P1171\n\n[P1171 售货员的难题](https://www.luogu.com.cn/problem/P1171)\n\n和上一题差不多，只是需要回到 $1$ 节点。\n\n可以枚举回去前最后一次到达的点。\n\n```cpp\nfor (int i = 1; i < n; i++)\n\tans = min(ans, dp[(1 << n) - 1][i] + dis[i][0]);\n```\n\n剩下的一样。\n\n### 洛谷P2704\n\n[P2704 [NOI2001] 炮兵阵地](https://www.luogu.com.cn/problem/P2704)\n\n定义 $dp_{i,j,k}$ 表示第 $i$ 行摆放二进制下的 $j$，第 $i-1$ 行摆放二进制下的 $k$ 时最多能摆放的炮兵部队的数量。\n\n答案为 $\\max dp_{i,j,k}$。\n\n但是 $100\\times4^{10}=104,867,600$ 次状态转移，会 TLE。\n\n优化：实际上有用的 $j,k$ 只有最多 $60$ 个，因此可以预处理有用的 $j,k$。\n\n时间复杂度 $O(nk^2+2^{10})$，其中 $k$ 表示有用的 $j$ 的个数。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 100 + 5;\nint n, m, a[N], b[N], c[N], cnt, dp[N][65][65], ans;\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\ta[i] = (a[i] << 1) + (c == 'P');\n\t\t}\n\tfor (int i = 0; i < (1 << m); i++)\n\t\tif (!((i << 1) & i) && !((i << 2) & i))\n\t\t{\n\t\t\tcnt++;\n\t\t\tb[cnt] = i;\n\t\t\tc[cnt] = __builtin_popcount(i);\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= cnt; j++)\n\t\t\tif ((b[j] | a[i]) == a[i])\n\t\t\t\tfor (int k = 1; k <= cnt; k++)\n\t\t\t\t\tif (!(b[j] & b[k]) && (b[k] | a[i - 1]) == a[i - 1])\n\t\t\t\t\t\tfor (int l = 1; l <= cnt; l++)\n\t\t\t\t\t\t\tif (!(b[j] & b[l]))\n\t\t\t\t\t\t\t\tans = max(ans, dp[i][j][k] = max(dp[i][j][k],\n\t\t\t\t\t\t\t\t\tdp[i - 1][k][l] + c[j]));\n\tcout << ans;\n\treturn 0;\n}\n```\n\n### 洛谷P1896\n\n[P1896 [SCOI2005] 互不侵犯](https://www.luogu.com.cn/problem/P1896)\n\n定义 $dp_{i,j,k}$ 表示第 $i$ 行摆放二进制下的 $j$，一共摆放了 $k$ 个的方案数。\n\n答案为 $\\sum dp_{i,j,K}$。\n\n时间复杂度 $O(2^NNK)$。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 100 + 5;\nint n, m, dp[N][1 << 9][N], ans;\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tdp[0][0][0] = 1;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 0; j < (1 << n); j++)\n\t\t\tif (!((j << 1) & j))\n\t\t\t{\n\t\t\t\tint tmp = __builtin_popcount(j);\n\t\t\t\tfor (int k = 0; k < (1 << n); k++)\n\t\t\t\t\tif (!((j << 1) & k) && !(j & k) && !((k << 1) & j))\n\t\t\t\t\t\tfor (int l = tmp + __builtin_popcount(k); l <= m; l++)\n\t\t\t\t\t\t\tdp[i][j][l] = dp[i][j][l] + dp[i - 1][k][l - tmp];\n\t\t\t\tif (tmp)\n\t\t\t\t\tans += dp[i][j][m];\n\t\t\t}\n\tcout << ans;\n\treturn 0;\n}\n```\n\n### 洛谷P8756\n\n[P8756 [蓝桥杯 2021 省 AB2] 国际象棋](https://www.luogu.com.cn/problem/P8756)\n\n定义 $dp_{i,j,k,l}$ 表示第 $i$ 列摆放二进制下的 $j$，第 $i-1$ 列摆放二进制下的 $k$，一共摆放了 $l$ 个的方案数。\n\n答案为 $\\sum dp_{i,j,k,K}$。\n\n时间复杂度 $O(2^NMK)$。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 100 + 5, mod = 1e9 + 7;\nint n, m, k, dp[N][1 << 6][1 << 6][25], ans;\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m >> k;\n\tdp[0][0][0][0] = 1;\n\tfor (int i = 1; i <= m; i++)\n\t\tfor (int j = 0; j < (1 << n); j++)\n\t\t{\n\t\t\tint tmp = __builtin_popcount(j);\n\t\t\tfor (int k = 0; k < (1 << n); k++)\n\t\t\t\tif (!((k << 2) & j) && !((j << 2) & k) && (i > 1 ? true : !k))\n\t\t\t\t{\n\t\t\t\t\tint tmp1 = __builtin_popcount(k);\n\t\t\t\t\tfor (int l = 0; l < (1 << n); l++)\n\t\t\t\t\t\tif (!((l << 1) & j) && !((j << 1) & l) && (i > 2 ? true : !l))\n\t\t\t\t\t\t\tfor (int x = tmp + tmp1 +\n\t\t\t\t\t\t\t\t__builtin_popcount(l); x <= ::k; x++)\n\t\t\t\t\t\t\t\tdp[i][j][k][x] = (dp[i][j][k][x] +\n\t\t\t\t\t\t\t\t\tdp[i - 1][k][l][x - tmp]) % mod;\n\t\t\t\t\tif (tmp)\n\t\t\t\t\t\tans = (ans + dp[i][j][k][::k]) % mod;\n\t\t\t\t}\n\t\t}\n\tcout << ans;\n\treturn 0;\n}\n```\n\n### SP1700\n\n[SP1700 TRSTAGE - Traveling by Stagecoach](https://www.luogu.com.cn/problem/SP1700)\n\n[Traveling by Stagecoach - SPOJ TRSTAGE](https://vjudge.net/problem/SPOJ-TRSTAGE#author=DeepSeek_zh)\n\n定义 $dp_{i,j}$ 表示到达状态为二进制下的 $i$ 最后到 $j$ 的最短用时。\n\n答案为 $\\min dp_{i,b}$。\n\n时间复杂度 $O\\left(2^nn(m+k)\\right)$。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 30 + 5;\nint n, m, k, x, y, a[N], b[N][N];\ndouble dp[1 << 8][N], ans;\nvector<int>nbr[N];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\twhile (cin >> n >> m >> k >> x >> y)\n\t{\n\t\tif (!n)\n\t\t\tbreak;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tcin >> a[i];\n\t\tfor (int i = 1; i <= m; i++)\n\t\t\tnbr[i].clear();\n\t\tfor (int i = 1; i <= k; i++)\n\t\t{\n\t\t\tint x, y;\n\t\t\tcin >> x >> y;\n\t\t\tcin >> b[x][y];\n\t\t\tb[y][x] = b[x][y];\n\t\t\tnbr[x].push_back(y);\n\t\t\tnbr[y].push_back(x);\n\t\t}\n\t\tans = 1e9;\n\t\tfor (int i = 0; i < (1 << n); i++)\n\t\t\tfor (int j = 1; j <= m; j++)\n\t\t\t\tdp[i][j] = 1e9;\n\t\tdp[0][x] = 0;\n\t\tfor (int i = 1; i < (1 << n); i++)\n\t\t\tfor (int j = 0; j < n; j++)\n\t\t\t\tif ((i >> j) & 1)\n\t\t\t\t\tfor (int k = 1; k <= m; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (auto& nxt : nbr[k])\n\t\t\t\t\t\t\tdp[i][k] = min(dp[i][k], dp[i ^ (1 << j)][nxt] +\n\t\t\t\t\t\t\t\tb[k][nxt] * 1.00 / a[j]);\n\t\t\t\t\t\tif (k == y)\n\t\t\t\t\t\t\tans = min(ans, dp[i][k]);\n\t\t\t\t\t}\n\t\tif (ans == 1e9)\n\t\t\tcout << \"Impossible\\n\";\n\t\telse\n\t\t\tcout << fixed << setprecision(3) << ans << '\\n';\n\t}\n\treturn 0;\n}\n```","source":"_posts/状压DP.md","raw":"---\ntitle: 状压DP\ncategories:\n\t- [动态规划]\n\t- [状态压缩]\n\t- [算法]\n\t- [编程]\ntags:\n\t- [动态规划]\n\t- [状态压缩]\nhot: true\nnew: true\ndate: 2025-05-02 20:11:28\n---\n\n# 状压DP\n\n> 状压 DP 是动态规划的一种，通过将状态压缩为整数来达到优化转移的目的。\n>\n> ——[OI-WIKI](https://oi.wiki/dp/state/)\n\n<!--more-->\n\n我们看 [P10447 最短 Hamilton 路径](https://www.luogu.com.cn/problem/P10447)：\n\n> 给定一张 $n$ 个点的带权无向图，点从 $0 \\sim n-1$ 标号，求起点 $0$ 到终点 $n-1$ 的最短 Hamilton 路径。 \n>\n> Hamilton 路径的定义是从 $0$ 到 $n-1$ 不重不漏地经过每个点恰好一次。\n\n我们发现状态转移需要获取点有没有转移过，所以定义 $dp _ {0/1,0/1,\\cdots,0/1,i}$ 表示最后到点 $i$，其他点有没有转移的最短 Hamilton 路径长度。\n\n写 $n+1$ 个循环的代码十分长，能不能让转移更简洁？\n\n这个状态前面特别像二进制整数，我们可以用数表示。\n\n$dp _ {i,j}$ 表示点有没有转移是二进制下 $i$，最后达到 $j$ 的最短 Hamilton 路径的长度。\n\n答案为 $dp _ {2^n-1,n-1}$。\n\n优化：枚举 $i$ 时 $i=i+2$ 而不是 $i=i+1$。\n\n时间复杂度 $O(\\frac{2^nn^2}{2})=O(2^{n-1}n^2)$。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 20 + 5;\nint n, dp[1 << 20][N], dis[N][N];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tmemset(dp, 0x3f, sizeof dp);\n\tcin >> n;\n\tfor (int i = 0; i < n; i++)\n\t\tfor (int j = 0; j < n; j++)\n\t\t\tcin >> dis[i][j];\n\tdp[1][0] = 0;\n\tfor (int i = 3; i < (1ll << n); i += 2)\n\t\tfor (int j = 0; j < n; j++)\n\t\t\tif ((i >> j) & 1)\n\t\t\t\tfor (int k = 0; k < n; k++)\n\t\t\t\t\tif (((i >> k) & 1) && j != k)\n\t\t\t\t\t\tdp[i][j] = min(dp[i][j], dp[i ^ (1ll << j)][k] + dis[k][j]);\n\tcout << dp[(1 << n) - 1][n - 1];\n\treturn 0;\n}\n```\n\n## 例题\n\n### 洛谷P1171\n\n[P1171 售货员的难题](https://www.luogu.com.cn/problem/P1171)\n\n和上一题差不多，只是需要回到 $1$ 节点。\n\n可以枚举回去前最后一次到达的点。\n\n```cpp\nfor (int i = 1; i < n; i++)\n\tans = min(ans, dp[(1 << n) - 1][i] + dis[i][0]);\n```\n\n剩下的一样。\n\n### 洛谷P2704\n\n[P2704 [NOI2001] 炮兵阵地](https://www.luogu.com.cn/problem/P2704)\n\n定义 $dp_{i,j,k}$ 表示第 $i$ 行摆放二进制下的 $j$，第 $i-1$ 行摆放二进制下的 $k$ 时最多能摆放的炮兵部队的数量。\n\n答案为 $\\max dp_{i,j,k}$。\n\n但是 $100\\times4^{10}=104,867,600$ 次状态转移，会 TLE。\n\n优化：实际上有用的 $j,k$ 只有最多 $60$ 个，因此可以预处理有用的 $j,k$。\n\n时间复杂度 $O(nk^2+2^{10})$，其中 $k$ 表示有用的 $j$ 的个数。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 100 + 5;\nint n, m, a[N], b[N], c[N], cnt, dp[N][65][65], ans;\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\ta[i] = (a[i] << 1) + (c == 'P');\n\t\t}\n\tfor (int i = 0; i < (1 << m); i++)\n\t\tif (!((i << 1) & i) && !((i << 2) & i))\n\t\t{\n\t\t\tcnt++;\n\t\t\tb[cnt] = i;\n\t\t\tc[cnt] = __builtin_popcount(i);\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= cnt; j++)\n\t\t\tif ((b[j] | a[i]) == a[i])\n\t\t\t\tfor (int k = 1; k <= cnt; k++)\n\t\t\t\t\tif (!(b[j] & b[k]) && (b[k] | a[i - 1]) == a[i - 1])\n\t\t\t\t\t\tfor (int l = 1; l <= cnt; l++)\n\t\t\t\t\t\t\tif (!(b[j] & b[l]))\n\t\t\t\t\t\t\t\tans = max(ans, dp[i][j][k] = max(dp[i][j][k],\n\t\t\t\t\t\t\t\t\tdp[i - 1][k][l] + c[j]));\n\tcout << ans;\n\treturn 0;\n}\n```\n\n### 洛谷P1896\n\n[P1896 [SCOI2005] 互不侵犯](https://www.luogu.com.cn/problem/P1896)\n\n定义 $dp_{i,j,k}$ 表示第 $i$ 行摆放二进制下的 $j$，一共摆放了 $k$ 个的方案数。\n\n答案为 $\\sum dp_{i,j,K}$。\n\n时间复杂度 $O(2^NNK)$。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 100 + 5;\nint n, m, dp[N][1 << 9][N], ans;\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tdp[0][0][0] = 1;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 0; j < (1 << n); j++)\n\t\t\tif (!((j << 1) & j))\n\t\t\t{\n\t\t\t\tint tmp = __builtin_popcount(j);\n\t\t\t\tfor (int k = 0; k < (1 << n); k++)\n\t\t\t\t\tif (!((j << 1) & k) && !(j & k) && !((k << 1) & j))\n\t\t\t\t\t\tfor (int l = tmp + __builtin_popcount(k); l <= m; l++)\n\t\t\t\t\t\t\tdp[i][j][l] = dp[i][j][l] + dp[i - 1][k][l - tmp];\n\t\t\t\tif (tmp)\n\t\t\t\t\tans += dp[i][j][m];\n\t\t\t}\n\tcout << ans;\n\treturn 0;\n}\n```\n\n### 洛谷P8756\n\n[P8756 [蓝桥杯 2021 省 AB2] 国际象棋](https://www.luogu.com.cn/problem/P8756)\n\n定义 $dp_{i,j,k,l}$ 表示第 $i$ 列摆放二进制下的 $j$，第 $i-1$ 列摆放二进制下的 $k$，一共摆放了 $l$ 个的方案数。\n\n答案为 $\\sum dp_{i,j,k,K}$。\n\n时间复杂度 $O(2^NMK)$。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 100 + 5, mod = 1e9 + 7;\nint n, m, k, dp[N][1 << 6][1 << 6][25], ans;\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m >> k;\n\tdp[0][0][0][0] = 1;\n\tfor (int i = 1; i <= m; i++)\n\t\tfor (int j = 0; j < (1 << n); j++)\n\t\t{\n\t\t\tint tmp = __builtin_popcount(j);\n\t\t\tfor (int k = 0; k < (1 << n); k++)\n\t\t\t\tif (!((k << 2) & j) && !((j << 2) & k) && (i > 1 ? true : !k))\n\t\t\t\t{\n\t\t\t\t\tint tmp1 = __builtin_popcount(k);\n\t\t\t\t\tfor (int l = 0; l < (1 << n); l++)\n\t\t\t\t\t\tif (!((l << 1) & j) && !((j << 1) & l) && (i > 2 ? true : !l))\n\t\t\t\t\t\t\tfor (int x = tmp + tmp1 +\n\t\t\t\t\t\t\t\t__builtin_popcount(l); x <= ::k; x++)\n\t\t\t\t\t\t\t\tdp[i][j][k][x] = (dp[i][j][k][x] +\n\t\t\t\t\t\t\t\t\tdp[i - 1][k][l][x - tmp]) % mod;\n\t\t\t\t\tif (tmp)\n\t\t\t\t\t\tans = (ans + dp[i][j][k][::k]) % mod;\n\t\t\t\t}\n\t\t}\n\tcout << ans;\n\treturn 0;\n}\n```\n\n### SP1700\n\n[SP1700 TRSTAGE - Traveling by Stagecoach](https://www.luogu.com.cn/problem/SP1700)\n\n[Traveling by Stagecoach - SPOJ TRSTAGE](https://vjudge.net/problem/SPOJ-TRSTAGE#author=DeepSeek_zh)\n\n定义 $dp_{i,j}$ 表示到达状态为二进制下的 $i$ 最后到 $j$ 的最短用时。\n\n答案为 $\\min dp_{i,b}$。\n\n时间复杂度 $O\\left(2^nn(m+k)\\right)$。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 30 + 5;\nint n, m, k, x, y, a[N], b[N][N];\ndouble dp[1 << 8][N], ans;\nvector<int>nbr[N];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\twhile (cin >> n >> m >> k >> x >> y)\n\t{\n\t\tif (!n)\n\t\t\tbreak;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tcin >> a[i];\n\t\tfor (int i = 1; i <= m; i++)\n\t\t\tnbr[i].clear();\n\t\tfor (int i = 1; i <= k; i++)\n\t\t{\n\t\t\tint x, y;\n\t\t\tcin >> x >> y;\n\t\t\tcin >> b[x][y];\n\t\t\tb[y][x] = b[x][y];\n\t\t\tnbr[x].push_back(y);\n\t\t\tnbr[y].push_back(x);\n\t\t}\n\t\tans = 1e9;\n\t\tfor (int i = 0; i < (1 << n); i++)\n\t\t\tfor (int j = 1; j <= m; j++)\n\t\t\t\tdp[i][j] = 1e9;\n\t\tdp[0][x] = 0;\n\t\tfor (int i = 1; i < (1 << n); i++)\n\t\t\tfor (int j = 0; j < n; j++)\n\t\t\t\tif ((i >> j) & 1)\n\t\t\t\t\tfor (int k = 1; k <= m; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (auto& nxt : nbr[k])\n\t\t\t\t\t\t\tdp[i][k] = min(dp[i][k], dp[i ^ (1 << j)][nxt] +\n\t\t\t\t\t\t\t\tb[k][nxt] * 1.00 / a[j]);\n\t\t\t\t\t\tif (k == y)\n\t\t\t\t\t\t\tans = min(ans, dp[i][k]);\n\t\t\t\t\t}\n\t\tif (ans == 1e9)\n\t\t\tcout << \"Impossible\\n\";\n\t\telse\n\t\t\tcout << fixed << setprecision(3) << ans << '\\n';\n\t}\n\treturn 0;\n}\n```","slug":"状压DP","published":1,"updated":"2025-09-18T07:47:07.989Z","comments":1,"layout":"post","photos":[],"_id":"cmfp5q6ao000j3kv31w87c5rl","content":"<h1 id=\"状压dp\"><a class=\"markdownIt-Anchor\" href=\"#状压dp\"></a> 状压DP</h1>\n<blockquote>\n<p>状压 DP 是动态规划的一种，通过将状态压缩为整数来达到优化转移的目的。</p>\n<p>——<a href=\"https://oi.wiki/dp/state/\">OI-WIKI</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<p>我们看 <a href=\"https://www.luogu.com.cn/problem/P10447\">P10447 最短 Hamilton 路径</a>：</p>\n<blockquote>\n<p>给定一张 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个点的带权无向图，点从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>∼</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 \\sim n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 标号，求起点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 到终点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 的最短 Hamilton 路径。</p>\n<p>Hamilton 路径的定义是从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 不重不漏地经过每个点恰好一次。</p>\n</blockquote>\n<p>我们发现状态转移需要获取点有没有转移过，所以定义 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>i</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp _ {0/1,0/1,\\cdots,0/1,i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"minner mtight\">⋯</span><span class=\"mspace mtight\" style=\"margin-right:0.19516666666666668em;\"></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 表示最后到点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>，其他点有没有转移的最短 Hamilton 路径长度。</p>\n<p>写 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个循环的代码十分长，能不能让转移更简洁？</p>\n<p>这个状态前面特别像二进制整数，我们可以用数表示。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp _ {i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示点有没有转移是二进制下 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>，最后达到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的最短 Hamilton 路径的长度。</p>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp _ {2^n-1,n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>优化：枚举 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 时 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>=</mo><mi>i</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">i=i+2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 而不是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>=</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i=i+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>。</p>\n<p>时间复杂度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><msup><mn>2</mn><mi>n</mi></msup><msup><mi>n</mi><mn>2</mn></msup></mrow><mn>2</mn></mfrac><mo stretchy=\"false\">)</mo><mo>=</mo><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(\\frac{2^nn^2}{2})=O(2^{n-1}n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.36292em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01792em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385428571428572em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913142857142857em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">20</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, dp[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">20</span>][N], dis[N][N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dp);</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">\t\t\tcin &gt;&gt; dis[i][j];</span><br><span class=\"line\">\tdp[<span class=\"number\">1</span>][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">3</span>; i &lt; (<span class=\"number\">1ll</span> &lt;&lt; n); i += <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((i &gt;&gt; j) &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; n; k++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (((i &gt;&gt; k) &amp; <span class=\"number\">1</span>) &amp;&amp; j != k)</span><br><span class=\"line\">\t\t\t\t\t\tdp[i][j] = <span class=\"built_in\">min</span>(dp[i][j], dp[i ^ (<span class=\"number\">1ll</span> &lt;&lt; j)][k] + dis[k][j]);</span><br><span class=\"line\">\tcout &lt;&lt; dp[(<span class=\"number\">1</span> &lt;&lt; n) - <span class=\"number\">1</span>][n - <span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\"></a> 例题</h2>\n<h3 id=\"洛谷p1171\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1171\"></a> 洛谷P1171</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P1171\">P1171 售货员的难题</a></p>\n<p>和上一题差不多，只是需要回到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 节点。</p>\n<p>可以枚举回去前最后一次到达的点。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++)</span><br><span class=\"line\">\tans = <span class=\"built_in\">min</span>(ans, dp[(<span class=\"number\">1</span> &lt;&lt; n) - <span class=\"number\">1</span>][i] + dis[i][<span class=\"number\">0</span>]);</span><br></pre></td></tr></table></figure>\n<p>剩下的一样。</p>\n<h3 id=\"洛谷p2704\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p2704\"></a> 洛谷P2704</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P2704\">P2704 [NOI2001] 炮兵阵地</a></p>\n<p>定义 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 行摆放二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span>，第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 行摆放二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 时最多能摆放的炮兵部队的数量。</p>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>max</mi><mo>⁡</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\max dp_{i,j,k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mop\">max</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>但是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>100</mn><mo>×</mo><msup><mn>4</mn><mn>10</mn></msup><mo>=</mo><mn>104</mn><mo separator=\"true\">,</mo><mn>867</mn><mo separator=\"true\">,</mo><mn>600</mn></mrow><annotation encoding=\"application/x-tex\">100\\times4^{10}=104,867,600</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">8</span><span class=\"mord\">6</span><span class=\"mord\">7</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">6</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span> 次状态转移，会 TLE。</p>\n<p>优化：实际上有用的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">j,k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 只有最多 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>60</mn></mrow><annotation encoding=\"application/x-tex\">60</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">6</span><span class=\"mord\">0</span></span></span></span> 个，因此可以预处理有用的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">j,k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>。</p>\n<p>时间复杂度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><msup><mi>k</mi><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>10</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(nk^2+2^{10})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 表示有用的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的个数。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, a[N], b[N], c[N], cnt, dp[N][<span class=\"number\">65</span>][<span class=\"number\">65</span>], ans;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">char</span> c;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; c;</span><br><span class=\"line\">\t\t\ta[i] = (a[i] &lt;&lt; <span class=\"number\">1</span>) + (c == <span class=\"string\">&#x27;P&#x27;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; m); i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!((i &lt;&lt; <span class=\"number\">1</span>) &amp; i) &amp;&amp; !((i &lt;&lt; <span class=\"number\">2</span>) &amp; i))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tcnt++;</span><br><span class=\"line\">\t\t\tb[cnt] = i;</span><br><span class=\"line\">\t\t\tc[cnt] = __builtin_popcount(i);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= cnt; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((b[j] | a[i]) == a[i])</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">1</span>; k &lt;= cnt; k++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (!(b[j] &amp; b[k]) &amp;&amp; (b[k] | a[i - <span class=\"number\">1</span>]) == a[i - <span class=\"number\">1</span>])</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> l = <span class=\"number\">1</span>; l &lt;= cnt; l++)</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">if</span> (!(b[j] &amp; b[l]))</span><br><span class=\"line\">\t\t\t\t\t\t\t\tans = <span class=\"built_in\">max</span>(ans, dp[i][j][k] = <span class=\"built_in\">max</span>(dp[i][j][k],</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\tdp[i - <span class=\"number\">1</span>][k][l] + c[j]));</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"洛谷p1896\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1896\"></a> 洛谷P1896</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P1896\">P1896 [SCOI2005] 互不侵犯</a></p>\n<p>定义 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 行摆放二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span>，一共摆放了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 个的方案数。</p>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>K</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\sum dp_{i,j,K}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>时间复杂度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mn>2</mn><mi>N</mi></msup><mi>N</mi><mi>K</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(2^NNK)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0913309999999998em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mclose\">)</span></span></span></span>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dp[N][<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">9</span>][N], ans;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; (<span class=\"number\">1</span> &lt;&lt; n); j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!((j &lt;&lt; <span class=\"number\">1</span>) &amp; j))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> tmp = __builtin_popcount(j);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; (<span class=\"number\">1</span> &lt;&lt; n); k++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (!((j &lt;&lt; <span class=\"number\">1</span>) &amp; k) &amp;&amp; !(j &amp; k) &amp;&amp; !((k &lt;&lt; <span class=\"number\">1</span>) &amp; j))</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> l = tmp + __builtin_popcount(k); l &lt;= m; l++)</span><br><span class=\"line\">\t\t\t\t\t\t\tdp[i][j][l] = dp[i][j][l] + dp[i - <span class=\"number\">1</span>][k][l - tmp];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (tmp)</span><br><span class=\"line\">\t\t\t\t\tans += dp[i][j][m];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"洛谷p8756\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p8756\"></a> 洛谷P8756</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P8756\">P8756 [蓝桥杯 2021 省 AB2] 国际象棋</a></p>\n<p>定义 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi><mo separator=\"true\">,</mo><mi>l</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,k,l}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 列摆放二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span>，第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 列摆放二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>，一共摆放了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> 个的方案数。</p>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi><mo separator=\"true\">,</mo><mi>K</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\sum dp_{i,j,k,K}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>时间复杂度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mn>2</mn><mi>N</mi></msup><mi>M</mi><mi>K</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(2^NMK)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0913309999999998em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mclose\">)</span></span></span></span>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span> + <span class=\"number\">5</span>, mod = <span class=\"number\">1e9</span> + <span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, k, dp[N][<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">6</span>][<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">6</span>][<span class=\"number\">25</span>], ans;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; (<span class=\"number\">1</span> &lt;&lt; n); j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> tmp = __builtin_popcount(j);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; (<span class=\"number\">1</span> &lt;&lt; n); k++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (!((k &lt;&lt; <span class=\"number\">2</span>) &amp; j) &amp;&amp; !((j &lt;&lt; <span class=\"number\">2</span>) &amp; k) &amp;&amp; (i &gt; <span class=\"number\">1</span> ? <span class=\"literal\">true</span> : !k))</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"type\">int</span> tmp1 = __builtin_popcount(k);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> l = <span class=\"number\">0</span>; l &lt; (<span class=\"number\">1</span> &lt;&lt; n); l++)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (!((l &lt;&lt; <span class=\"number\">1</span>) &amp; j) &amp;&amp; !((j &lt;&lt; <span class=\"number\">1</span>) &amp; l) &amp;&amp; (i &gt; <span class=\"number\">2</span> ? <span class=\"literal\">true</span> : !l))</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> x = tmp + tmp1 +</span><br><span class=\"line\">\t\t\t\t\t\t\t\t__builtin_popcount(l); x &lt;= ::k; x++)</span><br><span class=\"line\">\t\t\t\t\t\t\t\tdp[i][j][k][x] = (dp[i][j][k][x] +</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\tdp[i - <span class=\"number\">1</span>][k][l][x - tmp]) % mod;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (tmp)</span><br><span class=\"line\">\t\t\t\t\t\tans = (ans + dp[i][j][k][::k]) % mod;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"sp1700\"><a class=\"markdownIt-Anchor\" href=\"#sp1700\"></a> SP1700</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/SP1700\">SP1700 TRSTAGE - Traveling by Stagecoach</a></p>\n<p><a href=\"https://vjudge.net/problem/SPOJ-TRSTAGE#author=DeepSeek_zh\">Traveling by Stagecoach - SPOJ TRSTAGE</a></p>\n<p>定义 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示到达状态为二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 最后到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的最短用时。</p>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>min</mi><mo>⁡</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\min dp_{i,b}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mop\">min</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>时间复杂度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo fence=\"true\">(</mo><msup><mn>2</mn><mi>n</mi></msup><mi>n</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>+</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O\\left(2^nn(m+k)\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">30</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, k, x, y, a[N], b[N][N];</span><br><span class=\"line\"><span class=\"type\">double</span> dp[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">8</span>][N], ans;</span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt;nbr[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (cin &gt;&gt; n &gt;&gt; m &gt;&gt; k &gt;&gt; x &gt;&gt; y)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!n)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">\t\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\t\tnbr[i].<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= k; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> x, y;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; b[x][y];</span><br><span class=\"line\">\t\t\tb[y][x] = b[x][y];</span><br><span class=\"line\">\t\t\tnbr[x].<span class=\"built_in\">push_back</span>(y);</span><br><span class=\"line\">\t\t\tnbr[y].<span class=\"built_in\">push_back</span>(x);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tans = <span class=\"number\">1e9</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; n); i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j++)</span><br><span class=\"line\">\t\t\t\tdp[i][j] = <span class=\"number\">1e9</span>;</span><br><span class=\"line\">\t\tdp[<span class=\"number\">0</span>][x] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; n); i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> ((i &gt;&gt; j) &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">1</span>; k &lt;= m; k++)</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; nxt : nbr[k])</span><br><span class=\"line\">\t\t\t\t\t\t\tdp[i][k] = <span class=\"built_in\">min</span>(dp[i][k], dp[i ^ (<span class=\"number\">1</span> &lt;&lt; j)][nxt] +</span><br><span class=\"line\">\t\t\t\t\t\t\t\tb[k][nxt] * <span class=\"number\">1.00</span> / a[j]);</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (k == y)</span><br><span class=\"line\">\t\t\t\t\t\t\tans = <span class=\"built_in\">min</span>(ans, dp[i][k]);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (ans == <span class=\"number\">1e9</span>)</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"string\">&quot;Impossible\\n&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tcout &lt;&lt; fixed &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">3</span>) &lt;&lt; ans &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"<h1 id=\"状压dp\"><a class=\"markdownIt-Anchor\" href=\"#状压dp\"></a> 状压DP</h1>\n<blockquote>\n<p>状压 DP 是动态规划的一种，通过将状态压缩为整数来达到优化转移的目的。</p>\n<p>——<a href=\"https://oi.wiki/dp/state/\">OI-WIKI</a></p>\n</blockquote>","more":"<p>我们看 <a href=\"https://www.luogu.com.cn/problem/P10447\">P10447 最短 Hamilton 路径</a>：</p>\n<blockquote>\n<p>给定一张 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个点的带权无向图，点从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>∼</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 \\sim n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 标号，求起点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 到终点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 的最短 Hamilton 路径。</p>\n<p>Hamilton 路径的定义是从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 不重不漏地经过每个点恰好一次。</p>\n</blockquote>\n<p>我们发现状态转移需要获取点有没有转移过，所以定义 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><mn>0</mn><mi mathvariant=\"normal\">/</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>i</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp _ {0/1,0/1,\\cdots,0/1,i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"minner mtight\">⋯</span><span class=\"mspace mtight\" style=\"margin-right:0.19516666666666668em;\"></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 表示最后到点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>，其他点有没有转移的最短 Hamilton 路径长度。</p>\n<p>写 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个循环的代码十分长，能不能让转移更简洁？</p>\n<p>这个状态前面特别像二进制整数，我们可以用数表示。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp _ {i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示点有没有转移是二进制下 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>，最后达到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的最短 Hamilton 路径的长度。</p>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp _ {2^n-1,n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>优化：枚举 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 时 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>=</mo><mi>i</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">i=i+2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 而不是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>=</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i=i+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>。</p>\n<p>时间复杂度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><msup><mn>2</mn><mi>n</mi></msup><msup><mi>n</mi><mn>2</mn></msup></mrow><mn>2</mn></mfrac><mo stretchy=\"false\">)</mo><mo>=</mo><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(\\frac{2^nn^2}{2})=O(2^{n-1}n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.36292em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01792em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385428571428572em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913142857142857em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">20</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, dp[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">20</span>][N], dis[N][N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dp);</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">\t\t\tcin &gt;&gt; dis[i][j];</span><br><span class=\"line\">\tdp[<span class=\"number\">1</span>][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">3</span>; i &lt; (<span class=\"number\">1ll</span> &lt;&lt; n); i += <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((i &gt;&gt; j) &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; n; k++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (((i &gt;&gt; k) &amp; <span class=\"number\">1</span>) &amp;&amp; j != k)</span><br><span class=\"line\">\t\t\t\t\t\tdp[i][j] = <span class=\"built_in\">min</span>(dp[i][j], dp[i ^ (<span class=\"number\">1ll</span> &lt;&lt; j)][k] + dis[k][j]);</span><br><span class=\"line\">\tcout &lt;&lt; dp[(<span class=\"number\">1</span> &lt;&lt; n) - <span class=\"number\">1</span>][n - <span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\"></a> 例题</h2>\n<h3 id=\"洛谷p1171\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1171\"></a> 洛谷P1171</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P1171\">P1171 售货员的难题</a></p>\n<p>和上一题差不多，只是需要回到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 节点。</p>\n<p>可以枚举回去前最后一次到达的点。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++)</span><br><span class=\"line\">\tans = <span class=\"built_in\">min</span>(ans, dp[(<span class=\"number\">1</span> &lt;&lt; n) - <span class=\"number\">1</span>][i] + dis[i][<span class=\"number\">0</span>]);</span><br></pre></td></tr></table></figure>\n<p>剩下的一样。</p>\n<h3 id=\"洛谷p2704\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p2704\"></a> 洛谷P2704</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P2704\">P2704 [NOI2001] 炮兵阵地</a></p>\n<p>定义 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 行摆放二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span>，第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 行摆放二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 时最多能摆放的炮兵部队的数量。</p>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>max</mi><mo>⁡</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\max dp_{i,j,k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mop\">max</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>但是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>100</mn><mo>×</mo><msup><mn>4</mn><mn>10</mn></msup><mo>=</mo><mn>104</mn><mo separator=\"true\">,</mo><mn>867</mn><mo separator=\"true\">,</mo><mn>600</mn></mrow><annotation encoding=\"application/x-tex\">100\\times4^{10}=104,867,600</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">8</span><span class=\"mord\">6</span><span class=\"mord\">7</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">6</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span> 次状态转移，会 TLE。</p>\n<p>优化：实际上有用的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">j,k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 只有最多 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>60</mn></mrow><annotation encoding=\"application/x-tex\">60</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">6</span><span class=\"mord\">0</span></span></span></span> 个，因此可以预处理有用的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">j,k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>。</p>\n<p>时间复杂度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><msup><mi>k</mi><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>10</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(nk^2+2^{10})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 表示有用的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的个数。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, a[N], b[N], c[N], cnt, dp[N][<span class=\"number\">65</span>][<span class=\"number\">65</span>], ans;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">char</span> c;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; c;</span><br><span class=\"line\">\t\t\ta[i] = (a[i] &lt;&lt; <span class=\"number\">1</span>) + (c == <span class=\"string\">&#x27;P&#x27;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; m); i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!((i &lt;&lt; <span class=\"number\">1</span>) &amp; i) &amp;&amp; !((i &lt;&lt; <span class=\"number\">2</span>) &amp; i))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tcnt++;</span><br><span class=\"line\">\t\t\tb[cnt] = i;</span><br><span class=\"line\">\t\t\tc[cnt] = __builtin_popcount(i);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= cnt; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((b[j] | a[i]) == a[i])</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">1</span>; k &lt;= cnt; k++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (!(b[j] &amp; b[k]) &amp;&amp; (b[k] | a[i - <span class=\"number\">1</span>]) == a[i - <span class=\"number\">1</span>])</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> l = <span class=\"number\">1</span>; l &lt;= cnt; l++)</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">if</span> (!(b[j] &amp; b[l]))</span><br><span class=\"line\">\t\t\t\t\t\t\t\tans = <span class=\"built_in\">max</span>(ans, dp[i][j][k] = <span class=\"built_in\">max</span>(dp[i][j][k],</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\tdp[i - <span class=\"number\">1</span>][k][l] + c[j]));</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"洛谷p1896\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1896\"></a> 洛谷P1896</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P1896\">P1896 [SCOI2005] 互不侵犯</a></p>\n<p>定义 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 行摆放二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span>，一共摆放了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 个的方案数。</p>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>K</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\sum dp_{i,j,K}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>时间复杂度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mn>2</mn><mi>N</mi></msup><mi>N</mi><mi>K</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(2^NNK)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0913309999999998em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mclose\">)</span></span></span></span>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dp[N][<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">9</span>][N], ans;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; (<span class=\"number\">1</span> &lt;&lt; n); j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!((j &lt;&lt; <span class=\"number\">1</span>) &amp; j))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> tmp = __builtin_popcount(j);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; (<span class=\"number\">1</span> &lt;&lt; n); k++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (!((j &lt;&lt; <span class=\"number\">1</span>) &amp; k) &amp;&amp; !(j &amp; k) &amp;&amp; !((k &lt;&lt; <span class=\"number\">1</span>) &amp; j))</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> l = tmp + __builtin_popcount(k); l &lt;= m; l++)</span><br><span class=\"line\">\t\t\t\t\t\t\tdp[i][j][l] = dp[i][j][l] + dp[i - <span class=\"number\">1</span>][k][l - tmp];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (tmp)</span><br><span class=\"line\">\t\t\t\t\tans += dp[i][j][m];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"洛谷p8756\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p8756\"></a> 洛谷P8756</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P8756\">P8756 [蓝桥杯 2021 省 AB2] 国际象棋</a></p>\n<p>定义 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi><mo separator=\"true\">,</mo><mi>l</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j,k,l}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 列摆放二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span>，第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 列摆放二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>，一共摆放了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> 个的方案数。</p>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>k</mi><mo separator=\"true\">,</mo><mi>K</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\sum dp_{i,j,k,K}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>时间复杂度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mn>2</mn><mi>N</mi></msup><mi>M</mi><mi>K</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(2^NMK)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0913309999999998em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mclose\">)</span></span></span></span>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span> + <span class=\"number\">5</span>, mod = <span class=\"number\">1e9</span> + <span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, k, dp[N][<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">6</span>][<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">6</span>][<span class=\"number\">25</span>], ans;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; (<span class=\"number\">1</span> &lt;&lt; n); j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> tmp = __builtin_popcount(j);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; (<span class=\"number\">1</span> &lt;&lt; n); k++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (!((k &lt;&lt; <span class=\"number\">2</span>) &amp; j) &amp;&amp; !((j &lt;&lt; <span class=\"number\">2</span>) &amp; k) &amp;&amp; (i &gt; <span class=\"number\">1</span> ? <span class=\"literal\">true</span> : !k))</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"type\">int</span> tmp1 = __builtin_popcount(k);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> l = <span class=\"number\">0</span>; l &lt; (<span class=\"number\">1</span> &lt;&lt; n); l++)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (!((l &lt;&lt; <span class=\"number\">1</span>) &amp; j) &amp;&amp; !((j &lt;&lt; <span class=\"number\">1</span>) &amp; l) &amp;&amp; (i &gt; <span class=\"number\">2</span> ? <span class=\"literal\">true</span> : !l))</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> x = tmp + tmp1 +</span><br><span class=\"line\">\t\t\t\t\t\t\t\t__builtin_popcount(l); x &lt;= ::k; x++)</span><br><span class=\"line\">\t\t\t\t\t\t\t\tdp[i][j][k][x] = (dp[i][j][k][x] +</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\tdp[i - <span class=\"number\">1</span>][k][l][x - tmp]) % mod;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (tmp)</span><br><span class=\"line\">\t\t\t\t\t\tans = (ans + dp[i][j][k][::k]) % mod;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"sp1700\"><a class=\"markdownIt-Anchor\" href=\"#sp1700\"></a> SP1700</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/SP1700\">SP1700 TRSTAGE - Traveling by Stagecoach</a></p>\n<p><a href=\"https://vjudge.net/problem/SPOJ-TRSTAGE#author=DeepSeek_zh\">Traveling by Stagecoach - SPOJ TRSTAGE</a></p>\n<p>定义 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 表示到达状态为二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 最后到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的最短用时。</p>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>min</mi><mo>⁡</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\min dp_{i,b}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mop\">min</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>时间复杂度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo fence=\"true\">(</mo><msup><mn>2</mn><mi>n</mi></msup><mi>n</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>+</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O\\left(2^nn(m+k)\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">30</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, k, x, y, a[N], b[N][N];</span><br><span class=\"line\"><span class=\"type\">double</span> dp[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">8</span>][N], ans;</span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt;nbr[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (cin &gt;&gt; n &gt;&gt; m &gt;&gt; k &gt;&gt; x &gt;&gt; y)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!n)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">\t\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\t\tnbr[i].<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= k; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> x, y;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; b[x][y];</span><br><span class=\"line\">\t\t\tb[y][x] = b[x][y];</span><br><span class=\"line\">\t\t\tnbr[x].<span class=\"built_in\">push_back</span>(y);</span><br><span class=\"line\">\t\t\tnbr[y].<span class=\"built_in\">push_back</span>(x);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tans = <span class=\"number\">1e9</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; n); i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j++)</span><br><span class=\"line\">\t\t\t\tdp[i][j] = <span class=\"number\">1e9</span>;</span><br><span class=\"line\">\t\tdp[<span class=\"number\">0</span>][x] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; n); i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> ((i &gt;&gt; j) &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">1</span>; k &lt;= m; k++)</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; nxt : nbr[k])</span><br><span class=\"line\">\t\t\t\t\t\t\tdp[i][k] = <span class=\"built_in\">min</span>(dp[i][k], dp[i ^ (<span class=\"number\">1</span> &lt;&lt; j)][nxt] +</span><br><span class=\"line\">\t\t\t\t\t\t\t\tb[k][nxt] * <span class=\"number\">1.00</span> / a[j]);</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (k == y)</span><br><span class=\"line\">\t\t\t\t\t\t\tans = <span class=\"built_in\">min</span>(ans, dp[i][k]);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (ans == <span class=\"number\">1e9</span>)</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"string\">&quot;Impossible\\n&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tcout &lt;&lt; fixed &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">3</span>) &lt;&lt; ans &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"网络流之最小割问题","hot":true,"new":true,"date":"2025-09-01T04:00:00.000Z","_content":"# 最小割问题\n对于给定的网络流模型，其最小割是指删除边权和最小的边集，使得 $s$ 到 $t$ 不连通。\n\n最小割等于最大流，因为增广路的流量限制是由这些权值的边，方案不一定唯一。\n\n## 例题\n### 洛谷P2774\n[P2774 方格取数问题](https://www.luogu.com.cn/problem/P2774)\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, s, t, edge[N], level[N], tmp[N], cnt, sum, ans, dx[] = { 0,0,1,-1 },\ndy[] = { 1,-1,0,0 };\nvector<pair<int, int>>nbr[N];\nbool bfs()\n{\n\tmemset(level, 0, sizeof level);\n\tqueue<int>q;\n\tq.push(s);\n\tlevel[s] = 1;\n\twhile (!q.empty())\n\t{\n\t\tint x = q.front();\n\t\tq.pop();\n\t\ttmp[x] = 0;\n\t\tfor (auto& nxt : nbr[x])\n\t\t\tif (edge[nxt.second] && !level[nxt.first])\n\t\t\t{\n\t\t\t\tlevel[nxt.first] = level[x] + 1;\n\t\t\t\tq.push(nxt.first);\n\t\t\t\tif (nxt.first == t)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t}\n\treturn false;\n}\nint dinic(int x, int flow)\n{\n\tif (x == t)\n\t\treturn flow;\n\tint rest = flow;\n\tfor (int i = tmp[x]; i < nbr[x].size(); i++)\n\t{\n\t\ttmp[x]++;\n\t\tauto& nxt = nbr[x][i];\n\t\tif (edge[nxt.second] && level[nxt.first] == level[x] + 1)\n\t\t{\n\t\t\tint inc = dinic(nxt.first, min(rest, edge[nxt.second]));\n\t\t\tedge[nxt.second] -= inc;\n\t\t\tedge[nxt.second ^ 1] += inc;\n\t\t\trest -= inc;\n\t\t}\n\t\tif (!rest)\n\t\t\tbreak;\n\t}\n\tif (!(flow - rest))\n\t\tlevel[x] = 0;\n\treturn flow - rest;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\ts = cnt = 1, t = 2;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tint z;\n\t\t\tcin >> z;\n\t\t\tsum += z;\n\t\t\tif ((i + j) & 1)\n\t\t\t{\n\t\t\t\tint x = s, y = (i - 1) * m + j + 2;\n\t\t\t\tedge[++cnt] = z;\n\t\t\t\tnbr[x].push_back({ y,cnt });\n\t\t\t\tnbr[y].push_back({ x,++cnt });\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint x = (i - 1) * m + j + 2, y = t;\n\t\t\t\tedge[++cnt] = z;\n\t\t\t\tnbr[x].push_back({ y,cnt });\n\t\t\t\tnbr[y].push_back({ x,++cnt });\n\t\t\t}\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\tif ((i + j) & 1)\n\t\t\t\tfor (int k = 0; k < 4; k++)\n\t\t\t\t{\n\t\t\t\t\tint nx = i + dx[k], ny = j + dy[k];\n\t\t\t\t\tif (nx > 0 && ny > 0 && nx <= n && ny <= m)\n\t\t\t\t\t{\n\t\t\t\t\t\tint x = (i - 1) * m + j + 2, y = (nx - 1) * m + ny + 2, z = INT_MAX;\n\t\t\t\t\t\tedge[++cnt] = z;\n\t\t\t\t\t\tnbr[x].push_back({ y,cnt });\n\t\t\t\t\t\tnbr[y].push_back({ x,++cnt });\n\t\t\t\t\t}\n\t\t\t\t}\n\twhile (bfs())\n\t\tans += dinic(s, INT_MAX);\n\tcout << sum - ans;\n\treturn 0;\n}\n```\n","source":"_posts/网络流之最小割问题.md","raw":"---\ntitle: 网络流之最小割问题\ncategories:\n\t- [网络流]\n\t- [最小割]\n\t- [算法]\n\t- [编程]\ntags:\n\t- [网络流]\n\t- [最小割问题]\nhot: true\nnew: true\ndate: 2025-09-01 12:00:00\n---\n# 最小割问题\n对于给定的网络流模型，其最小割是指删除边权和最小的边集，使得 $s$ 到 $t$ 不连通。\n\n最小割等于最大流，因为增广路的流量限制是由这些权值的边，方案不一定唯一。\n\n## 例题\n### 洛谷P2774\n[P2774 方格取数问题](https://www.luogu.com.cn/problem/P2774)\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, s, t, edge[N], level[N], tmp[N], cnt, sum, ans, dx[] = { 0,0,1,-1 },\ndy[] = { 1,-1,0,0 };\nvector<pair<int, int>>nbr[N];\nbool bfs()\n{\n\tmemset(level, 0, sizeof level);\n\tqueue<int>q;\n\tq.push(s);\n\tlevel[s] = 1;\n\twhile (!q.empty())\n\t{\n\t\tint x = q.front();\n\t\tq.pop();\n\t\ttmp[x] = 0;\n\t\tfor (auto& nxt : nbr[x])\n\t\t\tif (edge[nxt.second] && !level[nxt.first])\n\t\t\t{\n\t\t\t\tlevel[nxt.first] = level[x] + 1;\n\t\t\t\tq.push(nxt.first);\n\t\t\t\tif (nxt.first == t)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t}\n\treturn false;\n}\nint dinic(int x, int flow)\n{\n\tif (x == t)\n\t\treturn flow;\n\tint rest = flow;\n\tfor (int i = tmp[x]; i < nbr[x].size(); i++)\n\t{\n\t\ttmp[x]++;\n\t\tauto& nxt = nbr[x][i];\n\t\tif (edge[nxt.second] && level[nxt.first] == level[x] + 1)\n\t\t{\n\t\t\tint inc = dinic(nxt.first, min(rest, edge[nxt.second]));\n\t\t\tedge[nxt.second] -= inc;\n\t\t\tedge[nxt.second ^ 1] += inc;\n\t\t\trest -= inc;\n\t\t}\n\t\tif (!rest)\n\t\t\tbreak;\n\t}\n\tif (!(flow - rest))\n\t\tlevel[x] = 0;\n\treturn flow - rest;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\ts = cnt = 1, t = 2;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tint z;\n\t\t\tcin >> z;\n\t\t\tsum += z;\n\t\t\tif ((i + j) & 1)\n\t\t\t{\n\t\t\t\tint x = s, y = (i - 1) * m + j + 2;\n\t\t\t\tedge[++cnt] = z;\n\t\t\t\tnbr[x].push_back({ y,cnt });\n\t\t\t\tnbr[y].push_back({ x,++cnt });\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint x = (i - 1) * m + j + 2, y = t;\n\t\t\t\tedge[++cnt] = z;\n\t\t\t\tnbr[x].push_back({ y,cnt });\n\t\t\t\tnbr[y].push_back({ x,++cnt });\n\t\t\t}\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\tif ((i + j) & 1)\n\t\t\t\tfor (int k = 0; k < 4; k++)\n\t\t\t\t{\n\t\t\t\t\tint nx = i + dx[k], ny = j + dy[k];\n\t\t\t\t\tif (nx > 0 && ny > 0 && nx <= n && ny <= m)\n\t\t\t\t\t{\n\t\t\t\t\t\tint x = (i - 1) * m + j + 2, y = (nx - 1) * m + ny + 2, z = INT_MAX;\n\t\t\t\t\t\tedge[++cnt] = z;\n\t\t\t\t\t\tnbr[x].push_back({ y,cnt });\n\t\t\t\t\t\tnbr[y].push_back({ x,++cnt });\n\t\t\t\t\t}\n\t\t\t\t}\n\twhile (bfs())\n\t\tans += dinic(s, INT_MAX);\n\tcout << sum - ans;\n\treturn 0;\n}\n```\n","slug":"网络流之最小割问题","published":1,"updated":"2025-09-18T07:47:08.005Z","comments":1,"layout":"post","photos":[],"_id":"cmfp5q6aq000k3kv3axh19zx6","content":"<h1 id=\"最小割问题\"><a class=\"markdownIt-Anchor\" href=\"#最小割问题\"></a> 最小割问题</h1>\n<p>对于给定的网络流模型，其最小割是指删除边权和最小的边集，使得 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span> 不连通。</p>\n<p>最小割等于最大流，因为增广路的流量限制是由这些权值的边，方案不一定唯一。</p>\n<h2 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\"></a> 例题</h2>\n<h3 id=\"洛谷p2774\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p2774\"></a> 洛谷P2774</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P2774\">P2774 方格取数问题</a></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, s, t, edge[N], level[N], tmp[N], cnt, sum, ans, dx[] = &#123; <span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">-1</span> &#125;,</span><br><span class=\"line\">dy[] = &#123; <span class=\"number\">1</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span> &#125;;</span><br><span class=\"line\">vector&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;nbr[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">bfs</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(level, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span> level);</span><br><span class=\"line\">\tqueue&lt;<span class=\"type\">int</span>&gt;q;</span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(s);</span><br><span class=\"line\">\tlevel[s] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (!q.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x = q.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">\t\tq.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">\t\ttmp[x] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; nxt : nbr[x])</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (edge[nxt.second] &amp;&amp; !level[nxt.first])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tlevel[nxt.first] = level[x] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\tq.<span class=\"built_in\">push</span>(nxt.first);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (nxt.first == t)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">dinic</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> flow)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x == t)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> flow;</span><br><span class=\"line\">\t<span class=\"type\">int</span> rest = flow;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = tmp[x]; i &lt; nbr[x].<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ttmp[x]++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">auto</span>&amp; nxt = nbr[x][i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (edge[nxt.second] &amp;&amp; level[nxt.first] == level[x] + <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> inc = <span class=\"built_in\">dinic</span>(nxt.first, <span class=\"built_in\">min</span>(rest, edge[nxt.second]));</span><br><span class=\"line\">\t\t\tedge[nxt.second] -= inc;</span><br><span class=\"line\">\t\t\tedge[nxt.second ^ <span class=\"number\">1</span>] += inc;</span><br><span class=\"line\">\t\t\trest -= inc;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!rest)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!(flow - rest))</span><br><span class=\"line\">\t\tlevel[x] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> flow - rest;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\ts = cnt = <span class=\"number\">1</span>, t = <span class=\"number\">2</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> z;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; z;</span><br><span class=\"line\">\t\t\tsum += z;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((i + j) &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> x = s, y = (i - <span class=\"number\">1</span>) * m + j + <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\t\tedge[++cnt] = z;</span><br><span class=\"line\">\t\t\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,cnt &#125;);</span><br><span class=\"line\">\t\t\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,++cnt &#125;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> x = (i - <span class=\"number\">1</span>) * m + j + <span class=\"number\">2</span>, y = t;</span><br><span class=\"line\">\t\t\t\tedge[++cnt] = z;</span><br><span class=\"line\">\t\t\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,cnt &#125;);</span><br><span class=\"line\">\t\t\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,++cnt &#125;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((i + j) &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; <span class=\"number\">4</span>; k++)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"type\">int</span> nx = i + dx[k], ny = j + dy[k];</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (nx &gt; <span class=\"number\">0</span> &amp;&amp; ny &gt; <span class=\"number\">0</span> &amp;&amp; nx &lt;= n &amp;&amp; ny &lt;= m)</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"type\">int</span> x = (i - <span class=\"number\">1</span>) * m + j + <span class=\"number\">2</span>, y = (nx - <span class=\"number\">1</span>) * m + ny + <span class=\"number\">2</span>, z = INT_MAX;</span><br><span class=\"line\">\t\t\t\t\t\tedge[++cnt] = z;</span><br><span class=\"line\">\t\t\t\t\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,cnt &#125;);</span><br><span class=\"line\">\t\t\t\t\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,++cnt &#125;);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">bfs</span>())</span><br><span class=\"line\">\t\tans += <span class=\"built_in\">dinic</span>(s, INT_MAX);</span><br><span class=\"line\">\tcout &lt;&lt; sum - ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"最小割问题\"><a class=\"markdownIt-Anchor\" href=\"#最小割问题\"></a> 最小割问题</h1>\n<p>对于给定的网络流模型，其最小割是指删除边权和最小的边集，使得 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span> 不连通。</p>\n<p>最小割等于最大流，因为增广路的流量限制是由这些权值的边，方案不一定唯一。</p>\n<h2 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\"></a> 例题</h2>\n<h3 id=\"洛谷p2774\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p2774\"></a> 洛谷P2774</h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P2774\">P2774 方格取数问题</a></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, s, t, edge[N], level[N], tmp[N], cnt, sum, ans, dx[] = &#123; <span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">-1</span> &#125;,</span><br><span class=\"line\">dy[] = &#123; <span class=\"number\">1</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span> &#125;;</span><br><span class=\"line\">vector&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;nbr[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">bfs</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(level, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span> level);</span><br><span class=\"line\">\tqueue&lt;<span class=\"type\">int</span>&gt;q;</span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(s);</span><br><span class=\"line\">\tlevel[s] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (!q.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x = q.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">\t\tq.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">\t\ttmp[x] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; nxt : nbr[x])</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (edge[nxt.second] &amp;&amp; !level[nxt.first])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tlevel[nxt.first] = level[x] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\tq.<span class=\"built_in\">push</span>(nxt.first);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (nxt.first == t)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">dinic</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> flow)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x == t)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> flow;</span><br><span class=\"line\">\t<span class=\"type\">int</span> rest = flow;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = tmp[x]; i &lt; nbr[x].<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ttmp[x]++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">auto</span>&amp; nxt = nbr[x][i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (edge[nxt.second] &amp;&amp; level[nxt.first] == level[x] + <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> inc = <span class=\"built_in\">dinic</span>(nxt.first, <span class=\"built_in\">min</span>(rest, edge[nxt.second]));</span><br><span class=\"line\">\t\t\tedge[nxt.second] -= inc;</span><br><span class=\"line\">\t\t\tedge[nxt.second ^ <span class=\"number\">1</span>] += inc;</span><br><span class=\"line\">\t\t\trest -= inc;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!rest)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!(flow - rest))</span><br><span class=\"line\">\t\tlevel[x] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> flow - rest;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\ts = cnt = <span class=\"number\">1</span>, t = <span class=\"number\">2</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> z;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; z;</span><br><span class=\"line\">\t\t\tsum += z;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((i + j) &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> x = s, y = (i - <span class=\"number\">1</span>) * m + j + <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\t\tedge[++cnt] = z;</span><br><span class=\"line\">\t\t\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,cnt &#125;);</span><br><span class=\"line\">\t\t\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,++cnt &#125;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> x = (i - <span class=\"number\">1</span>) * m + j + <span class=\"number\">2</span>, y = t;</span><br><span class=\"line\">\t\t\t\tedge[++cnt] = z;</span><br><span class=\"line\">\t\t\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,cnt &#125;);</span><br><span class=\"line\">\t\t\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,++cnt &#125;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((i + j) &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; <span class=\"number\">4</span>; k++)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"type\">int</span> nx = i + dx[k], ny = j + dy[k];</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (nx &gt; <span class=\"number\">0</span> &amp;&amp; ny &gt; <span class=\"number\">0</span> &amp;&amp; nx &lt;= n &amp;&amp; ny &lt;= m)</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"type\">int</span> x = (i - <span class=\"number\">1</span>) * m + j + <span class=\"number\">2</span>, y = (nx - <span class=\"number\">1</span>) * m + ny + <span class=\"number\">2</span>, z = INT_MAX;</span><br><span class=\"line\">\t\t\t\t\t\tedge[++cnt] = z;</span><br><span class=\"line\">\t\t\t\t\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,cnt &#125;);</span><br><span class=\"line\">\t\t\t\t\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,++cnt &#125;);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">bfs</span>())</span><br><span class=\"line\">\t\tans += <span class=\"built_in\">dinic</span>(s, INT_MAX);</span><br><span class=\"line\">\tcout &lt;&lt; sum - ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"连通性问题","date":"2024-12-31T16:00:00.000Z","_content":"\n# 连通性问题\n\n> tarjan：连通性问题永远的神。\n\n## 双连通与割点、割边\n\n- 点双连通：在无向图中，删除一个点（不是 $x$ 或者 $y$）后，点 $x$ 和点 $y$ 仍然能够彼此到达，那么称 $x$ 和 $y$ 是点双连通的；\n\n- 边双连通：在无向图中，删除一条边后，点 $x$ 和点 $y$ 仍然能够彼此到达，那么称 $x$ 和 $y$ 是边双连通的；\n\n- 性质 $1$： 点双连通不具有传递性，但边双连通具有传递性；\n\n<!-- more -->\n\n- 割点\n\t\n    - 在无向图 $G$ 中，若删除 $x$ 后，连通块的数量增加，则 $x$ 称为无向图 $G$ 的一个割点（割顶）。\n\n    - 结论：至少有 $3$ 个点的无向图，才**可能**存在割点；\n\n    - 割点的判定\n        - 若搜索树中，有从 $x$ 到 $y$ 的连边，当 $low_y \\ge dfn_x$ 时，说明 $y$ 能到达的最小时间戳在 $x$ 的时间戳之上，$y$ 被 $x$ 与 $x$ 之前的结点“隔开”，$x$ 可能是割点。只要 $x$ 不是搜索树的根结点，或者 $x$ 是根结点，但是 $x$ 的子结点大于 $1$ 个，那么 $x$ 就是割点。\n        - \n            ```cpp\n            void tarjan(int x)\n            {\n                dfn[x] = low[x] = ++num; //打时间戳\n                int cnt = 0; //统计子 结点个数\n                for (auto& [nxt, w] : nbr[x])\n                    if (!dfn[nxt]) //没去过 $nxt$\n                    {\n                        tarjan(nxt); //递归查找\n                        low[x] = min(low[x], low[nxt]); //维护 $x$ 能达到的最小时间戳 $low_X$\n                        cnt++;\n                        if (low[nxt] >= dfn[x]) //$x$ 可能是割点\n                            if (x != root || cnt >= 2) //排除根 结点只有 $1$个子 结点\n                                cut[x] = true;\n                    }\n                    else //$nxt$ 去过，所以 $nxt$ 还没有回溯，不能用 $low_nxt$\n                        low[x] = min(low[x], dfn[nxt]);\n                return;\n            }\n            ```\n\t\n- 割边\n\n\t- 在无向图中，若删除 $1$ 条边 $e$ 后，连通块的数量增加，那么称 $e$ 为一条割边。\n\t\n\t- 性质：割边一定不在环上，在环上的边一定不是割边。\n\t\n\t- 割边涉及的通常是“必经边”的问题。\n\t\n\t- 不用证明：割边删除后，恰好增加 $1$ 个连通块。\n\t\n\t- 割边的判定\n\t\n\t\t- 维护 $dfn_x$ 和 $low_x$ 之后，对于 $x$ 到 $y$ 的连边，若 $low_y > dfn_x$，则 `bridge[i] = bridge[i^1] = true`（对于链式前向星的方法）。\n\t\n\t\t- \n\t\t\t```cpp\n\t\t\t#include<bits/stdc++.h>\n\t\t\ttypedef int int32;\n\t\t\t#define int long long\n\t\t\tusing namespace std;\n\t\t\tconst int N = 1e6 + 5;\n\t\t\tint n, m, dfn[N], low[N], num, ans;\n\t\t\tbool cut[N];\n\t\t\tvector<pair<int, int>>nbr[N];\n\t\t\tvoid tarjan(int x, int edge)\n\t\t\t{\n\t\t\t\tdfn[x] = low[x] = ++num;\n\t\t\t\tfor (auto& [nxt, w] : nbr[x])//这里的 $w$ 不是权值，是边的编号\n\t\t\t\t\tif (!dfn[nxt])\n\t\t\t\t\t{\n\t\t\t\t\t\ttarjan(nxt, w);\n\t\t\t\t\t\tlow[x] = min(low[x], low[nxt]);\n\t\t\t\t\t\tif (low[nxt] > dfn[x])\n\t\t\t\t\t\t\tcut[w] = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (w != edge)\n\t\t\t\t\t\tlow[x] = min(low[x], dfn[nxt]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsigned main()\n\t\t\t{\n\t\t\t\tios::sync_with_stdio(0);\n\t\t\t\tcin.tie(0), cout.tie(0);\n\t\t\t\tcin >> n >> m;\n\t\t\t\tfor (int i = 1; i <= m; i++)\n\t\t\t\t{\n\t\t\t\t\tint x, y, z = i;\n\t\t\t\t\tcin >> x >> y;\n\t\t\t\t\tnbr[x].push_back({ y,z });\n\t\t\t\t\tnbr[y].push_back({ x,z });\n\t\t\t\t}\n\t\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\t\tif (!dfn[i])\n\t\t\t\t\t\ttarjan(i, 0);\n\t\t\t\tfor (int i = 1; i <= m; i++)\n\t\t\t\t\tans += cut[i];\n\t\t\t\tcout << ans;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\t```\n\n\n### 例题\n\n#### 洛谷P3388\n\n[P3388 【模板】割点（割顶）](https://www.luogu.com.cn/problem/P3388)\n\n题意：给出一个 $n$ 个点，$m$ 条边的无向图，求图的割点。\n\n#### CF22C\n\n题意：构造 $n$ 个点 $m$ 条边的无向连通图，且无重边，点 $v$ 必须是割点。需特判无解。\n\n1. 有解时，$m$ 一定有上界和下界，下届为 $m \\ge n-1$；\n2. $v$ 已经连接了 $n-1$ 个点，不能有重边，因此 $v$ 不能再连边，视为 $v$ 不存在；\n3. 为了保证容纳的边尽可能多，要尽量连完全图，且不能破坏 $v$ 的割点特征；\n4. 留 $1$ 个单点只跟 $v$ 保持连边，剩下的 $n-2$ 个点构造完全图即可；\n5. 上界 $m \\le n-1+ (n-2)\\times(n-3)/2$。\n\n代码：\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, v;\n#define print(x, y) cout << x << ' ' << y << '\\n'\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m >> v;\n\tif (m < n - 1 || m > n - 1 + (n - 2) * (n - 3) / 2)\n\t\tcout << -1;\n\telse\n\t{\n\t\tm -= n - 1;\n\t\tif (v == 1)\n\t\t{\n\t\t\tprint(1, 2);\n\t\t\tprint(1, 3);\n\t\t\tfor (int i = 3; i < n; i++)\n\t\t\t\tprint(i, i + 1);\n\t\t\tfor (int i = 3; i <= n; i++)\n\t\t\t\tfor (int j = i + 2; j <= n; j++)\n\t\t\t\t\tif (m--)\n\t\t\t\t\t\tprint(i, j);\n\t\t\t\t\telse\n\t\t\t\t\t\tgoto end;//不建议使用 `goto`，我是为了方便。\n\t\t\tfor (int i = 4; i <= n; i++)\n\t\t\t\tif (m--)\n\t\t\t\t\tprint(i, 1);\n\t\t\t\telse\n\t\t\t\t\tgoto end;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (int i = 2; i < n; i++)\n\t\t\t\tprint(i, i + 1);\n\t\t\tprint(1, v);\n\t\t\tfor (int i = 2; i <= n; i++)\n\t\t\t\tfor (int j = i + 2; j <= n; j++)\n\t\t\t\t\tif (m--)\n\t\t\t\t\t\tprint(i, j);\n\t\t\t\t\telse\n\t\t\t\t\t\tgoto end;\n\t\t}\n\tend:;\n\t}\n\treturn 0;\n}\n```\n\n#### 洛谷P3469\n\n[P3469 BLO-Blockade](https://www.luogu.com.cn/problem/P3469)\n\n题意：对于每个结点 $i$ 求出，把与结点 $i$ 关联的所有边去掉以后（不去掉结点 $i$ 本身），无向图有多少个有序点 $(x,y)$，满足 $x$ 和 $y$ 不连通。\n\n- 一个点 $x$，如果是不是割点，那么贡献一定是 $(n-2) \\div 2$；否则贡献是 $(n-1)+(z+1)(n-z-1)+\\sum_{y = A_i}{y(n-y)}$。其中 $A_i$ 为 结点 $i$ 满足：$i$ 是 $x$ 的子 结点，$i$ 之前没有访问过且 $low_i \\ge dfn_x$；$z$ 为 $\\sum a_i$。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, dfn[N], low[N], num, root, ans[N], sum[N];\nbool cut[N];\nvector<pair<int, int>>nbr[N];\nvoid tarjan(int x)\n{\n\tdfn[x] = low[x] = ++num;\n\tsum[x] = 1;\n\tint cnt = 0, tot = 0;\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (!dfn[nxt])\n\t\t{\n\t\t\ttarjan(nxt);\n\t\t\tsum[x] += sum[nxt];\n\t\t\tlow[x] = min(low[x], low[nxt]);\n\t\t\tcnt++;\n\t\t\tif (low[nxt] >= dfn[x])\n\t\t\t{\n\t\t\t\tans[x] += sum[nxt] * (n - sum[nxt]);\n\t\t\t\ttot += sum[nxt];\n\t\t\t\tif (x != root || cnt >= 2)\n\t\t\t\t\tcut[x] = true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tlow[x] = min(low[x], dfn[nxt]);\n\tif (!cut[x])\n\t\tans[x] = 2 * (n - 1);\n\telse\n\t\tans[x] += (n - tot - 1) * (tot + 1) + (n - 1);\n\treturn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x, y, z = 1;\n\t\tcin >> x >> y;\n\t\tnbr[x].push_back({ y,z });\n\t\tnbr[y].push_back({ x,z });\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i])\n\t\t\troot = i, tarjan(i);\n\tfor (int i = 1; i <= n; i++)\n\t\tcout << ans[i] << '\\n';\n\treturn 0;\n}\n```\n\n#### 洛谷P1656\n\n[P1656 炸铁路](https://www.luogu.com.cn/problem/P1656)\n\n题意：求割边，模板题。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, dfn[N], low[N], num, ans, cnt;\nbool cut[N];\nvector<pair<int, int>>nbr[N];\npair<int, int>a[N], b[N];\nvoid tarjan(int x, int edge)\n{\n\tdfn[x] = low[x] = ++num;\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (!dfn[nxt])\n\t\t{\n\t\t\ttarjan(nxt, w);\n\t\t\tlow[x] = min(low[x], low[nxt]);\n\t\t\tif (low[nxt] > dfn[x])\n\t\t\t\tcut[w] = true;\n\t\t}\n\t\telse if (w != edge)\n\t\t\tlow[x] = min(low[x], dfn[nxt]);\n\treturn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x, y, z = i;\n\t\tcin >> x >> y;\n\t\tnbr[x].push_back({ y,z });\n\t\tnbr[y].push_back({ x,z });\n\t\ta[i] = { min(x,y),max(x,y) };\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i])\n\t\t\ttarjan(i, 0);\n\tfor (int i = 1; i <= m; i++)\n\t\tif (cut[i])\n\t\t\tb[++cnt] = a[i];\n\tsort(b + 1, b + 1 + cnt);\n\tfor (int i = 1; i <= cnt; i++)\n\t\tcout << b[i].first << ' ' << b[i].second << '\\n';\n\treturn 0;\n}\n```\n\n#### 洛谷P7687\n\n[P1656](https://www.luogu.com.cn/problem/P7687)\n\n1. 初始时，所有点都能访问 A 和 B 类服务；\n2. 如果一条边，非割边，意味着在环上，删除后不改变连通性，不可能是关键边；\n3. 关键边应该是割边的一个子集；\n4. 对于 $x$ 到 $y$ 的连边，两侧不能出现没有 A 或者没有 B 类服务的点；\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n//#define int long long\nusing namespace std;\nconst int N = 1e6 + 5;\nint n, m, dfn[N], low[N], num, ans, a[N], b[N], k, l;\nbool cut[N], vis[N];\nvector<pair<int, int>>nbr[N];\npair<int, int>c[N];\nvoid tarjan(int x, int edge)\n{\n\tdfn[x] = low[x] = ++num;\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (!dfn[nxt])\n\t\t{\n\t\t\ttarjan(nxt, w);\n\t\t\ta[x] += a[nxt];\n\t\t\tb[x] += b[nxt];\n\t\t\tlow[x] = min(low[x], low[nxt]);\n\t\t\tif (low[nxt] > dfn[x])\n\t\t\t{\n\t\t\t\tcut[w] = true;\n\t\t\t\tif (max(a[nxt], k - a[nxt]) == k || max(b[nxt], l - b[nxt]) == l)\n\t\t\t\t\tvis[w] = true;\n\t\t\t}\n\t\t}\n\t\telse if (w != edge)\n\t\t\tlow[x] = min(low[x], dfn[nxt]);\n\treturn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m >> k >> l;\n\tfor (int i = 1; i <= k; i++)\n\t{\n\t\tint x;\n\t\tcin >> x;\n\t\ta[x] = 1;\n\t}\n\tfor (int i = 1; i <= l; i++)\n\t{\n\t\tint x;\n\t\tcin >> x;\n\t\tb[x] = 1;\n\t}\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x, y, z = i;\n\t\tcin >> x >> y;\n\t\tnbr[x].push_back({ y,z });\n\t\tnbr[y].push_back({ x,z });\n\t\tc[i] = { x,y };\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i])\n\t\t\ttarjan(i, 0);\n\tfor (int i = 1; i <= m; i++)\n\t\tans += vis[i];\n\tcout << ans << '\\n';\n\tfor (int i = 1; i <= m; i++)\n\t\tif (vis[i])\n\t\t\tcout << c[i].first << ' ' << c[i].second << '\\n';\n\treturn 0;\n}\n```\n\n## 边双连通分量\n\n- 边双连通：若无向图中点 $x$ 和 $y$ 在删除任意连边后，仍然连通，称 $x$ 和 $y$ 是边双连通的；\n- 边双连通分量：若无向图 $G$ 中，存在一个极大子图 $G'$，$G'$ 中没有割边，那么 $G'$ 是 $G$ 的一个边双连通分量记为 E-DCC；\n\n### 例题\n\n#### 洛谷T103489\n\n[T103489 【模板】边双连通分量](https://www.luogu.com.cn/problem/T103489)\n\n题意：给定一个 $n$ 个点 $m$ 条边的无向图，求边双连通分量（e-dcc）数量。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 3e5 + 5;\nint n, m, dfn[N], low[N], num, ans, cnt, dcc[N], id;\nbool cut[N];\nvector<pair<int, int>>nbr[N];\npair<int, int>a[N];\nvoid tarjan(int x, int edge)\n{\n\tdfn[x] = low[x] = ++num;\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (!dfn[nxt])\n\t\t{\n\t\t\ttarjan(nxt, w);\n\t\t\tlow[x] = min(low[x], low[nxt]);\n\t\t\tif (low[nxt] > dfn[x])\n\t\t\t\tcut[w] = true;\n\t\t}\n\t\telse if (w != edge)\n\t\t\tlow[x] = min(low[x], dfn[nxt]);\n\treturn;\n}\nvoid dfs(int x)\n{\n\tdcc[x] = id;\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (!dcc[nxt] && !cut[w])\n\t\t\tdfs(nxt);\n\treturn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x, y, z = i;\n\t\tcin >> x >> y;\n\t\tnbr[x].push_back({ y,z });\n\t\tnbr[y].push_back({ x,z });\n\t\ta[i] = { min(x,y),max(x,y) };\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i])\n\t\t\ttarjan(i, 0);\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dcc[i])\n\t\t\tid++, dfs(i);\n\tcout << id;\n\treturn 0;\n}\n```\n\n#### CF51F\n\n1. 图可能不连通，视为多个毛毛虫的拼接，每两个操作 $1$ 次；\n2. 对于一张连通图， 缩边双连通分量变为一棵树；\n3. 对于一棵树，操作叶子结点不会比操作叶子的父结点更优，所以叶子结点保留；\n4. 保留的主链越长越好，取树的直径最优，设长度为 $len$，且子结点为 $cnt$ 个，$n-len-cnt+2$；\n5. 设一个边双的结点数为 $size$，一个边双需要操作 $size-1$ 次；\n\n## 点双连通分量\n\n- 点双连通：无向图中，若点 $x$ 和 $y$，在删除任一点 $z$（$z\\not=x, z\\not=y$）后，$x$ 和 $y$ 仍然连通，那么称点 $x$ 和 $y$ 是点双连通的。\n\n- 点双连通分量：无向图 $G$ 中，若存在极大子图 $G'$，$G'$ 中没有割点，那么 $G'$ 称之为 $G$ 的一个点双连通分量，记为 V-DCC。\n\n推论：\n\n- 边双连通分量由割边连接，所以一个点只能在 $1$ 个 E-DCC 里；\n\n- 点双连通分量由割点链接，而 $1$ 个点可以链接多条边，因此 $1$ 个点可以在多个 V-DCC 里；\n- 若 $1$ 个点在超过 $1$ 个 V-DCC 中，则该点一定是割点；\n- 当研究一个 V-DCC 时，其内部没有“割点”，当研究整个图时，多个 V-DCC 的交点就是割点；\n- 一条边只能在一个 V-DCC 中。\n\n### 例题\n\n#### 洛谷P8435\n\n[P8435 【模板】点双连通分量](https://www.luogu.com.cn/problem/P8435)\n\n题意：对于一个 $n$ 个节点 $m$ 条无向边的图，请输出其点双连通分量的个数，并且输出每个点双连通分量。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 2e6 + 5;\nint n, m, dfn[N], low[N], num, root, cnt;\nbool cut[N];\nvector<pair<int, int>>nbr[N];\nvector<int>dcc[N];\nstack<int>q;\nvoid tarjan(int x)\n{\n\tdfn[x] = low[x] = ++num;\n\tq.push(x);\n\tif (x == root && !nbr[x].size())//x是单点\n\t{\n\t\tdcc[++cnt].push_back(x);\n\t\treturn;\n\t}\n\tint tot = 0;\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (!dfn[nxt])\n\t\t{\n\t\t\ttarjan(nxt);\n\t\t\tlow[x] = min(low[x], low[nxt]);\n\t\t\tif (low[nxt] >= dfn[x])\n\t\t\t{\n\t\t\t\ttot++;\n\t\t\t\tif (x != root || tot >= 2)\n\t\t\t\t\tcut[x] = true;\n\t\t\t\tint tmp = 0;\n\t\t\t\tcnt++;\n\t\t\t\twhile (!q.empty() && tmp != nxt)\n\t\t\t\t{\n\t\t\t\t\ttmp = q.top();\n\t\t\t\t\tq.pop();\n\t\t\t\t\tdcc[cnt].push_back(tmp);\n\t\t\t\t}\n\t\t\t\tdcc[cnt].push_back(x);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tlow[x] = min(low[x], dfn[nxt]);\n\treturn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x, y, z = 1;\n\t\tcin >> x >> y;\n\t\tif (x == y)\n\t\t\tcontinue;\n\t\tnbr[x].push_back({ y,z });\n\t\tnbr[y].push_back({ x,z });\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i])\n\t\t\troot = i, tarjan(i);\n\tcout << cnt << '\\n';\n\tfor (int i = 1; i <= cnt; i++)\n\t{\n\t\tcout << dcc[i].size() << ' ';\n\t\tfor (auto& x : dcc[i])\n\t\t\tcout << x << ' ';\n\t\tcout << '\\n';\n\t}\n\treturn 0;\n}\n```\n\n","source":"_posts/连通性问题.md","raw":"---\ntitle: 连通性问题\ndate: 2025-01-01 00:00:00\ntags:\n\t- [连通性问题]\ncategories:\n\t- [编程]\n\t- [算法]\n\t- [连通性问题]\n---\n\n# 连通性问题\n\n> tarjan：连通性问题永远的神。\n\n## 双连通与割点、割边\n\n- 点双连通：在无向图中，删除一个点（不是 $x$ 或者 $y$）后，点 $x$ 和点 $y$ 仍然能够彼此到达，那么称 $x$ 和 $y$ 是点双连通的；\n\n- 边双连通：在无向图中，删除一条边后，点 $x$ 和点 $y$ 仍然能够彼此到达，那么称 $x$ 和 $y$ 是边双连通的；\n\n- 性质 $1$： 点双连通不具有传递性，但边双连通具有传递性；\n\n<!-- more -->\n\n- 割点\n\t\n    - 在无向图 $G$ 中，若删除 $x$ 后，连通块的数量增加，则 $x$ 称为无向图 $G$ 的一个割点（割顶）。\n\n    - 结论：至少有 $3$ 个点的无向图，才**可能**存在割点；\n\n    - 割点的判定\n        - 若搜索树中，有从 $x$ 到 $y$ 的连边，当 $low_y \\ge dfn_x$ 时，说明 $y$ 能到达的最小时间戳在 $x$ 的时间戳之上，$y$ 被 $x$ 与 $x$ 之前的结点“隔开”，$x$ 可能是割点。只要 $x$ 不是搜索树的根结点，或者 $x$ 是根结点，但是 $x$ 的子结点大于 $1$ 个，那么 $x$ 就是割点。\n        - \n            ```cpp\n            void tarjan(int x)\n            {\n                dfn[x] = low[x] = ++num; //打时间戳\n                int cnt = 0; //统计子 结点个数\n                for (auto& [nxt, w] : nbr[x])\n                    if (!dfn[nxt]) //没去过 $nxt$\n                    {\n                        tarjan(nxt); //递归查找\n                        low[x] = min(low[x], low[nxt]); //维护 $x$ 能达到的最小时间戳 $low_X$\n                        cnt++;\n                        if (low[nxt] >= dfn[x]) //$x$ 可能是割点\n                            if (x != root || cnt >= 2) //排除根 结点只有 $1$个子 结点\n                                cut[x] = true;\n                    }\n                    else //$nxt$ 去过，所以 $nxt$ 还没有回溯，不能用 $low_nxt$\n                        low[x] = min(low[x], dfn[nxt]);\n                return;\n            }\n            ```\n\t\n- 割边\n\n\t- 在无向图中，若删除 $1$ 条边 $e$ 后，连通块的数量增加，那么称 $e$ 为一条割边。\n\t\n\t- 性质：割边一定不在环上，在环上的边一定不是割边。\n\t\n\t- 割边涉及的通常是“必经边”的问题。\n\t\n\t- 不用证明：割边删除后，恰好增加 $1$ 个连通块。\n\t\n\t- 割边的判定\n\t\n\t\t- 维护 $dfn_x$ 和 $low_x$ 之后，对于 $x$ 到 $y$ 的连边，若 $low_y > dfn_x$，则 `bridge[i] = bridge[i^1] = true`（对于链式前向星的方法）。\n\t\n\t\t- \n\t\t\t```cpp\n\t\t\t#include<bits/stdc++.h>\n\t\t\ttypedef int int32;\n\t\t\t#define int long long\n\t\t\tusing namespace std;\n\t\t\tconst int N = 1e6 + 5;\n\t\t\tint n, m, dfn[N], low[N], num, ans;\n\t\t\tbool cut[N];\n\t\t\tvector<pair<int, int>>nbr[N];\n\t\t\tvoid tarjan(int x, int edge)\n\t\t\t{\n\t\t\t\tdfn[x] = low[x] = ++num;\n\t\t\t\tfor (auto& [nxt, w] : nbr[x])//这里的 $w$ 不是权值，是边的编号\n\t\t\t\t\tif (!dfn[nxt])\n\t\t\t\t\t{\n\t\t\t\t\t\ttarjan(nxt, w);\n\t\t\t\t\t\tlow[x] = min(low[x], low[nxt]);\n\t\t\t\t\t\tif (low[nxt] > dfn[x])\n\t\t\t\t\t\t\tcut[w] = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (w != edge)\n\t\t\t\t\t\tlow[x] = min(low[x], dfn[nxt]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsigned main()\n\t\t\t{\n\t\t\t\tios::sync_with_stdio(0);\n\t\t\t\tcin.tie(0), cout.tie(0);\n\t\t\t\tcin >> n >> m;\n\t\t\t\tfor (int i = 1; i <= m; i++)\n\t\t\t\t{\n\t\t\t\t\tint x, y, z = i;\n\t\t\t\t\tcin >> x >> y;\n\t\t\t\t\tnbr[x].push_back({ y,z });\n\t\t\t\t\tnbr[y].push_back({ x,z });\n\t\t\t\t}\n\t\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\t\tif (!dfn[i])\n\t\t\t\t\t\ttarjan(i, 0);\n\t\t\t\tfor (int i = 1; i <= m; i++)\n\t\t\t\t\tans += cut[i];\n\t\t\t\tcout << ans;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\t```\n\n\n### 例题\n\n#### 洛谷P3388\n\n[P3388 【模板】割点（割顶）](https://www.luogu.com.cn/problem/P3388)\n\n题意：给出一个 $n$ 个点，$m$ 条边的无向图，求图的割点。\n\n#### CF22C\n\n题意：构造 $n$ 个点 $m$ 条边的无向连通图，且无重边，点 $v$ 必须是割点。需特判无解。\n\n1. 有解时，$m$ 一定有上界和下界，下届为 $m \\ge n-1$；\n2. $v$ 已经连接了 $n-1$ 个点，不能有重边，因此 $v$ 不能再连边，视为 $v$ 不存在；\n3. 为了保证容纳的边尽可能多，要尽量连完全图，且不能破坏 $v$ 的割点特征；\n4. 留 $1$ 个单点只跟 $v$ 保持连边，剩下的 $n-2$ 个点构造完全图即可；\n5. 上界 $m \\le n-1+ (n-2)\\times(n-3)/2$。\n\n代码：\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, v;\n#define print(x, y) cout << x << ' ' << y << '\\n'\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m >> v;\n\tif (m < n - 1 || m > n - 1 + (n - 2) * (n - 3) / 2)\n\t\tcout << -1;\n\telse\n\t{\n\t\tm -= n - 1;\n\t\tif (v == 1)\n\t\t{\n\t\t\tprint(1, 2);\n\t\t\tprint(1, 3);\n\t\t\tfor (int i = 3; i < n; i++)\n\t\t\t\tprint(i, i + 1);\n\t\t\tfor (int i = 3; i <= n; i++)\n\t\t\t\tfor (int j = i + 2; j <= n; j++)\n\t\t\t\t\tif (m--)\n\t\t\t\t\t\tprint(i, j);\n\t\t\t\t\telse\n\t\t\t\t\t\tgoto end;//不建议使用 `goto`，我是为了方便。\n\t\t\tfor (int i = 4; i <= n; i++)\n\t\t\t\tif (m--)\n\t\t\t\t\tprint(i, 1);\n\t\t\t\telse\n\t\t\t\t\tgoto end;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (int i = 2; i < n; i++)\n\t\t\t\tprint(i, i + 1);\n\t\t\tprint(1, v);\n\t\t\tfor (int i = 2; i <= n; i++)\n\t\t\t\tfor (int j = i + 2; j <= n; j++)\n\t\t\t\t\tif (m--)\n\t\t\t\t\t\tprint(i, j);\n\t\t\t\t\telse\n\t\t\t\t\t\tgoto end;\n\t\t}\n\tend:;\n\t}\n\treturn 0;\n}\n```\n\n#### 洛谷P3469\n\n[P3469 BLO-Blockade](https://www.luogu.com.cn/problem/P3469)\n\n题意：对于每个结点 $i$ 求出，把与结点 $i$ 关联的所有边去掉以后（不去掉结点 $i$ 本身），无向图有多少个有序点 $(x,y)$，满足 $x$ 和 $y$ 不连通。\n\n- 一个点 $x$，如果是不是割点，那么贡献一定是 $(n-2) \\div 2$；否则贡献是 $(n-1)+(z+1)(n-z-1)+\\sum_{y = A_i}{y(n-y)}$。其中 $A_i$ 为 结点 $i$ 满足：$i$ 是 $x$ 的子 结点，$i$ 之前没有访问过且 $low_i \\ge dfn_x$；$z$ 为 $\\sum a_i$。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, dfn[N], low[N], num, root, ans[N], sum[N];\nbool cut[N];\nvector<pair<int, int>>nbr[N];\nvoid tarjan(int x)\n{\n\tdfn[x] = low[x] = ++num;\n\tsum[x] = 1;\n\tint cnt = 0, tot = 0;\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (!dfn[nxt])\n\t\t{\n\t\t\ttarjan(nxt);\n\t\t\tsum[x] += sum[nxt];\n\t\t\tlow[x] = min(low[x], low[nxt]);\n\t\t\tcnt++;\n\t\t\tif (low[nxt] >= dfn[x])\n\t\t\t{\n\t\t\t\tans[x] += sum[nxt] * (n - sum[nxt]);\n\t\t\t\ttot += sum[nxt];\n\t\t\t\tif (x != root || cnt >= 2)\n\t\t\t\t\tcut[x] = true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tlow[x] = min(low[x], dfn[nxt]);\n\tif (!cut[x])\n\t\tans[x] = 2 * (n - 1);\n\telse\n\t\tans[x] += (n - tot - 1) * (tot + 1) + (n - 1);\n\treturn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x, y, z = 1;\n\t\tcin >> x >> y;\n\t\tnbr[x].push_back({ y,z });\n\t\tnbr[y].push_back({ x,z });\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i])\n\t\t\troot = i, tarjan(i);\n\tfor (int i = 1; i <= n; i++)\n\t\tcout << ans[i] << '\\n';\n\treturn 0;\n}\n```\n\n#### 洛谷P1656\n\n[P1656 炸铁路](https://www.luogu.com.cn/problem/P1656)\n\n题意：求割边，模板题。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, dfn[N], low[N], num, ans, cnt;\nbool cut[N];\nvector<pair<int, int>>nbr[N];\npair<int, int>a[N], b[N];\nvoid tarjan(int x, int edge)\n{\n\tdfn[x] = low[x] = ++num;\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (!dfn[nxt])\n\t\t{\n\t\t\ttarjan(nxt, w);\n\t\t\tlow[x] = min(low[x], low[nxt]);\n\t\t\tif (low[nxt] > dfn[x])\n\t\t\t\tcut[w] = true;\n\t\t}\n\t\telse if (w != edge)\n\t\t\tlow[x] = min(low[x], dfn[nxt]);\n\treturn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x, y, z = i;\n\t\tcin >> x >> y;\n\t\tnbr[x].push_back({ y,z });\n\t\tnbr[y].push_back({ x,z });\n\t\ta[i] = { min(x,y),max(x,y) };\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i])\n\t\t\ttarjan(i, 0);\n\tfor (int i = 1; i <= m; i++)\n\t\tif (cut[i])\n\t\t\tb[++cnt] = a[i];\n\tsort(b + 1, b + 1 + cnt);\n\tfor (int i = 1; i <= cnt; i++)\n\t\tcout << b[i].first << ' ' << b[i].second << '\\n';\n\treturn 0;\n}\n```\n\n#### 洛谷P7687\n\n[P1656](https://www.luogu.com.cn/problem/P7687)\n\n1. 初始时，所有点都能访问 A 和 B 类服务；\n2. 如果一条边，非割边，意味着在环上，删除后不改变连通性，不可能是关键边；\n3. 关键边应该是割边的一个子集；\n4. 对于 $x$ 到 $y$ 的连边，两侧不能出现没有 A 或者没有 B 类服务的点；\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n//#define int long long\nusing namespace std;\nconst int N = 1e6 + 5;\nint n, m, dfn[N], low[N], num, ans, a[N], b[N], k, l;\nbool cut[N], vis[N];\nvector<pair<int, int>>nbr[N];\npair<int, int>c[N];\nvoid tarjan(int x, int edge)\n{\n\tdfn[x] = low[x] = ++num;\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (!dfn[nxt])\n\t\t{\n\t\t\ttarjan(nxt, w);\n\t\t\ta[x] += a[nxt];\n\t\t\tb[x] += b[nxt];\n\t\t\tlow[x] = min(low[x], low[nxt]);\n\t\t\tif (low[nxt] > dfn[x])\n\t\t\t{\n\t\t\t\tcut[w] = true;\n\t\t\t\tif (max(a[nxt], k - a[nxt]) == k || max(b[nxt], l - b[nxt]) == l)\n\t\t\t\t\tvis[w] = true;\n\t\t\t}\n\t\t}\n\t\telse if (w != edge)\n\t\t\tlow[x] = min(low[x], dfn[nxt]);\n\treturn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m >> k >> l;\n\tfor (int i = 1; i <= k; i++)\n\t{\n\t\tint x;\n\t\tcin >> x;\n\t\ta[x] = 1;\n\t}\n\tfor (int i = 1; i <= l; i++)\n\t{\n\t\tint x;\n\t\tcin >> x;\n\t\tb[x] = 1;\n\t}\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x, y, z = i;\n\t\tcin >> x >> y;\n\t\tnbr[x].push_back({ y,z });\n\t\tnbr[y].push_back({ x,z });\n\t\tc[i] = { x,y };\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i])\n\t\t\ttarjan(i, 0);\n\tfor (int i = 1; i <= m; i++)\n\t\tans += vis[i];\n\tcout << ans << '\\n';\n\tfor (int i = 1; i <= m; i++)\n\t\tif (vis[i])\n\t\t\tcout << c[i].first << ' ' << c[i].second << '\\n';\n\treturn 0;\n}\n```\n\n## 边双连通分量\n\n- 边双连通：若无向图中点 $x$ 和 $y$ 在删除任意连边后，仍然连通，称 $x$ 和 $y$ 是边双连通的；\n- 边双连通分量：若无向图 $G$ 中，存在一个极大子图 $G'$，$G'$ 中没有割边，那么 $G'$ 是 $G$ 的一个边双连通分量记为 E-DCC；\n\n### 例题\n\n#### 洛谷T103489\n\n[T103489 【模板】边双连通分量](https://www.luogu.com.cn/problem/T103489)\n\n题意：给定一个 $n$ 个点 $m$ 条边的无向图，求边双连通分量（e-dcc）数量。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 3e5 + 5;\nint n, m, dfn[N], low[N], num, ans, cnt, dcc[N], id;\nbool cut[N];\nvector<pair<int, int>>nbr[N];\npair<int, int>a[N];\nvoid tarjan(int x, int edge)\n{\n\tdfn[x] = low[x] = ++num;\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (!dfn[nxt])\n\t\t{\n\t\t\ttarjan(nxt, w);\n\t\t\tlow[x] = min(low[x], low[nxt]);\n\t\t\tif (low[nxt] > dfn[x])\n\t\t\t\tcut[w] = true;\n\t\t}\n\t\telse if (w != edge)\n\t\t\tlow[x] = min(low[x], dfn[nxt]);\n\treturn;\n}\nvoid dfs(int x)\n{\n\tdcc[x] = id;\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (!dcc[nxt] && !cut[w])\n\t\t\tdfs(nxt);\n\treturn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x, y, z = i;\n\t\tcin >> x >> y;\n\t\tnbr[x].push_back({ y,z });\n\t\tnbr[y].push_back({ x,z });\n\t\ta[i] = { min(x,y),max(x,y) };\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i])\n\t\t\ttarjan(i, 0);\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dcc[i])\n\t\t\tid++, dfs(i);\n\tcout << id;\n\treturn 0;\n}\n```\n\n#### CF51F\n\n1. 图可能不连通，视为多个毛毛虫的拼接，每两个操作 $1$ 次；\n2. 对于一张连通图， 缩边双连通分量变为一棵树；\n3. 对于一棵树，操作叶子结点不会比操作叶子的父结点更优，所以叶子结点保留；\n4. 保留的主链越长越好，取树的直径最优，设长度为 $len$，且子结点为 $cnt$ 个，$n-len-cnt+2$；\n5. 设一个边双的结点数为 $size$，一个边双需要操作 $size-1$ 次；\n\n## 点双连通分量\n\n- 点双连通：无向图中，若点 $x$ 和 $y$，在删除任一点 $z$（$z\\not=x, z\\not=y$）后，$x$ 和 $y$ 仍然连通，那么称点 $x$ 和 $y$ 是点双连通的。\n\n- 点双连通分量：无向图 $G$ 中，若存在极大子图 $G'$，$G'$ 中没有割点，那么 $G'$ 称之为 $G$ 的一个点双连通分量，记为 V-DCC。\n\n推论：\n\n- 边双连通分量由割边连接，所以一个点只能在 $1$ 个 E-DCC 里；\n\n- 点双连通分量由割点链接，而 $1$ 个点可以链接多条边，因此 $1$ 个点可以在多个 V-DCC 里；\n- 若 $1$ 个点在超过 $1$ 个 V-DCC 中，则该点一定是割点；\n- 当研究一个 V-DCC 时，其内部没有“割点”，当研究整个图时，多个 V-DCC 的交点就是割点；\n- 一条边只能在一个 V-DCC 中。\n\n### 例题\n\n#### 洛谷P8435\n\n[P8435 【模板】点双连通分量](https://www.luogu.com.cn/problem/P8435)\n\n题意：对于一个 $n$ 个节点 $m$ 条无向边的图，请输出其点双连通分量的个数，并且输出每个点双连通分量。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 2e6 + 5;\nint n, m, dfn[N], low[N], num, root, cnt;\nbool cut[N];\nvector<pair<int, int>>nbr[N];\nvector<int>dcc[N];\nstack<int>q;\nvoid tarjan(int x)\n{\n\tdfn[x] = low[x] = ++num;\n\tq.push(x);\n\tif (x == root && !nbr[x].size())//x是单点\n\t{\n\t\tdcc[++cnt].push_back(x);\n\t\treturn;\n\t}\n\tint tot = 0;\n\tfor (auto& [nxt, w] : nbr[x])\n\t\tif (!dfn[nxt])\n\t\t{\n\t\t\ttarjan(nxt);\n\t\t\tlow[x] = min(low[x], low[nxt]);\n\t\t\tif (low[nxt] >= dfn[x])\n\t\t\t{\n\t\t\t\ttot++;\n\t\t\t\tif (x != root || tot >= 2)\n\t\t\t\t\tcut[x] = true;\n\t\t\t\tint tmp = 0;\n\t\t\t\tcnt++;\n\t\t\t\twhile (!q.empty() && tmp != nxt)\n\t\t\t\t{\n\t\t\t\t\ttmp = q.top();\n\t\t\t\t\tq.pop();\n\t\t\t\t\tdcc[cnt].push_back(tmp);\n\t\t\t\t}\n\t\t\t\tdcc[cnt].push_back(x);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tlow[x] = min(low[x], dfn[nxt]);\n\treturn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint x, y, z = 1;\n\t\tcin >> x >> y;\n\t\tif (x == y)\n\t\t\tcontinue;\n\t\tnbr[x].push_back({ y,z });\n\t\tnbr[y].push_back({ x,z });\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i])\n\t\t\troot = i, tarjan(i);\n\tcout << cnt << '\\n';\n\tfor (int i = 1; i <= cnt; i++)\n\t{\n\t\tcout << dcc[i].size() << ' ';\n\t\tfor (auto& x : dcc[i])\n\t\t\tcout << x << ' ';\n\t\tcout << '\\n';\n\t}\n\treturn 0;\n}\n```\n\n","slug":"连通性问题","published":1,"updated":"2025-09-18T07:47:08.005Z","comments":1,"layout":"post","photos":[],"_id":"cmfp5q6at000n3kv3hzi8c8yp","content":"<h1 id=\"连通性问题\"><a class=\"markdownIt-Anchor\" href=\"#连通性问题\"></a> 连通性问题</h1>\n<blockquote>\n<p>tarjan：连通性问题永远的神。</p>\n</blockquote>\n<h2 id=\"双连通与割点-割边\"><a class=\"markdownIt-Anchor\" href=\"#双连通与割点-割边\"></a> 双连通与割点、割边</h2>\n<ul>\n<li>\n<p>点双连通：在无向图中，删除一个点（不是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>）后，点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 仍然能够彼此到达，那么称 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 是点双连通的；</p>\n</li>\n<li>\n<p>边双连通：在无向图中，删除一条边后，点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 仍然能够彼此到达，那么称 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 是边双连通的；</p>\n</li>\n<li>\n<p>性质 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>： 点双连通不具有传递性，但边双连通具有传递性；</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<ul>\n<li>\n<p>割点</p>\n<ul>\n<li>\n<p>在无向图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 中，若删除 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 后，连通块的数量增加，则 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 称为无向图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 的一个割点（割顶）。</p>\n</li>\n<li>\n<p>结论：至少有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span> 个点的无向图，才<strong>可能</strong>存在割点；</p>\n</li>\n<li>\n<p>割点的判定</p>\n<ul>\n<li>若搜索树中，有从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的连边，当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>w</mi><mi>y</mi></msub><mo>≥</mo><mi>d</mi><mi>f</mi><msub><mi>n</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">low_y \\ge dfn_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 时，说明 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 能到达的最小时间戳在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的时间戳之上，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 被 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 与 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 之前的结点“隔开”，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 可能是割点。只要 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 不是搜索树的根结点，或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 是根结点，但是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的子结点大于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个，那么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 就是割点。</li>\n<li>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">tarjan</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    dfn[x] = low[x] = ++num; <span class=\"comment\">//打时间戳</span></span><br><span class=\"line\">    <span class=\"type\">int</span> cnt = <span class=\"number\">0</span>; <span class=\"comment\">//统计子 结点个数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!dfn[nxt]) <span class=\"comment\">//没去过 $nxt$</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">tarjan</span>(nxt); <span class=\"comment\">//递归查找</span></span><br><span class=\"line\">            low[x] = <span class=\"built_in\">min</span>(low[x], low[nxt]); <span class=\"comment\">//维护 $x$ 能达到的最小时间戳 $low_X$</span></span><br><span class=\"line\">            cnt++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (low[nxt] &gt;= dfn[x]) <span class=\"comment\">//$x$ 可能是割点</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (x != root || cnt &gt;= <span class=\"number\">2</span>) <span class=\"comment\">//排除根 结点只有 $1$个子 结点</span></span><br><span class=\"line\">                    cut[x] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"comment\">//$nxt$ 去过，所以 $nxt$ 还没有回溯，不能用 $low_nxt$</span></span><br><span class=\"line\">            low[x] = <span class=\"built_in\">min</span>(low[x], dfn[nxt]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>割边</p>\n<ul>\n<li>\n<p>在无向图中，若删除 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 条边 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">e</span></span></span></span> 后，连通块的数量增加，那么称 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">e</span></span></span></span> 为一条割边。</p>\n</li>\n<li>\n<p>性质：割边一定不在环上，在环上的边一定不是割边。</p>\n</li>\n<li>\n<p>割边涉及的通常是“必经边”的问题。</p>\n</li>\n<li>\n<p>不用证明：割边删除后，恰好增加 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个连通块。</p>\n</li>\n<li>\n<p>割边的判定</p>\n<ul>\n<li>\n<p>维护 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>f</mi><msub><mi>n</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">dfn_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>w</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">low_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 之后，对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的连边，若 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>w</mi><mi>y</mi></msub><mo>&gt;</mo><mi>d</mi><mi>f</mi><msub><mi>n</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">low_y &gt; dfn_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，则 <code>bridge[i] = bridge[i^1] = true</code>（对于链式前向星的方法）。</p>\n</li>\n<li>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e6</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dfn[N], low[N], num, ans;</span><br><span class=\"line\"><span class=\"type\">bool</span> cut[N];</span><br><span class=\"line\">vector&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;nbr[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">tarjan</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> edge)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdfn[x] = low[x] = ++num;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])<span class=\"comment\">//这里的 $w$ 不是权值，是边的编号</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[nxt])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(nxt, w);</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], low[nxt]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (low[nxt] &gt; dfn[x])</span><br><span class=\"line\">\t\t\t\tcut[w] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (w != edge)</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], dfn[nxt]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y, z = i;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,z &#125;);</span><br><span class=\"line\">\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,z &#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[i])</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(i, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\tans += cut[i];</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\"></a> 例题</h3>\n<h4 id=\"洛谷p3388\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3388\"></a> 洛谷P3388</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P3388\">P3388 【模板】割点（割顶）</a></p>\n<p>题意：给出一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个点，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 条边的无向图，求图的割点。</p>\n<h4 id=\"cf22c\"><a class=\"markdownIt-Anchor\" href=\"#cf22c\"></a> CF22C</h4>\n<p>题意：构造 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 条边的无向连通图，且无重边，点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 必须是割点。需特判无解。</p>\n<ol>\n<li>有解时，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 一定有上界和下界，下届为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>≥</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">m \\ge n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>；</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 已经连接了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个点，不能有重边，因此 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 不能再连边，视为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 不存在；</li>\n<li>为了保证容纳的边尽可能多，要尽量连完全图，且不能破坏 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 的割点特征；</li>\n<li>留 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个单点只跟 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 保持连边，剩下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n-2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 个点构造完全图即可；</li>\n<li>上界 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>≤</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>+</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">m \\le n-1+ (n-2)\\times(n-3)/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord\">2</span></span></span></span>。</li>\n</ol>\n<p>代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, v;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> print(x, y) cout &lt;&lt; x &lt;&lt; <span class=\"string\">&#x27; &#x27;</span> &lt;&lt; y &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m &gt;&gt; v;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (m &lt; n - <span class=\"number\">1</span> || m &gt; n - <span class=\"number\">1</span> + (n - <span class=\"number\">2</span>) * (n - <span class=\"number\">3</span>) / <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tm -= n - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (v == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">print</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">print</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">3</span>; i &lt; n; i++)</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">print</span>(i, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">3</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">2</span>; j &lt;= n; j++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (m--)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">print</span>(i, j);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">goto</span> end;<span class=\"comment\">//不建议使用 `goto`，我是为了方便。</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">4</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (m--)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">print</span>(i, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">goto</span> end;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt; n; i++)</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">print</span>(i, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">print</span>(<span class=\"number\">1</span>, v);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">2</span>; j &lt;= n; j++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (m--)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">print</span>(i, j);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">goto</span> end;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tend:;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"洛谷p3469\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3469\"></a> 洛谷P3469</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P3469\">P3469 BLO-Blockade</a></p>\n<p>题意：对于每个结点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 求出，把与结点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 关联的所有边去掉以后（不去掉结点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 本身），无向图有多少个有序点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x,y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>，满足 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 不连通。</p>\n<ul>\n<li>一个点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>，如果是不是割点，那么贡献一定是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>÷</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">(n-2) \\div 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">÷</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>；否则贡献是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>z</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>z</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><msub><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub></mrow></msub><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">(n-1)+(z+1)(n-z-1)+\\sum_{y = A_i}{y(n-y)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.185818em;vertical-align:-0.43581800000000004em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></span>。其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为 结点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 满足：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的子 结点，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 之前没有访问过且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>w</mi><mi>i</mi></msub><mo>≥</mo><mi>d</mi><mi>f</mi><msub><mi>n</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">low_i \\ge dfn_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>；<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> 为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sum a_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dfn[N], low[N], num, root, ans[N], sum[N];</span><br><span class=\"line\"><span class=\"type\">bool</span> cut[N];</span><br><span class=\"line\">vector&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;nbr[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">tarjan</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdfn[x] = low[x] = ++num;</span><br><span class=\"line\">\tsum[x] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> cnt = <span class=\"number\">0</span>, tot = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[nxt])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(nxt);</span><br><span class=\"line\">\t\t\tsum[x] += sum[nxt];</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], low[nxt]);</span><br><span class=\"line\">\t\t\tcnt++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (low[nxt] &gt;= dfn[x])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tans[x] += sum[nxt] * (n - sum[nxt]);</span><br><span class=\"line\">\t\t\t\ttot += sum[nxt];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (x != root || cnt &gt;= <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\t\t\tcut[x] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], dfn[nxt]);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!cut[x])</span><br><span class=\"line\">\t\tans[x] = <span class=\"number\">2</span> * (n - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\tans[x] += (n - tot - <span class=\"number\">1</span>) * (tot + <span class=\"number\">1</span>) + (n - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y, z = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,z &#125;);</span><br><span class=\"line\">\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,z &#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[i])</span><br><span class=\"line\">\t\t\troot = i, <span class=\"built_in\">tarjan</span>(i);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcout &lt;&lt; ans[i] &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"洛谷p1656\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1656\"></a> 洛谷P1656</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P1656\">P1656 炸铁路</a></p>\n<p>题意：求割边，模板题。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dfn[N], low[N], num, ans, cnt;</span><br><span class=\"line\"><span class=\"type\">bool</span> cut[N];</span><br><span class=\"line\">vector&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;nbr[N];</span><br><span class=\"line\">pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;a[N], b[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">tarjan</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> edge)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdfn[x] = low[x] = ++num;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[nxt])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(nxt, w);</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], low[nxt]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (low[nxt] &gt; dfn[x])</span><br><span class=\"line\">\t\t\t\tcut[w] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (w != edge)</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], dfn[nxt]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y, z = i;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,z &#125;);</span><br><span class=\"line\">\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,z &#125;);</span><br><span class=\"line\">\t\ta[i] = &#123; <span class=\"built_in\">min</span>(x,y),<span class=\"built_in\">max</span>(x,y) &#125;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[i])</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(i, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (cut[i])</span><br><span class=\"line\">\t\t\tb[++cnt] = a[i];</span><br><span class=\"line\">\t<span class=\"built_in\">sort</span>(b + <span class=\"number\">1</span>, b + <span class=\"number\">1</span> + cnt);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= cnt; i++)</span><br><span class=\"line\">\t\tcout &lt;&lt; b[i].first &lt;&lt; <span class=\"string\">&#x27; &#x27;</span> &lt;&lt; b[i].second &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"洛谷p7687\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p7687\"></a> 洛谷P7687</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P7687\">P1656</a></p>\n<ol>\n<li>初始时，所有点都能访问 A 和 B 类服务；</li>\n<li>如果一条边，非割边，意味着在环上，删除后不改变连通性，不可能是关键边；</li>\n<li>关键边应该是割边的一个子集；</li>\n<li>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的连边，两侧不能出现没有 A 或者没有 B 类服务的点；</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"comment\">//#define int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e6</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dfn[N], low[N], num, ans, a[N], b[N], k, l;</span><br><span class=\"line\"><span class=\"type\">bool</span> cut[N], vis[N];</span><br><span class=\"line\">vector&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;nbr[N];</span><br><span class=\"line\">pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;c[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">tarjan</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> edge)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdfn[x] = low[x] = ++num;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[nxt])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(nxt, w);</span><br><span class=\"line\">\t\t\ta[x] += a[nxt];</span><br><span class=\"line\">\t\t\tb[x] += b[nxt];</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], low[nxt]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (low[nxt] &gt; dfn[x])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcut[w] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">max</span>(a[nxt], k - a[nxt]) == k || <span class=\"built_in\">max</span>(b[nxt], l - b[nxt]) == l)</span><br><span class=\"line\">\t\t\t\t\tvis[w] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (w != edge)</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], dfn[nxt]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m &gt;&gt; k &gt;&gt; l;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= k; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\ta[x] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= l; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\tb[x] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y, z = i;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,z &#125;);</span><br><span class=\"line\">\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,z &#125;);</span><br><span class=\"line\">\t\tc[i] = &#123; x,y &#125;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[i])</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(i, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\tans += vis[i];</span><br><span class=\"line\">\tcout &lt;&lt; ans &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (vis[i])</span><br><span class=\"line\">\t\t\tcout &lt;&lt; c[i].first &lt;&lt; <span class=\"string\">&#x27; &#x27;</span> &lt;&lt; c[i].second &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"边双连通分量\"><a class=\"markdownIt-Anchor\" href=\"#边双连通分量\"></a> 边双连通分量</h2>\n<ul>\n<li>边双连通：若无向图中点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 在删除任意连边后，仍然连通，称 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 是边双连通的；</li>\n<li>边双连通分量：若无向图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 中，存在一个极大子图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>G</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">G&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>G</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">G&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> 中没有割边，那么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>G</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">G&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> 是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 的一个边双连通分量记为 E-DCC；</li>\n</ul>\n<h3 id=\"例题-2\"><a class=\"markdownIt-Anchor\" href=\"#例题-2\"></a> 例题</h3>\n<h4 id=\"洛谷t103489\"><a class=\"markdownIt-Anchor\" href=\"#洛谷t103489\"></a> 洛谷T103489</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/T103489\">T103489 【模板】边双连通分量</a></p>\n<p>题意：给定一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 条边的无向图，求边双连通分量（e-dcc）数量。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">3e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dfn[N], low[N], num, ans, cnt, dcc[N], id;</span><br><span class=\"line\"><span class=\"type\">bool</span> cut[N];</span><br><span class=\"line\">vector&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;nbr[N];</span><br><span class=\"line\">pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;a[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">tarjan</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> edge)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdfn[x] = low[x] = ++num;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[nxt])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(nxt, w);</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], low[nxt]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (low[nxt] &gt; dfn[x])</span><br><span class=\"line\">\t\t\t\tcut[w] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (w != edge)</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], dfn[nxt]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdcc[x] = id;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dcc[nxt] &amp;&amp; !cut[w])</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">dfs</span>(nxt);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y, z = i;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,z &#125;);</span><br><span class=\"line\">\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,z &#125;);</span><br><span class=\"line\">\t\ta[i] = &#123; <span class=\"built_in\">min</span>(x,y),<span class=\"built_in\">max</span>(x,y) &#125;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[i])</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(i, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dcc[i])</span><br><span class=\"line\">\t\t\tid++, <span class=\"built_in\">dfs</span>(i);</span><br><span class=\"line\">\tcout &lt;&lt; id;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"cf51f\"><a class=\"markdownIt-Anchor\" href=\"#cf51f\"></a> CF51F</h4>\n<ol>\n<li>图可能不连通，视为多个毛毛虫的拼接，每两个操作 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 次；</li>\n<li>对于一张连通图， 缩边双连通分量变为一棵树；</li>\n<li>对于一棵树，操作叶子结点不会比操作叶子的父结点更优，所以叶子结点保留；</li>\n<li>保留的主链越长越好，取树的直径最优，设长度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">len</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span></span></span></span>，且子结点为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>n</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">cnt</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span></span></span></span> 个，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo>−</mo><mi>c</mi><mi>n</mi><mi>t</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n-len-cnt+2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>；</li>\n<li>设一个边双的结点数为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">size</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord mathnormal\">e</span></span></span></span>，一个边双需要操作 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">size-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 次；</li>\n</ol>\n<h2 id=\"点双连通分量\"><a class=\"markdownIt-Anchor\" href=\"#点双连通分量\"></a> 点双连通分量</h2>\n<ul>\n<li>\n<p>点双连通：无向图中，若点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>，在删除任一点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>≠</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>z</mi><mo>≠</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">z\\not=x, z\\not=y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>）后，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 仍然连通，那么称点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 是点双连通的。</p>\n</li>\n<li>\n<p>点双连通分量：无向图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 中，若存在极大子图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>G</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">G&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>G</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">G&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> 中没有割点，那么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>G</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">G&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> 称之为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 的一个点双连通分量，记为 V-DCC。</p>\n</li>\n</ul>\n<p>推论：</p>\n<ul>\n<li>\n<p>边双连通分量由割边连接，所以一个点只能在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个 E-DCC 里；</p>\n</li>\n<li>\n<p>点双连通分量由割点链接，而 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个点可以链接多条边，因此 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个点可以在多个 V-DCC 里；</p>\n</li>\n<li>\n<p>若 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个点在超过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个 V-DCC 中，则该点一定是割点；</p>\n</li>\n<li>\n<p>当研究一个 V-DCC 时，其内部没有“割点”，当研究整个图时，多个 V-DCC 的交点就是割点；</p>\n</li>\n<li>\n<p>一条边只能在一个 V-DCC 中。</p>\n</li>\n</ul>\n<h3 id=\"例题-3\"><a class=\"markdownIt-Anchor\" href=\"#例题-3\"></a> 例题</h3>\n<h4 id=\"洛谷p8435\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p8435\"></a> 洛谷P8435</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P8435\">P8435 【模板】点双连通分量</a></p>\n<p>题意：对于一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个节点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 条无向边的图，请输出其点双连通分量的个数，并且输出每个点双连通分量。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">2e6</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dfn[N], low[N], num, root, cnt;</span><br><span class=\"line\"><span class=\"type\">bool</span> cut[N];</span><br><span class=\"line\">vector&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;nbr[N];</span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt;dcc[N];</span><br><span class=\"line\">stack&lt;<span class=\"type\">int</span>&gt;q;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">tarjan</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdfn[x] = low[x] = ++num;</span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(x);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x == root &amp;&amp; !nbr[x].<span class=\"built_in\">size</span>())<span class=\"comment\">//x是单点</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tdcc[++cnt].<span class=\"built_in\">push_back</span>(x);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"type\">int</span> tot = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[nxt])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(nxt);</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], low[nxt]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (low[nxt] &gt;= dfn[x])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\ttot++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (x != root || tot &gt;= <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\t\t\tcut[x] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> tmp = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\tcnt++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (!q.<span class=\"built_in\">empty</span>() &amp;&amp; tmp != nxt)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\ttmp = q.<span class=\"built_in\">top</span>();</span><br><span class=\"line\">\t\t\t\t\tq.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">\t\t\t\t\tdcc[cnt].<span class=\"built_in\">push_back</span>(tmp);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tdcc[cnt].<span class=\"built_in\">push_back</span>(x);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], dfn[nxt]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y, z = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (x == y)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,z &#125;);</span><br><span class=\"line\">\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,z &#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[i])</span><br><span class=\"line\">\t\t\troot = i, <span class=\"built_in\">tarjan</span>(i);</span><br><span class=\"line\">\tcout &lt;&lt; cnt &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= cnt; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; dcc[i].<span class=\"built_in\">size</span>() &lt;&lt; <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; x : dcc[i])</span><br><span class=\"line\">\t\t\tcout &lt;&lt; x &lt;&lt; <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"<h1 id=\"连通性问题\"><a class=\"markdownIt-Anchor\" href=\"#连通性问题\"></a> 连通性问题</h1>\n<blockquote>\n<p>tarjan：连通性问题永远的神。</p>\n</blockquote>\n<h2 id=\"双连通与割点-割边\"><a class=\"markdownIt-Anchor\" href=\"#双连通与割点-割边\"></a> 双连通与割点、割边</h2>\n<ul>\n<li>\n<p>点双连通：在无向图中，删除一个点（不是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>）后，点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 仍然能够彼此到达，那么称 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 是点双连通的；</p>\n</li>\n<li>\n<p>边双连通：在无向图中，删除一条边后，点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 仍然能够彼此到达，那么称 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 是边双连通的；</p>\n</li>\n<li>\n<p>性质 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>： 点双连通不具有传递性，但边双连通具有传递性；</p>\n</li>\n</ul>","more":"<ul>\n<li>\n<p>割点</p>\n<ul>\n<li>\n<p>在无向图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 中，若删除 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 后，连通块的数量增加，则 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 称为无向图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 的一个割点（割顶）。</p>\n</li>\n<li>\n<p>结论：至少有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span> 个点的无向图，才<strong>可能</strong>存在割点；</p>\n</li>\n<li>\n<p>割点的判定</p>\n<ul>\n<li>若搜索树中，有从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的连边，当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>w</mi><mi>y</mi></msub><mo>≥</mo><mi>d</mi><mi>f</mi><msub><mi>n</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">low_y \\ge dfn_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 时，说明 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 能到达的最小时间戳在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的时间戳之上，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 被 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 与 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 之前的结点“隔开”，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 可能是割点。只要 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 不是搜索树的根结点，或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 是根结点，但是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的子结点大于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个，那么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 就是割点。</li>\n<li>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">tarjan</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    dfn[x] = low[x] = ++num; <span class=\"comment\">//打时间戳</span></span><br><span class=\"line\">    <span class=\"type\">int</span> cnt = <span class=\"number\">0</span>; <span class=\"comment\">//统计子 结点个数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!dfn[nxt]) <span class=\"comment\">//没去过 $nxt$</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">tarjan</span>(nxt); <span class=\"comment\">//递归查找</span></span><br><span class=\"line\">            low[x] = <span class=\"built_in\">min</span>(low[x], low[nxt]); <span class=\"comment\">//维护 $x$ 能达到的最小时间戳 $low_X$</span></span><br><span class=\"line\">            cnt++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (low[nxt] &gt;= dfn[x]) <span class=\"comment\">//$x$ 可能是割点</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (x != root || cnt &gt;= <span class=\"number\">2</span>) <span class=\"comment\">//排除根 结点只有 $1$个子 结点</span></span><br><span class=\"line\">                    cut[x] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"comment\">//$nxt$ 去过，所以 $nxt$ 还没有回溯，不能用 $low_nxt$</span></span><br><span class=\"line\">            low[x] = <span class=\"built_in\">min</span>(low[x], dfn[nxt]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>割边</p>\n<ul>\n<li>\n<p>在无向图中，若删除 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 条边 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">e</span></span></span></span> 后，连通块的数量增加，那么称 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">e</span></span></span></span> 为一条割边。</p>\n</li>\n<li>\n<p>性质：割边一定不在环上，在环上的边一定不是割边。</p>\n</li>\n<li>\n<p>割边涉及的通常是“必经边”的问题。</p>\n</li>\n<li>\n<p>不用证明：割边删除后，恰好增加 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个连通块。</p>\n</li>\n<li>\n<p>割边的判定</p>\n<ul>\n<li>\n<p>维护 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>f</mi><msub><mi>n</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">dfn_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>w</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">low_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 之后，对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的连边，若 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>w</mi><mi>y</mi></msub><mo>&gt;</mo><mi>d</mi><mi>f</mi><msub><mi>n</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">low_y &gt; dfn_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，则 <code>bridge[i] = bridge[i^1] = true</code>（对于链式前向星的方法）。</p>\n</li>\n<li>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e6</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dfn[N], low[N], num, ans;</span><br><span class=\"line\"><span class=\"type\">bool</span> cut[N];</span><br><span class=\"line\">vector&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;nbr[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">tarjan</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> edge)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdfn[x] = low[x] = ++num;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])<span class=\"comment\">//这里的 $w$ 不是权值，是边的编号</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[nxt])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(nxt, w);</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], low[nxt]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (low[nxt] &gt; dfn[x])</span><br><span class=\"line\">\t\t\t\tcut[w] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (w != edge)</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], dfn[nxt]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y, z = i;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,z &#125;);</span><br><span class=\"line\">\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,z &#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[i])</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(i, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\tans += cut[i];</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\"></a> 例题</h3>\n<h4 id=\"洛谷p3388\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3388\"></a> 洛谷P3388</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P3388\">P3388 【模板】割点（割顶）</a></p>\n<p>题意：给出一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个点，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 条边的无向图，求图的割点。</p>\n<h4 id=\"cf22c\"><a class=\"markdownIt-Anchor\" href=\"#cf22c\"></a> CF22C</h4>\n<p>题意：构造 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 条边的无向连通图，且无重边，点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 必须是割点。需特判无解。</p>\n<ol>\n<li>有解时，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 一定有上界和下界，下届为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>≥</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">m \\ge n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>；</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 已经连接了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个点，不能有重边，因此 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 不能再连边，视为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 不存在；</li>\n<li>为了保证容纳的边尽可能多，要尽量连完全图，且不能破坏 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 的割点特征；</li>\n<li>留 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个单点只跟 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 保持连边，剩下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n-2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 个点构造完全图即可；</li>\n<li>上界 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>≤</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>+</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">m \\le n-1+ (n-2)\\times(n-3)/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord\">2</span></span></span></span>。</li>\n</ol>\n<p>代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, v;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> print(x, y) cout &lt;&lt; x &lt;&lt; <span class=\"string\">&#x27; &#x27;</span> &lt;&lt; y &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m &gt;&gt; v;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (m &lt; n - <span class=\"number\">1</span> || m &gt; n - <span class=\"number\">1</span> + (n - <span class=\"number\">2</span>) * (n - <span class=\"number\">3</span>) / <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tm -= n - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (v == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">print</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">print</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">3</span>; i &lt; n; i++)</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">print</span>(i, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">3</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">2</span>; j &lt;= n; j++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (m--)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">print</span>(i, j);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">goto</span> end;<span class=\"comment\">//不建议使用 `goto`，我是为了方便。</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">4</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (m--)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">print</span>(i, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">goto</span> end;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt; n; i++)</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">print</span>(i, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">print</span>(<span class=\"number\">1</span>, v);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">2</span>; j &lt;= n; j++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (m--)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">print</span>(i, j);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">goto</span> end;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tend:;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"洛谷p3469\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3469\"></a> 洛谷P3469</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P3469\">P3469 BLO-Blockade</a></p>\n<p>题意：对于每个结点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 求出，把与结点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 关联的所有边去掉以后（不去掉结点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 本身），无向图有多少个有序点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x,y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>，满足 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 不连通。</p>\n<ul>\n<li>一个点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>，如果是不是割点，那么贡献一定是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>÷</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">(n-2) \\div 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">÷</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>；否则贡献是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>z</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>z</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><msub><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub></mrow></msub><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">(n-1)+(z+1)(n-z-1)+\\sum_{y = A_i}{y(n-y)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.185818em;vertical-align:-0.43581800000000004em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></span>。其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为 结点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 满足：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的子 结点，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 之前没有访问过且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>w</mi><mi>i</mi></msub><mo>≥</mo><mi>d</mi><mi>f</mi><msub><mi>n</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">low_i \\ge dfn_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>；<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> 为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sum a_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dfn[N], low[N], num, root, ans[N], sum[N];</span><br><span class=\"line\"><span class=\"type\">bool</span> cut[N];</span><br><span class=\"line\">vector&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;nbr[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">tarjan</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdfn[x] = low[x] = ++num;</span><br><span class=\"line\">\tsum[x] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> cnt = <span class=\"number\">0</span>, tot = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[nxt])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(nxt);</span><br><span class=\"line\">\t\t\tsum[x] += sum[nxt];</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], low[nxt]);</span><br><span class=\"line\">\t\t\tcnt++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (low[nxt] &gt;= dfn[x])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tans[x] += sum[nxt] * (n - sum[nxt]);</span><br><span class=\"line\">\t\t\t\ttot += sum[nxt];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (x != root || cnt &gt;= <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\t\t\tcut[x] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], dfn[nxt]);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!cut[x])</span><br><span class=\"line\">\t\tans[x] = <span class=\"number\">2</span> * (n - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\tans[x] += (n - tot - <span class=\"number\">1</span>) * (tot + <span class=\"number\">1</span>) + (n - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y, z = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,z &#125;);</span><br><span class=\"line\">\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,z &#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[i])</span><br><span class=\"line\">\t\t\troot = i, <span class=\"built_in\">tarjan</span>(i);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcout &lt;&lt; ans[i] &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"洛谷p1656\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p1656\"></a> 洛谷P1656</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P1656\">P1656 炸铁路</a></p>\n<p>题意：求割边，模板题。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dfn[N], low[N], num, ans, cnt;</span><br><span class=\"line\"><span class=\"type\">bool</span> cut[N];</span><br><span class=\"line\">vector&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;nbr[N];</span><br><span class=\"line\">pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;a[N], b[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">tarjan</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> edge)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdfn[x] = low[x] = ++num;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[nxt])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(nxt, w);</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], low[nxt]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (low[nxt] &gt; dfn[x])</span><br><span class=\"line\">\t\t\t\tcut[w] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (w != edge)</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], dfn[nxt]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y, z = i;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,z &#125;);</span><br><span class=\"line\">\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,z &#125;);</span><br><span class=\"line\">\t\ta[i] = &#123; <span class=\"built_in\">min</span>(x,y),<span class=\"built_in\">max</span>(x,y) &#125;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[i])</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(i, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (cut[i])</span><br><span class=\"line\">\t\t\tb[++cnt] = a[i];</span><br><span class=\"line\">\t<span class=\"built_in\">sort</span>(b + <span class=\"number\">1</span>, b + <span class=\"number\">1</span> + cnt);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= cnt; i++)</span><br><span class=\"line\">\t\tcout &lt;&lt; b[i].first &lt;&lt; <span class=\"string\">&#x27; &#x27;</span> &lt;&lt; b[i].second &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"洛谷p7687\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p7687\"></a> 洛谷P7687</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P7687\">P1656</a></p>\n<ol>\n<li>初始时，所有点都能访问 A 和 B 类服务；</li>\n<li>如果一条边，非割边，意味着在环上，删除后不改变连通性，不可能是关键边；</li>\n<li>关键边应该是割边的一个子集；</li>\n<li>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的连边，两侧不能出现没有 A 或者没有 B 类服务的点；</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"comment\">//#define int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e6</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dfn[N], low[N], num, ans, a[N], b[N], k, l;</span><br><span class=\"line\"><span class=\"type\">bool</span> cut[N], vis[N];</span><br><span class=\"line\">vector&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;nbr[N];</span><br><span class=\"line\">pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;c[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">tarjan</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> edge)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdfn[x] = low[x] = ++num;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[nxt])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(nxt, w);</span><br><span class=\"line\">\t\t\ta[x] += a[nxt];</span><br><span class=\"line\">\t\t\tb[x] += b[nxt];</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], low[nxt]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (low[nxt] &gt; dfn[x])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcut[w] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">max</span>(a[nxt], k - a[nxt]) == k || <span class=\"built_in\">max</span>(b[nxt], l - b[nxt]) == l)</span><br><span class=\"line\">\t\t\t\t\tvis[w] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (w != edge)</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], dfn[nxt]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m &gt;&gt; k &gt;&gt; l;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= k; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\ta[x] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= l; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\tb[x] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y, z = i;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,z &#125;);</span><br><span class=\"line\">\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,z &#125;);</span><br><span class=\"line\">\t\tc[i] = &#123; x,y &#125;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[i])</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(i, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\tans += vis[i];</span><br><span class=\"line\">\tcout &lt;&lt; ans &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (vis[i])</span><br><span class=\"line\">\t\t\tcout &lt;&lt; c[i].first &lt;&lt; <span class=\"string\">&#x27; &#x27;</span> &lt;&lt; c[i].second &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"边双连通分量\"><a class=\"markdownIt-Anchor\" href=\"#边双连通分量\"></a> 边双连通分量</h2>\n<ul>\n<li>边双连通：若无向图中点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 在删除任意连边后，仍然连通，称 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 是边双连通的；</li>\n<li>边双连通分量：若无向图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 中，存在一个极大子图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>G</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">G&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>G</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">G&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> 中没有割边，那么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>G</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">G&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> 是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 的一个边双连通分量记为 E-DCC；</li>\n</ul>\n<h3 id=\"例题-2\"><a class=\"markdownIt-Anchor\" href=\"#例题-2\"></a> 例题</h3>\n<h4 id=\"洛谷t103489\"><a class=\"markdownIt-Anchor\" href=\"#洛谷t103489\"></a> 洛谷T103489</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/T103489\">T103489 【模板】边双连通分量</a></p>\n<p>题意：给定一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 条边的无向图，求边双连通分量（e-dcc）数量。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">3e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dfn[N], low[N], num, ans, cnt, dcc[N], id;</span><br><span class=\"line\"><span class=\"type\">bool</span> cut[N];</span><br><span class=\"line\">vector&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;nbr[N];</span><br><span class=\"line\">pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;a[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">tarjan</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> edge)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdfn[x] = low[x] = ++num;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[nxt])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(nxt, w);</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], low[nxt]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (low[nxt] &gt; dfn[x])</span><br><span class=\"line\">\t\t\t\tcut[w] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (w != edge)</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], dfn[nxt]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdcc[x] = id;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dcc[nxt] &amp;&amp; !cut[w])</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">dfs</span>(nxt);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y, z = i;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,z &#125;);</span><br><span class=\"line\">\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,z &#125;);</span><br><span class=\"line\">\t\ta[i] = &#123; <span class=\"built_in\">min</span>(x,y),<span class=\"built_in\">max</span>(x,y) &#125;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[i])</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(i, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dcc[i])</span><br><span class=\"line\">\t\t\tid++, <span class=\"built_in\">dfs</span>(i);</span><br><span class=\"line\">\tcout &lt;&lt; id;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"cf51f\"><a class=\"markdownIt-Anchor\" href=\"#cf51f\"></a> CF51F</h4>\n<ol>\n<li>图可能不连通，视为多个毛毛虫的拼接，每两个操作 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 次；</li>\n<li>对于一张连通图， 缩边双连通分量变为一棵树；</li>\n<li>对于一棵树，操作叶子结点不会比操作叶子的父结点更优，所以叶子结点保留；</li>\n<li>保留的主链越长越好，取树的直径最优，设长度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">len</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span></span></span></span>，且子结点为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>n</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">cnt</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span></span></span></span> 个，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo>−</mo><mi>c</mi><mi>n</mi><mi>t</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n-len-cnt+2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>；</li>\n<li>设一个边双的结点数为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">size</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord mathnormal\">e</span></span></span></span>，一个边双需要操作 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">size-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 次；</li>\n</ol>\n<h2 id=\"点双连通分量\"><a class=\"markdownIt-Anchor\" href=\"#点双连通分量\"></a> 点双连通分量</h2>\n<ul>\n<li>\n<p>点双连通：无向图中，若点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>，在删除任一点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>≠</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>z</mi><mo>≠</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">z\\not=x, z\\not=y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>）后，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 仍然连通，那么称点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 是点双连通的。</p>\n</li>\n<li>\n<p>点双连通分量：无向图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 中，若存在极大子图 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>G</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">G&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>G</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">G&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> 中没有割点，那么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>G</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">G&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> 称之为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 的一个点双连通分量，记为 V-DCC。</p>\n</li>\n</ul>\n<p>推论：</p>\n<ul>\n<li>\n<p>边双连通分量由割边连接，所以一个点只能在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个 E-DCC 里；</p>\n</li>\n<li>\n<p>点双连通分量由割点链接，而 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个点可以链接多条边，因此 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个点可以在多个 V-DCC 里；</p>\n</li>\n<li>\n<p>若 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个点在超过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个 V-DCC 中，则该点一定是割点；</p>\n</li>\n<li>\n<p>当研究一个 V-DCC 时，其内部没有“割点”，当研究整个图时，多个 V-DCC 的交点就是割点；</p>\n</li>\n<li>\n<p>一条边只能在一个 V-DCC 中。</p>\n</li>\n</ul>\n<h3 id=\"例题-3\"><a class=\"markdownIt-Anchor\" href=\"#例题-3\"></a> 例题</h3>\n<h4 id=\"洛谷p8435\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p8435\"></a> 洛谷P8435</h4>\n<p><a href=\"https://www.luogu.com.cn/problem/P8435\">P8435 【模板】点双连通分量</a></p>\n<p>题意：对于一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个节点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 条无向边的图，请输出其点双连通分量的个数，并且输出每个点双连通分量。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">2e6</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dfn[N], low[N], num, root, cnt;</span><br><span class=\"line\"><span class=\"type\">bool</span> cut[N];</span><br><span class=\"line\">vector&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;nbr[N];</span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt;dcc[N];</span><br><span class=\"line\">stack&lt;<span class=\"type\">int</span>&gt;q;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">tarjan</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdfn[x] = low[x] = ++num;</span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(x);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x == root &amp;&amp; !nbr[x].<span class=\"built_in\">size</span>())<span class=\"comment\">//x是单点</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tdcc[++cnt].<span class=\"built_in\">push_back</span>(x);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"type\">int</span> tot = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; [nxt, w] : nbr[x])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[nxt])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">tarjan</span>(nxt);</span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], low[nxt]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (low[nxt] &gt;= dfn[x])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\ttot++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (x != root || tot &gt;= <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\t\t\tcut[x] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> tmp = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\tcnt++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (!q.<span class=\"built_in\">empty</span>() &amp;&amp; tmp != nxt)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\ttmp = q.<span class=\"built_in\">top</span>();</span><br><span class=\"line\">\t\t\t\t\tq.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">\t\t\t\t\tdcc[cnt].<span class=\"built_in\">push_back</span>(tmp);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tdcc[cnt].<span class=\"built_in\">push_back</span>(x);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tlow[x] = <span class=\"built_in\">min</span>(low[x], dfn[nxt]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y, z = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (x == y)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\tnbr[x].<span class=\"built_in\">push_back</span>(&#123; y,z &#125;);</span><br><span class=\"line\">\t\tnbr[y].<span class=\"built_in\">push_back</span>(&#123; x,z &#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!dfn[i])</span><br><span class=\"line\">\t\t\troot = i, <span class=\"built_in\">tarjan</span>(i);</span><br><span class=\"line\">\tcout &lt;&lt; cnt &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= cnt; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; dcc[i].<span class=\"built_in\">size</span>() &lt;&lt; <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; x : dcc[i])</span><br><span class=\"line\">\t\t\tcout &lt;&lt; x &lt;&lt; <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"状压DP（二）","hot":true,"new":true,"date":"2025-05-03T13:00:00.000Z","_content":"\n# 状压DP（二）\n\n## 洛谷P3092\n\n[P3092 [USACO13NOV] No Change G](https://www.luogu.com.cn/problem/P3092)\n\n这道题，我们一般定义 $dp_{i,j}$ 为硬币使用了二进制下的 $i$，付到第 $j$ 个人的最多剩下多少钱。\n\n不过 $2^{16}\\times 10^5=6,553,600,000$，会超过空间限制。\n\n我们发现“最多剩下多少钱”没有用，因为可以通过使用情况算出。\n\n定义新的状态 $dp_{i}$ 表示硬币使用了二进制下的 $i$ 的最多能付到的人，可以通过前缀和加二分优化计算。\n\n<!-- more -->\n\n答案需要枚举。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, dp[1 << 16], a[N], b[N], sum[N], sum1, ans = -1;\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++)\n\t\tcin >> a[i], sum1 += a[i];\n\tfor (int i = 1; i <= m; i++)\n\t\tcin >> b[i], sum[i] = sum[i - 1] + b[i];\n\tfor (int i = 1; i < (1 << n); i++)\n\t{\n\t\tint sum2 = 0;\n\t\tfor (int j = 0; j < n; j++)\n\t\t\tif ((i >> j) & 1)\n\t\t\t{\n\t\t\t\tint& tmp = dp[i ^ (1 << j)];\n\t\t\t\tint l = tmp - 1, r = m + 1;\n\t\t\t\twhile (l + 1 < r)\n\t\t\t\t{\n\t\t\t\t\tint mid = (l + r) >> 1;\n\t\t\t\t\tif (sum[mid] - sum[tmp] <= a[j])\n\t\t\t\t\t\tl = mid;\n\t\t\t\t\telse\n\t\t\t\t\t\tr = mid;\n\t\t\t\t}\n\t\t\t\tdp[i] = max(dp[i], l);\n\t\t\t\tsum2 += a[j];\n\t\t\t}\n\t\tif (dp[i] == m)\n\t\t\tans = max(ans, sum1 - sum2);\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```\n\n## 洛谷P5911\n\n[P5911 [POI 2004] PRZ - 洛谷](https://www.luogu.com.cn/problem/P5911)\n\n定义 $dp_i$ 表示已经过桥的队员为二进制下的 $i$ 的最小过桥时间。\n\n状态转移：\n\n```cpp\nfor (int i = 1; i < (1 << n); i++)\n    for (int j = 1; j < (1 << n); j++)\n        if ((i & j) == j && sum[j] <= m)\n            dp[i] = min(dp[i], dp[i ^ j] + maxi[j]);\n```\n\n答案为 $dp_{2^n-1}$。\n\n时间复杂度为 $O(4^n)$。\n\n等一等，$4^{16}=4,294,967,296\\gt \\text{一秒内可以跑的循环次数}$。\n\n考虑优化，如何不枚举无效状态（也就是只枚举子集）？\n\n```cpp\nfor (int i = 1; i < (1 << n); i++)\n    for (int j = i; j; j = (j - 1) & i)\n```\n\n为什么正确？\n\n可以通过模拟验证：\n\n> 设 $i={(114)}_{10}={(01110010)}_2$。\n>\n> 第二次枚举时， $j=\\left({(01110010)}_2-1\\right)\\operatorname{and}{(01110010)}_2={(01110000)}_2$。\n>\n> 第三次枚举时， $j=\\left({(01110000)}_2-1\\right)\\operatorname{and}{(01110010)}_2={(01101111)}_2\\operatorname{and}{(01110010)}_2={(01100010)}_2$。\n>\n> $\\cdots$\n>\n> 以此类推。\n>\n> 我们发现下枚举总是小于这一次的最大的有效状态。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 16 + 5;\nint n, m, dp[1 << 16], a[N], b[N], sum[1 << 16], maxi[1 << 16];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> m >> n;\n\tmemset(dp, 0x3f, sizeof dp);\n\tdp[0] = 0;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tcin >> a[i] >> b[i];\n\t\tfor (int j = 1; j < (1 << n); j++)\n\t\t\tif ((j >> i) & 1)\n\t\t\t\tsum[j] += b[i], maxi[j] = max(maxi[j], a[i]);\n\t}\n\tfor (int i = 1; i < (1 << n); i++)\n\t\tfor (int j = i; j; j = (j - 1) & i)\n\t\t\tif (sum[j] <= m)\n\t\t\t\tdp[i] = min(dp[i], dp[i ^ j] + maxi[j]);\n\tcout << dp[(1 << n) - 1];\n\treturn 0;\n}\n```\n\n时间复杂度 $O(3^n)$。\n\n为什么？\n\n证明方法一：\n\n> 每个队员有以下可以枚举的状态：\n>\n> 1. 没有；\n> 2. $i$ 中有；\n> 3. $i,j$ 中都有。\n>\n> 因此是 $O(3^n)$\n\n证明方法二：\n\n> 前置知识：\n>\n> > [二项式定理](https://oi-wiki.org/math/combinatorics/combination/#%E4%BA%8C%E9%A1%B9%E5%BC%8F%E5%AE%9A%E7%90%86)：\n> >\n> > $$\\displaystyle(x+y)^n=\\sum^n_{i=0}\\operatorname{C}^i_nx^iy^{n-i}$$\n>\n> 总枚举次数为 $\\displaystyle\\sum_{i=0}^{2^n}2^{\\operatorname{popcount}i}$，其中 $\\operatorname{popcount}i$ 为二进制下的 $i$ 的 $1$ 的个数。\n>\n> $$\\begin{aligned}\\sum_{i=0}^{2^n}2^{\\operatorname{popcount}i}&=\\sum_{i=0}^n\\operatorname{C}^i_n 2^n\\\\&=\\sum_{i=0}^n\\operatorname{C}^i_n 2^n\\times1\\\\&=(2+1)^n\\\\&=3^n\\end{aligned}$$\n\n## 洛谷P3694\n\n[P3694 邦邦的大合唱站队](https://www.luogu.com.cn/problem/P3694)\n\n考虑状态 $dp_i$ 为已经排好的乐队为二进制下的 $i$ 的出列人数，用前缀和辅助动态规划。\n\n答案为 $dp_{2^m-1}$。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, dp[1 << 20], a[N], sum[N][20], sum1[1 << 20];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tmemset(dp, 0x3f, sizeof dp);\n\tdp[0] = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> a[i];\n\t\tfor (int j = 0; j < m; j++)\n\t\t\tsum[i][j] = sum[i - 1][j];\n\t\tsum[i][--a[i]]++;\n\t}\n\tfor (int i = 1; i < (1 << m); i++)\n\t\tfor (int j = 0; j < m; j++)\n\t\t\tif ((i >> j) & 1)\n\t\t\t{\n\t\t\t\tsum1[i] = sum1[i ^ (1 << j)] + sum[n][j];\n\t\t\t\tint l = sum1[i ^ (1 << j)] + 1, r = l + sum[n][j] - 1;\n\t\t\t\tdp[i] = min(dp[i], dp[i ^ (1 << j)] + sum[n][j] -\n\t\t\t\t\tsum[r][j] + sum[l - 1][j]);\n\t\t\t}\n\tcout << dp[(1 << m) - 1];\n\treturn 0;\n}\n```\n\n## 洛谷P10449\n\n[P10449 费解的开关](https://www.luogu.com.cn/problem/P10449)\n\n对于每一组数据，我们暴力还原，时间复杂度 $O(26^6n)=O(n)$，常数十分大。\n\n为什么不预处理呢？\n\n为了方便存储，我们状态压缩数组，使用 dfs/bfs 搜索。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint t, dx[] = { 0,0,0,1,-1 }, dy[] = { 0,1,-1,0,0 };\nmap<int, int>mp;\nint work(int z, int x, int y)\n{\n\tfor (int i = 0; i < 5; i++)\n\t{\n\t\tint nx = x + dx[i], ny = y + dy[i];\n\t\tif (nx < 6 && nx && ny < 6 && ny)\n\t\t\tz ^= 1 << ((nx - 1) * 5 + ny - 1);\n\t}\n\treturn z;\n}\nvoid dfs(int x, int y, int z = (1 << 25) - 1, int sum = 0)\n{\n\tif (sum > 6)\n\t\treturn;\n\tmp[z] = sum;\n\tif (x == 6)\n\t\treturn;\n\tdfs(x + !(y % 5), y % 5 + 1, z, sum);\n\tdfs(x + !(y % 5), y % 5 + 1, work(z, x, y), sum + 1);\n\treturn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tdfs(1, 1);\n\tcin >> t;\n\twhile (t--)\n\t{\n\t\tint sum = 0;\n\t\tfor (int i = 1; i <= 25; i++)\n\t\t{\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\tsum |= (c - '0') << (25 - i);\n\t\t}\n\t\tif (!mp.count(sum))\n\t\t\tcout << \"-1\\n\";\n\t\telse\n\t\t\tcout << mp[sum] << '\\n';\n\t}\n\treturn 0;\n}\n```","source":"_posts/状压DP（二）.md","raw":"---\ntitle: 状压DP（二）\ncategories:\n\t- [动态规划]\n\t- [状态压缩]\n\t- [算法]\n\t- [编程]\ntags:\n\t- [动态规划]\n\t- [状态压缩]\nhot: true\nnew: true\ndate: 2025-05-03 21:00:00\n---\n\n# 状压DP（二）\n\n## 洛谷P3092\n\n[P3092 [USACO13NOV] No Change G](https://www.luogu.com.cn/problem/P3092)\n\n这道题，我们一般定义 $dp_{i,j}$ 为硬币使用了二进制下的 $i$，付到第 $j$ 个人的最多剩下多少钱。\n\n不过 $2^{16}\\times 10^5=6,553,600,000$，会超过空间限制。\n\n我们发现“最多剩下多少钱”没有用，因为可以通过使用情况算出。\n\n定义新的状态 $dp_{i}$ 表示硬币使用了二进制下的 $i$ 的最多能付到的人，可以通过前缀和加二分优化计算。\n\n<!-- more -->\n\n答案需要枚举。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, dp[1 << 16], a[N], b[N], sum[N], sum1, ans = -1;\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++)\n\t\tcin >> a[i], sum1 += a[i];\n\tfor (int i = 1; i <= m; i++)\n\t\tcin >> b[i], sum[i] = sum[i - 1] + b[i];\n\tfor (int i = 1; i < (1 << n); i++)\n\t{\n\t\tint sum2 = 0;\n\t\tfor (int j = 0; j < n; j++)\n\t\t\tif ((i >> j) & 1)\n\t\t\t{\n\t\t\t\tint& tmp = dp[i ^ (1 << j)];\n\t\t\t\tint l = tmp - 1, r = m + 1;\n\t\t\t\twhile (l + 1 < r)\n\t\t\t\t{\n\t\t\t\t\tint mid = (l + r) >> 1;\n\t\t\t\t\tif (sum[mid] - sum[tmp] <= a[j])\n\t\t\t\t\t\tl = mid;\n\t\t\t\t\telse\n\t\t\t\t\t\tr = mid;\n\t\t\t\t}\n\t\t\t\tdp[i] = max(dp[i], l);\n\t\t\t\tsum2 += a[j];\n\t\t\t}\n\t\tif (dp[i] == m)\n\t\t\tans = max(ans, sum1 - sum2);\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```\n\n## 洛谷P5911\n\n[P5911 [POI 2004] PRZ - 洛谷](https://www.luogu.com.cn/problem/P5911)\n\n定义 $dp_i$ 表示已经过桥的队员为二进制下的 $i$ 的最小过桥时间。\n\n状态转移：\n\n```cpp\nfor (int i = 1; i < (1 << n); i++)\n    for (int j = 1; j < (1 << n); j++)\n        if ((i & j) == j && sum[j] <= m)\n            dp[i] = min(dp[i], dp[i ^ j] + maxi[j]);\n```\n\n答案为 $dp_{2^n-1}$。\n\n时间复杂度为 $O(4^n)$。\n\n等一等，$4^{16}=4,294,967,296\\gt \\text{一秒内可以跑的循环次数}$。\n\n考虑优化，如何不枚举无效状态（也就是只枚举子集）？\n\n```cpp\nfor (int i = 1; i < (1 << n); i++)\n    for (int j = i; j; j = (j - 1) & i)\n```\n\n为什么正确？\n\n可以通过模拟验证：\n\n> 设 $i={(114)}_{10}={(01110010)}_2$。\n>\n> 第二次枚举时， $j=\\left({(01110010)}_2-1\\right)\\operatorname{and}{(01110010)}_2={(01110000)}_2$。\n>\n> 第三次枚举时， $j=\\left({(01110000)}_2-1\\right)\\operatorname{and}{(01110010)}_2={(01101111)}_2\\operatorname{and}{(01110010)}_2={(01100010)}_2$。\n>\n> $\\cdots$\n>\n> 以此类推。\n>\n> 我们发现下枚举总是小于这一次的最大的有效状态。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 16 + 5;\nint n, m, dp[1 << 16], a[N], b[N], sum[1 << 16], maxi[1 << 16];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> m >> n;\n\tmemset(dp, 0x3f, sizeof dp);\n\tdp[0] = 0;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tcin >> a[i] >> b[i];\n\t\tfor (int j = 1; j < (1 << n); j++)\n\t\t\tif ((j >> i) & 1)\n\t\t\t\tsum[j] += b[i], maxi[j] = max(maxi[j], a[i]);\n\t}\n\tfor (int i = 1; i < (1 << n); i++)\n\t\tfor (int j = i; j; j = (j - 1) & i)\n\t\t\tif (sum[j] <= m)\n\t\t\t\tdp[i] = min(dp[i], dp[i ^ j] + maxi[j]);\n\tcout << dp[(1 << n) - 1];\n\treturn 0;\n}\n```\n\n时间复杂度 $O(3^n)$。\n\n为什么？\n\n证明方法一：\n\n> 每个队员有以下可以枚举的状态：\n>\n> 1. 没有；\n> 2. $i$ 中有；\n> 3. $i,j$ 中都有。\n>\n> 因此是 $O(3^n)$\n\n证明方法二：\n\n> 前置知识：\n>\n> > [二项式定理](https://oi-wiki.org/math/combinatorics/combination/#%E4%BA%8C%E9%A1%B9%E5%BC%8F%E5%AE%9A%E7%90%86)：\n> >\n> > $$\\displaystyle(x+y)^n=\\sum^n_{i=0}\\operatorname{C}^i_nx^iy^{n-i}$$\n>\n> 总枚举次数为 $\\displaystyle\\sum_{i=0}^{2^n}2^{\\operatorname{popcount}i}$，其中 $\\operatorname{popcount}i$ 为二进制下的 $i$ 的 $1$ 的个数。\n>\n> $$\\begin{aligned}\\sum_{i=0}^{2^n}2^{\\operatorname{popcount}i}&=\\sum_{i=0}^n\\operatorname{C}^i_n 2^n\\\\&=\\sum_{i=0}^n\\operatorname{C}^i_n 2^n\\times1\\\\&=(2+1)^n\\\\&=3^n\\end{aligned}$$\n\n## 洛谷P3694\n\n[P3694 邦邦的大合唱站队](https://www.luogu.com.cn/problem/P3694)\n\n考虑状态 $dp_i$ 为已经排好的乐队为二进制下的 $i$ 的出列人数，用前缀和辅助动态规划。\n\n答案为 $dp_{2^m-1}$。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, dp[1 << 20], a[N], sum[N][20], sum1[1 << 20];\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n >> m;\n\tmemset(dp, 0x3f, sizeof dp);\n\tdp[0] = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> a[i];\n\t\tfor (int j = 0; j < m; j++)\n\t\t\tsum[i][j] = sum[i - 1][j];\n\t\tsum[i][--a[i]]++;\n\t}\n\tfor (int i = 1; i < (1 << m); i++)\n\t\tfor (int j = 0; j < m; j++)\n\t\t\tif ((i >> j) & 1)\n\t\t\t{\n\t\t\t\tsum1[i] = sum1[i ^ (1 << j)] + sum[n][j];\n\t\t\t\tint l = sum1[i ^ (1 << j)] + 1, r = l + sum[n][j] - 1;\n\t\t\t\tdp[i] = min(dp[i], dp[i ^ (1 << j)] + sum[n][j] -\n\t\t\t\t\tsum[r][j] + sum[l - 1][j]);\n\t\t\t}\n\tcout << dp[(1 << m) - 1];\n\treturn 0;\n}\n```\n\n## 洛谷P10449\n\n[P10449 费解的开关](https://www.luogu.com.cn/problem/P10449)\n\n对于每一组数据，我们暴力还原，时间复杂度 $O(26^6n)=O(n)$，常数十分大。\n\n为什么不预处理呢？\n\n为了方便存储，我们状态压缩数组，使用 dfs/bfs 搜索。\n\n```cpp\n#include<bits/stdc++.h>\ntypedef int int32;\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 5;\nint t, dx[] = { 0,0,0,1,-1 }, dy[] = { 0,1,-1,0,0 };\nmap<int, int>mp;\nint work(int z, int x, int y)\n{\n\tfor (int i = 0; i < 5; i++)\n\t{\n\t\tint nx = x + dx[i], ny = y + dy[i];\n\t\tif (nx < 6 && nx && ny < 6 && ny)\n\t\t\tz ^= 1 << ((nx - 1) * 5 + ny - 1);\n\t}\n\treturn z;\n}\nvoid dfs(int x, int y, int z = (1 << 25) - 1, int sum = 0)\n{\n\tif (sum > 6)\n\t\treturn;\n\tmp[z] = sum;\n\tif (x == 6)\n\t\treturn;\n\tdfs(x + !(y % 5), y % 5 + 1, z, sum);\n\tdfs(x + !(y % 5), y % 5 + 1, work(z, x, y), sum + 1);\n\treturn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tdfs(1, 1);\n\tcin >> t;\n\twhile (t--)\n\t{\n\t\tint sum = 0;\n\t\tfor (int i = 1; i <= 25; i++)\n\t\t{\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\tsum |= (c - '0') << (25 - i);\n\t\t}\n\t\tif (!mp.count(sum))\n\t\t\tcout << \"-1\\n\";\n\t\telse\n\t\t\tcout << mp[sum] << '\\n';\n\t}\n\treturn 0;\n}\n```","slug":"状压DP（二）","published":1,"updated":"2025-09-18T07:47:08.005Z","comments":1,"layout":"post","photos":[],"_id":"cmfp5q6au000p3kv3dfchgs51","content":"<h1 id=\"状压dp二\"><a class=\"markdownIt-Anchor\" href=\"#状压dp二\"></a> 状压DP（二）</h1>\n<h2 id=\"洛谷p3092\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3092\"></a> 洛谷P3092</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P3092\">P3092 [USACO13NOV] No Change G</a></p>\n<p>这道题，我们一般定义 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 为硬币使用了二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>，付到第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 个人的最多剩下多少钱。</p>\n<p>不过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>16</mn></msup><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo>=</mo><mn>6</mn><mo separator=\"true\">,</mo><mn>553</mn><mo separator=\"true\">,</mo><mn>600</mn><mo separator=\"true\">,</mo><mn>000</mn></mrow><annotation encoding=\"application/x-tex\">2^{16}\\times 10^5=6,553,600,000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">5</span><span class=\"mord\">5</span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">6</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>，会超过空间限制。</p>\n<p>我们发现“最多剩下多少钱”没有用，因为可以通过使用情况算出。</p>\n<p>定义新的状态 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 表示硬币使用了二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的最多能付到的人，可以通过前缀和加二分优化计算。</p>\n<span id=\"more\"></span>\n<p>答案需要枚举。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dp[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">16</span>], a[N], b[N], sum[N], sum1, ans = <span class=\"number\">-1</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i], sum1 += a[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; b[i], sum[i] = sum[i - <span class=\"number\">1</span>] + b[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; n); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> sum2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((i &gt;&gt; j) &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span>&amp; tmp = dp[i ^ (<span class=\"number\">1</span> &lt;&lt; j)];</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> l = tmp - <span class=\"number\">1</span>, r = m + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (l + <span class=\"number\">1</span> &lt; r)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"type\">int</span> mid = (l + r) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (sum[mid] - sum[tmp] &lt;= a[j])</span><br><span class=\"line\">\t\t\t\t\t\tl = mid;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t\tr = mid;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tdp[i] = <span class=\"built_in\">max</span>(dp[i], l);</span><br><span class=\"line\">\t\t\t\tsum2 += a[j];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (dp[i] == m)</span><br><span class=\"line\">\t\t\tans = <span class=\"built_in\">max</span>(ans, sum1 - sum2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p5911\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p5911\"></a> 洛谷P5911</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P5911\">P5911 [POI 2004] PRZ - 洛谷</a></p>\n<p>定义 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">dp_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 表示已经过桥的队员为二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的最小过桥时间。</p>\n<p>状态转移：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; n); i++)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt; (<span class=\"number\">1</span> &lt;&lt; n); j++)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((i &amp; j) == j &amp;&amp; sum[j] &lt;= m)</span><br><span class=\"line\">            dp[i] = <span class=\"built_in\">min</span>(dp[i], dp[i ^ j] + maxi[j]);</span><br></pre></td></tr></table></figure>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{2^n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>时间复杂度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mn>4</mn><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(4^n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p>等一等，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>4</mn><mn>16</mn></msup><mo>=</mo><mn>4</mn><mo separator=\"true\">,</mo><mn>294</mn><mo separator=\"true\">,</mo><mn>967</mn><mo separator=\"true\">,</mo><mn>296</mn><mo>&gt;</mo><mtext>一秒内可以跑的循环次数</mtext></mrow><annotation encoding=\"application/x-tex\">4^{16}=4,294,967,296\\gt \\text{一秒内可以跑的循环次数}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mord\">9</span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">9</span><span class=\"mord\">6</span><span class=\"mord\">7</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mord\">9</span><span class=\"mord\">6</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">一秒内可以跑的循环次数</span></span></span></span></span>。</p>\n<p>考虑优化，如何不枚举无效状态（也就是只枚举子集）？</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; n); i++)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j; j = (j - <span class=\"number\">1</span>) &amp; i)</span><br></pre></td></tr></table></figure>\n<p>为什么正确？</p>\n<p>可以通过模拟验证：</p>\n<blockquote>\n<p>设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>=</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>114</mn><mo stretchy=\"false\">)</mo></mrow><mn>10</mn></msub><mo>=</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01110010</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">i={(114)}_{10}={(01110010)}_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">4</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>第二次枚举时， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo>=</mo><mrow><mo fence=\"true\">(</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01110010</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub><mo>−</mo><mn>1</mn><mo fence=\"true\">)</mo></mrow><mi mathvariant=\"normal\">and</mi><mo>⁡</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01110010</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub><mo>=</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01110000</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">j=\\left({(01110010)}_2-1\\right)\\operatorname{and}{(01110010)}_2={(01110000)}_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\">d</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>第三次枚举时， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo>=</mo><mrow><mo fence=\"true\">(</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01110000</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub><mo>−</mo><mn>1</mn><mo fence=\"true\">)</mo></mrow><mi mathvariant=\"normal\">and</mi><mo>⁡</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01110010</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub><mo>=</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01101111</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub><mi mathvariant=\"normal\">and</mi><mo>⁡</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01110010</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub><mo>=</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01100010</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">j=\\left({(01110000)}_2-1\\right)\\operatorname{and}{(01110010)}_2={(01101111)}_2\\operatorname{and}{(01110010)}_2={(01100010)}_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\">d</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\">d</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⋯</mo></mrow><annotation encoding=\"application/x-tex\">\\cdots</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.31em;vertical-align:0em;\"></span><span class=\"minner\">⋯</span></span></span></span></p>\n<p>以此类推。</p>\n<p>我们发现下枚举总是小于这一次的最大的有效状态。</p>\n</blockquote>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">16</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dp[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">16</span>], a[N], b[N], sum[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">16</span>], maxi[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">16</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; m &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dp);</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i] &gt;&gt; b[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt; (<span class=\"number\">1</span> &lt;&lt; n); j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((j &gt;&gt; i) &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\tsum[j] += b[i], maxi[j] = <span class=\"built_in\">max</span>(maxi[j], a[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; n); i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j; j = (j - <span class=\"number\">1</span>) &amp; i)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (sum[j] &lt;= m)</span><br><span class=\"line\">\t\t\t\tdp[i] = <span class=\"built_in\">min</span>(dp[i], dp[i ^ j] + maxi[j]);</span><br><span class=\"line\">\tcout &lt;&lt; dp[(<span class=\"number\">1</span> &lt;&lt; n) - <span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>时间复杂度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mn>3</mn><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(3^n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p>为什么？</p>\n<p>证明方法一：</p>\n<blockquote>\n<p>每个队员有以下可以枚举的状态：</p>\n<ol>\n<li>没有；</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 中有；</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">i,j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 中都有。</li>\n</ol>\n<p>因此是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mn>3</mn><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(3^n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<p>证明方法二：</p>\n<blockquote>\n<p>前置知识：</p>\n<blockquote>\n<p><a href=\"https://oi-wiki.org/math/combinatorics/combination/#%E4%BA%8C%E9%A1%B9%E5%BC%8F%E5%AE%9A%E7%90%86\">二项式定理</a>：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mi>y</mi><msup><mo stretchy=\"false\">)</mo><mi>n</mi></msup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msubsup><mo><mi mathvariant=\"normal\">C</mi><mo>⁡</mo></mo><mi>n</mi><mi>i</mi></msubsup><msup><mi>x</mi><mi>i</mi></msup><msup><mi>y</mi><mrow><mi>n</mi><mo>−</mo><mi>i</mi></mrow></msup></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle(x+y)^n=\\sum^n_{i=0}\\operatorname{C}^i_nx^iy^{n-i}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\"><span class=\"mord mathrm\">C</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.897894em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8746639999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.874664em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n</blockquote>\n<p>总枚举次数为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><msup><mn>2</mn><mi>n</mi></msup></munderover><msup><mn>2</mn><mrow><mi mathvariant=\"normal\">popcount</mi><mo>⁡</mo><mi>i</mi></mrow></msup></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle\\sum_{i=0}^{2^n}2^{\\operatorname{popcount}i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.144654em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8669850000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385428571428572em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.874664em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mord mathrm mtight\">p</span><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span><span class=\"mord mathrm mtight\">c</span><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">u</span><span class=\"mord mathrm mtight\">n</span><span class=\"mord mathrm mtight\">t</span></span><span class=\"mspace mtight\" style=\"margin-right:0.19516666666666668em;\"></span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span></span>，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">popcount</mi><mo>⁡</mo><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">\\operatorname{popcount}i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">p</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">p</span><span class=\"mord mathrm\">c</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">u</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\">t</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 为二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 的个数。</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><msup><mn>2</mn><mi>n</mi></msup></munderover><msup><mn>2</mn><mrow><mi mathvariant=\"normal\">popcount</mi><mo>⁡</mo><mi>i</mi></mrow></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msubsup><mo><mi mathvariant=\"normal\">C</mi><mo>⁡</mo></mo><mi>n</mi><mi>i</mi></msubsup><msup><mn>2</mn><mi>n</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msubsup><mo><mi mathvariant=\"normal\">C</mi><mo>⁡</mo></mo><mi>n</mi><mi>i</mi></msubsup><msup><mn>2</mn><mi>n</mi></msup><mo>×</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mo>+</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mi>n</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mn>3</mn><mi>n</mi></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\\sum_{i=0}^{2^n}2^{\\operatorname{popcount}i}&amp;=\\sum_{i=0}^n\\operatorname{C}^i_n 2^n\\\\&amp;=\\sum_{i=0}^n\\operatorname{C}^i_n 2^n\\times1\\\\&amp;=(2+1)^n\\\\&amp;=3^n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:9.673720000000001em;vertical-align:-4.586860000000001em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.086860000000001em;\"><span style=\"top:-7.086860000000001em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8669850000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385428571428572em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.874664em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mord mathrm mtight\">p</span><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span><span class=\"mord mathrm mtight\">c</span><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">u</span><span class=\"mord mathrm mtight\">n</span><span class=\"mord mathrm mtight\">t</span></span><span class=\"mspace mtight\" style=\"margin-right:0.19516666666666668em;\"></span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.857794em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.440125em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"></span></span><span style=\"top:0.0598749999999999em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.586860000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.086860000000001em;\"><span style=\"top:-7.086860000000001em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\"><span class=\"mord mathrm\">C</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.897894em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.857794em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\"><span class=\"mord mathrm\">C</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.897894em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-1.440125em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span><span style=\"top:0.0598749999999999em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.586860000000001em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</blockquote>\n<h2 id=\"洛谷p3694\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3694\"></a> 洛谷P3694</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P3694\">P3694 邦邦的大合唱站队</a></p>\n<p>考虑状态 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">dp_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为已经排好的乐队为二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的出列人数，用前缀和辅助动态规划。</p>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><msup><mn>2</mn><mi>m</mi></msup><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{2^m-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dp[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">20</span>], a[N], sum[N][<span class=\"number\">20</span>], sum1[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">20</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dp);</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">\t\t\tsum[i][j] = sum[i - <span class=\"number\">1</span>][j];</span><br><span class=\"line\">\t\tsum[i][--a[i]]++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; m); i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((i &gt;&gt; j) &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tsum1[i] = sum1[i ^ (<span class=\"number\">1</span> &lt;&lt; j)] + sum[n][j];</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> l = sum1[i ^ (<span class=\"number\">1</span> &lt;&lt; j)] + <span class=\"number\">1</span>, r = l + sum[n][j] - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\tdp[i] = <span class=\"built_in\">min</span>(dp[i], dp[i ^ (<span class=\"number\">1</span> &lt;&lt; j)] + sum[n][j] -</span><br><span class=\"line\">\t\t\t\t\tsum[r][j] + sum[l - <span class=\"number\">1</span>][j]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; dp[(<span class=\"number\">1</span> &lt;&lt; m) - <span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p10449\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p10449\"></a> 洛谷P10449</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P10449\">P10449 费解的开关</a></p>\n<p>对于每一组数据，我们暴力还原，时间复杂度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>2</mn><msup><mn>6</mn><mn>6</mn></msup><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(26^6n)=O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord\">6</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>，常数十分大。</p>\n<p>为什么不预处理呢？</p>\n<p>为了方便存储，我们状态压缩数组，使用 dfs/bfs 搜索。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> t, dx[] = &#123; <span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">-1</span> &#125;, dy[] = &#123; <span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span> &#125;;</span><br><span class=\"line\">map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;mp;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">work</span><span class=\"params\">(<span class=\"type\">int</span> z, <span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> nx = x + dx[i], ny = y + dy[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (nx &lt; <span class=\"number\">6</span> &amp;&amp; nx &amp;&amp; ny &lt; <span class=\"number\">6</span> &amp;&amp; ny)</span><br><span class=\"line\">\t\t\tz ^= <span class=\"number\">1</span> &lt;&lt; ((nx - <span class=\"number\">1</span>) * <span class=\"number\">5</span> + ny - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> z;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">int</span> z = (<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">25</span>) - <span class=\"number\">1</span>, <span class=\"type\">int</span> sum = <span class=\"number\">0</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (sum &gt; <span class=\"number\">6</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\tmp[z] = sum;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x == <span class=\"number\">6</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(x + !(y % <span class=\"number\">5</span>), y % <span class=\"number\">5</span> + <span class=\"number\">1</span>, z, sum);</span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(x + !(y % <span class=\"number\">5</span>), y % <span class=\"number\">5</span> + <span class=\"number\">1</span>, <span class=\"built_in\">work</span>(z, x, y), sum + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\tcin &gt;&gt; t;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (t--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">25</span>; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">char</span> c;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; c;</span><br><span class=\"line\">\t\t\tsum |= (c - <span class=\"string\">&#x27;0&#x27;</span>) &lt;&lt; (<span class=\"number\">25</span> - i);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!mp.<span class=\"built_in\">count</span>(sum))</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"string\">&quot;-1\\n&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tcout &lt;&lt; mp[sum] &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"<h1 id=\"状压dp二\"><a class=\"markdownIt-Anchor\" href=\"#状压dp二\"></a> 状压DP（二）</h1>\n<h2 id=\"洛谷p3092\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3092\"></a> 洛谷P3092</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P3092\">P3092 [USACO13NOV] No Change G</a></p>\n<p>这道题，我们一般定义 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 为硬币使用了二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>，付到第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 个人的最多剩下多少钱。</p>\n<p>不过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>16</mn></msup><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo>=</mo><mn>6</mn><mo separator=\"true\">,</mo><mn>553</mn><mo separator=\"true\">,</mo><mn>600</mn><mo separator=\"true\">,</mo><mn>000</mn></mrow><annotation encoding=\"application/x-tex\">2^{16}\\times 10^5=6,553,600,000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">5</span><span class=\"mord\">5</span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">6</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>，会超过空间限制。</p>\n<p>我们发现“最多剩下多少钱”没有用，因为可以通过使用情况算出。</p>\n<p>定义新的状态 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">dp_{i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 表示硬币使用了二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的最多能付到的人，可以通过前缀和加二分优化计算。</p>","more":"<p>答案需要枚举。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dp[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">16</span>], a[N], b[N], sum[N], sum1, ans = <span class=\"number\">-1</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i], sum1 += a[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; b[i], sum[i] = sum[i - <span class=\"number\">1</span>] + b[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; n); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> sum2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((i &gt;&gt; j) &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span>&amp; tmp = dp[i ^ (<span class=\"number\">1</span> &lt;&lt; j)];</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> l = tmp - <span class=\"number\">1</span>, r = m + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (l + <span class=\"number\">1</span> &lt; r)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"type\">int</span> mid = (l + r) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (sum[mid] - sum[tmp] &lt;= a[j])</span><br><span class=\"line\">\t\t\t\t\t\tl = mid;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t\tr = mid;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tdp[i] = <span class=\"built_in\">max</span>(dp[i], l);</span><br><span class=\"line\">\t\t\t\tsum2 += a[j];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (dp[i] == m)</span><br><span class=\"line\">\t\t\tans = <span class=\"built_in\">max</span>(ans, sum1 - sum2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p5911\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p5911\"></a> 洛谷P5911</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P5911\">P5911 [POI 2004] PRZ - 洛谷</a></p>\n<p>定义 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">dp_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 表示已经过桥的队员为二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的最小过桥时间。</p>\n<p>状态转移：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; n); i++)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt; (<span class=\"number\">1</span> &lt;&lt; n); j++)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((i &amp; j) == j &amp;&amp; sum[j] &lt;= m)</span><br><span class=\"line\">            dp[i] = <span class=\"built_in\">min</span>(dp[i], dp[i ^ j] + maxi[j]);</span><br></pre></td></tr></table></figure>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{2^n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>时间复杂度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mn>4</mn><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(4^n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p>等一等，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>4</mn><mn>16</mn></msup><mo>=</mo><mn>4</mn><mo separator=\"true\">,</mo><mn>294</mn><mo separator=\"true\">,</mo><mn>967</mn><mo separator=\"true\">,</mo><mn>296</mn><mo>&gt;</mo><mtext>一秒内可以跑的循环次数</mtext></mrow><annotation encoding=\"application/x-tex\">4^{16}=4,294,967,296\\gt \\text{一秒内可以跑的循环次数}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mord\">9</span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">9</span><span class=\"mord\">6</span><span class=\"mord\">7</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mord\">9</span><span class=\"mord\">6</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">一秒内可以跑的循环次数</span></span></span></span></span>。</p>\n<p>考虑优化，如何不枚举无效状态（也就是只枚举子集）？</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; n); i++)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j; j = (j - <span class=\"number\">1</span>) &amp; i)</span><br></pre></td></tr></table></figure>\n<p>为什么正确？</p>\n<p>可以通过模拟验证：</p>\n<blockquote>\n<p>设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>=</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>114</mn><mo stretchy=\"false\">)</mo></mrow><mn>10</mn></msub><mo>=</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01110010</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">i={(114)}_{10}={(01110010)}_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">4</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>第二次枚举时， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo>=</mo><mrow><mo fence=\"true\">(</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01110010</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub><mo>−</mo><mn>1</mn><mo fence=\"true\">)</mo></mrow><mi mathvariant=\"normal\">and</mi><mo>⁡</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01110010</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub><mo>=</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01110000</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">j=\\left({(01110010)}_2-1\\right)\\operatorname{and}{(01110010)}_2={(01110000)}_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\">d</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>第三次枚举时， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo>=</mo><mrow><mo fence=\"true\">(</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01110000</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub><mo>−</mo><mn>1</mn><mo fence=\"true\">)</mo></mrow><mi mathvariant=\"normal\">and</mi><mo>⁡</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01110010</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub><mo>=</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01101111</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub><mi mathvariant=\"normal\">and</mi><mo>⁡</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01110010</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub><mo>=</mo><msub><mrow><mo stretchy=\"false\">(</mo><mn>01100010</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">j=\\left({(01110000)}_2-1\\right)\\operatorname{and}{(01110010)}_2={(01101111)}_2\\operatorname{and}{(01110010)}_2={(01100010)}_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\">d</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\">d</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⋯</mo></mrow><annotation encoding=\"application/x-tex\">\\cdots</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.31em;vertical-align:0em;\"></span><span class=\"minner\">⋯</span></span></span></span></p>\n<p>以此类推。</p>\n<p>我们发现下枚举总是小于这一次的最大的有效状态。</p>\n</blockquote>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">16</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dp[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">16</span>], a[N], b[N], sum[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">16</span>], maxi[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">16</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; m &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dp);</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i] &gt;&gt; b[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt; (<span class=\"number\">1</span> &lt;&lt; n); j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((j &gt;&gt; i) &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\tsum[j] += b[i], maxi[j] = <span class=\"built_in\">max</span>(maxi[j], a[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; n); i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j; j = (j - <span class=\"number\">1</span>) &amp; i)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (sum[j] &lt;= m)</span><br><span class=\"line\">\t\t\t\tdp[i] = <span class=\"built_in\">min</span>(dp[i], dp[i ^ j] + maxi[j]);</span><br><span class=\"line\">\tcout &lt;&lt; dp[(<span class=\"number\">1</span> &lt;&lt; n) - <span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>时间复杂度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mn>3</mn><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(3^n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p>为什么？</p>\n<p>证明方法一：</p>\n<blockquote>\n<p>每个队员有以下可以枚举的状态：</p>\n<ol>\n<li>没有；</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 中有；</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">i,j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 中都有。</li>\n</ol>\n<p>因此是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mn>3</mn><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(3^n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<p>证明方法二：</p>\n<blockquote>\n<p>前置知识：</p>\n<blockquote>\n<p><a href=\"https://oi-wiki.org/math/combinatorics/combination/#%E4%BA%8C%E9%A1%B9%E5%BC%8F%E5%AE%9A%E7%90%86\">二项式定理</a>：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mi>y</mi><msup><mo stretchy=\"false\">)</mo><mi>n</mi></msup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msubsup><mo><mi mathvariant=\"normal\">C</mi><mo>⁡</mo></mo><mi>n</mi><mi>i</mi></msubsup><msup><mi>x</mi><mi>i</mi></msup><msup><mi>y</mi><mrow><mi>n</mi><mo>−</mo><mi>i</mi></mrow></msup></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle(x+y)^n=\\sum^n_{i=0}\\operatorname{C}^i_nx^iy^{n-i}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\"><span class=\"mord mathrm\">C</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.897894em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8746639999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.874664em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n</blockquote>\n<p>总枚举次数为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><msup><mn>2</mn><mi>n</mi></msup></munderover><msup><mn>2</mn><mrow><mi mathvariant=\"normal\">popcount</mi><mo>⁡</mo><mi>i</mi></mrow></msup></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle\\sum_{i=0}^{2^n}2^{\\operatorname{popcount}i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.144654em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8669850000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385428571428572em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.874664em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mord mathrm mtight\">p</span><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span><span class=\"mord mathrm mtight\">c</span><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">u</span><span class=\"mord mathrm mtight\">n</span><span class=\"mord mathrm mtight\">t</span></span><span class=\"mspace mtight\" style=\"margin-right:0.19516666666666668em;\"></span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span></span>，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">popcount</mi><mo>⁡</mo><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">\\operatorname{popcount}i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">p</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">p</span><span class=\"mord mathrm\">c</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">u</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\">t</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 为二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 的个数。</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><msup><mn>2</mn><mi>n</mi></msup></munderover><msup><mn>2</mn><mrow><mi mathvariant=\"normal\">popcount</mi><mo>⁡</mo><mi>i</mi></mrow></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msubsup><mo><mi mathvariant=\"normal\">C</mi><mo>⁡</mo></mo><mi>n</mi><mi>i</mi></msubsup><msup><mn>2</mn><mi>n</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msubsup><mo><mi mathvariant=\"normal\">C</mi><mo>⁡</mo></mo><mi>n</mi><mi>i</mi></msubsup><msup><mn>2</mn><mi>n</mi></msup><mo>×</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mo>+</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mi>n</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mn>3</mn><mi>n</mi></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\\sum_{i=0}^{2^n}2^{\\operatorname{popcount}i}&amp;=\\sum_{i=0}^n\\operatorname{C}^i_n 2^n\\\\&amp;=\\sum_{i=0}^n\\operatorname{C}^i_n 2^n\\times1\\\\&amp;=(2+1)^n\\\\&amp;=3^n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:9.673720000000001em;vertical-align:-4.586860000000001em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.086860000000001em;\"><span style=\"top:-7.086860000000001em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8669850000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385428571428572em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.874664em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mord mathrm mtight\">p</span><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span><span class=\"mord mathrm mtight\">c</span><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">u</span><span class=\"mord mathrm mtight\">n</span><span class=\"mord mathrm mtight\">t</span></span><span class=\"mspace mtight\" style=\"margin-right:0.19516666666666668em;\"></span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.857794em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.440125em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"></span></span><span style=\"top:0.0598749999999999em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.586860000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.086860000000001em;\"><span style=\"top:-7.086860000000001em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\"><span class=\"mord mathrm\">C</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.897894em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.857794em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\"><span class=\"mord mathrm\">C</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.897894em;\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-1.440125em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span><span style=\"top:0.0598749999999999em;\"><span class=\"pstrut\" style=\"height:3.8669850000000006em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.586860000000001em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</blockquote>\n<h2 id=\"洛谷p3694\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p3694\"></a> 洛谷P3694</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P3694\">P3694 邦邦的大合唱站队</a></p>\n<p>考虑状态 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">dp_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为已经排好的乐队为二进制下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的出列人数，用前缀和辅助动态规划。</p>\n<p>答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><msup><mn>2</mn><mi>m</mi></msup><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">dp_{2^m-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, dp[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">20</span>], a[N], sum[N][<span class=\"number\">20</span>], sum1[<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">20</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dp);</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">\t\t\tsum[i][j] = sum[i - <span class=\"number\">1</span>][j];</span><br><span class=\"line\">\t\tsum[i][--a[i]]++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; m); i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((i &gt;&gt; j) &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tsum1[i] = sum1[i ^ (<span class=\"number\">1</span> &lt;&lt; j)] + sum[n][j];</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> l = sum1[i ^ (<span class=\"number\">1</span> &lt;&lt; j)] + <span class=\"number\">1</span>, r = l + sum[n][j] - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\tdp[i] = <span class=\"built_in\">min</span>(dp[i], dp[i ^ (<span class=\"number\">1</span> &lt;&lt; j)] + sum[n][j] -</span><br><span class=\"line\">\t\t\t\t\tsum[r][j] + sum[l - <span class=\"number\">1</span>][j]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; dp[(<span class=\"number\">1</span> &lt;&lt; m) - <span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"洛谷p10449\"><a class=\"markdownIt-Anchor\" href=\"#洛谷p10449\"></a> 洛谷P10449</h2>\n<p><a href=\"https://www.luogu.com.cn/problem/P10449\">P10449 费解的开关</a></p>\n<p>对于每一组数据，我们暴力还原，时间复杂度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>2</mn><msup><mn>6</mn><mn>6</mn></msup><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(26^6n)=O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord\">6</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>，常数十分大。</p>\n<p>为什么不预处理呢？</p>\n<p>为了方便存储，我们状态压缩数组，使用 dfs/bfs 搜索。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> int32;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> t, dx[] = &#123; <span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">-1</span> &#125;, dy[] = &#123; <span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span> &#125;;</span><br><span class=\"line\">map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;mp;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">work</span><span class=\"params\">(<span class=\"type\">int</span> z, <span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> nx = x + dx[i], ny = y + dy[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (nx &lt; <span class=\"number\">6</span> &amp;&amp; nx &amp;&amp; ny &lt; <span class=\"number\">6</span> &amp;&amp; ny)</span><br><span class=\"line\">\t\t\tz ^= <span class=\"number\">1</span> &lt;&lt; ((nx - <span class=\"number\">1</span>) * <span class=\"number\">5</span> + ny - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> z;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">int</span> z = (<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">25</span>) - <span class=\"number\">1</span>, <span class=\"type\">int</span> sum = <span class=\"number\">0</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (sum &gt; <span class=\"number\">6</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\tmp[z] = sum;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x == <span class=\"number\">6</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(x + !(y % <span class=\"number\">5</span>), y % <span class=\"number\">5</span> + <span class=\"number\">1</span>, z, sum);</span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(x + !(y % <span class=\"number\">5</span>), y % <span class=\"number\">5</span> + <span class=\"number\">1</span>, <span class=\"built_in\">work</span>(z, x, y), sum + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>), cout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\tcin &gt;&gt; t;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (t--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">25</span>; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">char</span> c;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; c;</span><br><span class=\"line\">\t\t\tsum |= (c - <span class=\"string\">&#x27;0&#x27;</span>) &lt;&lt; (<span class=\"number\">25</span> - i);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!mp.<span class=\"built_in\">count</span>(sum))</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"string\">&quot;-1\\n&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tcout &lt;&lt; mp[sum] &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cmfp5q6aj000d3kv3e1w912cx","category_id":"cmfp5q6ah000b3kv3apsb178w","_id":"cmfp5q6b7001p3kv32whxfkpy"},{"post_id":"cmfp5q6aj000d3kv3e1w912cx","category_id":"cmfp5q6av000r3kv32dk8b9kd","_id":"cmfp5q6b8001r3kv31r92cg3h"},{"post_id":"cmfp5q6aj000d3kv3e1w912cx","category_id":"cmfp5q6ay000w3kv38zux3l7r","_id":"cmfp5q6b8001s3kv3ge0k53lg"},{"post_id":"cmfp5q6aj000d3kv3e1w912cx","category_id":"cmfp5q6b6001m3kv38k5aahkj","_id":"cmfp5q6b9001u3kv3bdpidcd3"},{"post_id":"cmfp5q6a800053kv30xyi3uob","category_id":"cmfp5q6ah000b3kv3apsb178w","_id":"cmfp5q6b9001v3kv3aaw6eb84"},{"post_id":"cmfp5q6a800053kv30xyi3uob","category_id":"cmfp5q6av000r3kv32dk8b9kd","_id":"cmfp5q6ba001x3kv3hl358ned"},{"post_id":"cmfp5q6a800053kv30xyi3uob","category_id":"cmfp5q6ay000w3kv38zux3l7r","_id":"cmfp5q6ba001y3kv31oxucr4o"},{"post_id":"cmfp5q6a800053kv30xyi3uob","category_id":"cmfp5q6b6001m3kv38k5aahkj","_id":"cmfp5q6ba001z3kv39m7i7dhu"},{"post_id":"cmfp5q6ao000j3kv31w87c5rl","category_id":"cmfp5q6ay000w3kv38zux3l7r","_id":"cmfp5q6bb00213kv30b0559gc"},{"post_id":"cmfp5q6ao000j3kv31w87c5rl","category_id":"cmfp5q6b7001o3kv3ckq994ws","_id":"cmfp5q6bb00223kv37jz94eca"},{"post_id":"cmfp5q6ao000j3kv31w87c5rl","category_id":"cmfp5q6av000r3kv32dk8b9kd","_id":"cmfp5q6bc00243kv3ewtw21n9"},{"post_id":"cmfp5q6ao000j3kv31w87c5rl","category_id":"cmfp5q6ah000b3kv3apsb178w","_id":"cmfp5q6bc00253kv34acnc022"},{"post_id":"cmfp5q6aa00073kv36dfg3x7j","category_id":"cmfp5q6ah000b3kv3apsb178w","_id":"cmfp5q6bc00273kv34y316zif"},{"post_id":"cmfp5q6aa00073kv36dfg3x7j","category_id":"cmfp5q6av000r3kv32dk8b9kd","_id":"cmfp5q6bc00283kv38vjxg8u9"},{"post_id":"cmfp5q6aa00073kv36dfg3x7j","category_id":"cmfp5q6b9001w3kv31d8vemjl","_id":"cmfp5q6bd002a3kv3bgop9eff"},{"post_id":"cmfp5q6aq000k3kv3axh19zx6","category_id":"cmfp5q6b000143kv30yckgepb","_id":"cmfp5q6bd002b3kv3eukahy8u"},{"post_id":"cmfp5q6aq000k3kv3axh19zx6","category_id":"cmfp5q6b8001t3kv31ui56oy6","_id":"cmfp5q6bd002c3kv3cspqfyzc"},{"post_id":"cmfp5q6aq000k3kv3axh19zx6","category_id":"cmfp5q6av000r3kv32dk8b9kd","_id":"cmfp5q6be002d3kv36m5mf7pg"},{"post_id":"cmfp5q6aq000k3kv3axh19zx6","category_id":"cmfp5q6ah000b3kv3apsb178w","_id":"cmfp5q6be002e3kv3app5fceb"},{"post_id":"cmfp5q6at000n3kv3hzi8c8yp","category_id":"cmfp5q6ah000b3kv3apsb178w","_id":"cmfp5q6be002f3kv3bgl6e1ig"},{"post_id":"cmfp5q6at000n3kv3hzi8c8yp","category_id":"cmfp5q6av000r3kv32dk8b9kd","_id":"cmfp5q6be002g3kv3b6z7cooa"},{"post_id":"cmfp5q6at000n3kv3hzi8c8yp","category_id":"cmfp5q6bb00233kv3hwmm5vxd","_id":"cmfp5q6be002h3kv3gdm90mmj"},{"post_id":"cmfp5q6au000p3kv3dfchgs51","category_id":"cmfp5q6ay000w3kv38zux3l7r","_id":"cmfp5q6be002i3kv33sf43e6z"},{"post_id":"cmfp5q6au000p3kv3dfchgs51","category_id":"cmfp5q6b7001o3kv3ckq994ws","_id":"cmfp5q6be002j3kv35hg23g4t"},{"post_id":"cmfp5q6au000p3kv3dfchgs51","category_id":"cmfp5q6av000r3kv32dk8b9kd","_id":"cmfp5q6be002k3kv31uq783cg"},{"post_id":"cmfp5q6au000p3kv3dfchgs51","category_id":"cmfp5q6ah000b3kv3apsb178w","_id":"cmfp5q6be002l3kv383rdfln0"},{"post_id":"cmfp5q6ag000a3kv385ae77y4","category_id":"cmfp5q6ah000b3kv3apsb178w","_id":"cmfp5q6be002m3kv3e6e454bh"},{"post_id":"cmfp5q6ag000a3kv385ae77y4","category_id":"cmfp5q6av000r3kv32dk8b9kd","_id":"cmfp5q6bf002n3kv37mla90k6"},{"post_id":"cmfp5q6ag000a3kv385ae77y4","category_id":"cmfp5q6ay000w3kv38zux3l7r","_id":"cmfp5q6bf002o3kv3asndhd42"},{"post_id":"cmfp5q6ag000a3kv385ae77y4","category_id":"cmfp5q6b6001m3kv38k5aahkj","_id":"cmfp5q6bf002p3kv3fv2a6axc"},{"post_id":"cmfp5q6al000f3kv3es9xccpl","category_id":"cmfp5q6ah000b3kv3apsb178w","_id":"cmfp5q6bf002q3kv33s9aakmi"},{"post_id":"cmfp5q6al000f3kv3es9xccpl","category_id":"cmfp5q6av000r3kv32dk8b9kd","_id":"cmfp5q6bg002r3kv31ybtcy2r"},{"post_id":"cmfp5q6al000f3kv3es9xccpl","category_id":"cmfp5q6b7001q3kv31hjxdute","_id":"cmfp5q6bg002s3kv33x803vwp"},{"post_id":"cmfp5q6al000f3kv3es9xccpl","category_id":"cmfp5q6bc00293kv3g1wj2z7h","_id":"cmfp5q6bg002t3kv3he0jdb0q"}],"PostTag":[{"post_id":"cmfp5q6a800053kv30xyi3uob","tag_id":"cmfp5q6ad00083kv3dpc4e138","_id":"cmfp5q6au000o3kv35a3v8foq"},{"post_id":"cmfp5q6a800053kv30xyi3uob","tag_id":"cmfp5q6am000g3kv32nvucm99","_id":"cmfp5q6av000q3kv34yk81tpe"},{"post_id":"cmfp5q6aa00073kv36dfg3x7j","tag_id":"cmfp5q6ar000m3kv31un5ez01","_id":"cmfp5q6ax000t3kv366968227"},{"post_id":"cmfp5q6ag000a3kv385ae77y4","tag_id":"cmfp5q6ad00083kv3dpc4e138","_id":"cmfp5q6az000y3kv3h05u7bcg"},{"post_id":"cmfp5q6ag000a3kv385ae77y4","tag_id":"cmfp5q6am000g3kv32nvucm99","_id":"cmfp5q6az000z3kv36beq14cr"},{"post_id":"cmfp5q6aj000d3kv3e1w912cx","tag_id":"cmfp5q6ad00083kv3dpc4e138","_id":"cmfp5q6b000123kv3fu2s2el0"},{"post_id":"cmfp5q6aj000d3kv3e1w912cx","tag_id":"cmfp5q6am000g3kv32nvucm99","_id":"cmfp5q6b000133kv331ns1i7t"},{"post_id":"cmfp5q6al000f3kv3es9xccpl","tag_id":"cmfp5q6az00103kv39qsbfl4j","_id":"cmfp5q6b100163kv3eah6ho17"},{"post_id":"cmfp5q6ao000j3kv31w87c5rl","tag_id":"cmfp5q6ad00083kv3dpc4e138","_id":"cmfp5q6b200193kv31u8372tq"},{"post_id":"cmfp5q6ao000j3kv31w87c5rl","tag_id":"cmfp5q6b100153kv36cgjarkj","_id":"cmfp5q6b2001a3kv3a5q9hjr9"},{"post_id":"cmfp5q6aq000k3kv3axh19zx6","tag_id":"cmfp5q6b200183kv3ezot7y5o","_id":"cmfp5q6b5001f3kv39i2a8o3b"},{"post_id":"cmfp5q6aq000k3kv3axh19zx6","tag_id":"cmfp5q6b3001c3kv38vaah2pi","_id":"cmfp5q6b5001h3kv303ge6z0a"},{"post_id":"cmfp5q6at000n3kv3hzi8c8yp","tag_id":"cmfp5q6b4001e3kv31d8125js","_id":"cmfp5q6b6001j3kv3175sdlm4"},{"post_id":"cmfp5q6au000p3kv3dfchgs51","tag_id":"cmfp5q6ad00083kv3dpc4e138","_id":"cmfp5q6b6001l3kv37d36brvh"},{"post_id":"cmfp5q6au000p3kv3dfchgs51","tag_id":"cmfp5q6b100153kv36cgjarkj","_id":"cmfp5q6b6001n3kv3dkyb73by"}],"Tag":[{"name":"动态规划","_id":"cmfp5q6ad00083kv3dpc4e138"},{"name":"区间dp","_id":"cmfp5q6am000g3kv32nvucm99"},{"name":"二分图","_id":"cmfp5q6ar000m3kv31un5ez01"},{"name":"平衡树","_id":"cmfp5q6az00103kv39qsbfl4j"},{"name":"状态压缩","_id":"cmfp5q6b100153kv36cgjarkj"},{"name":"网络流","_id":"cmfp5q6b200183kv3ezot7y5o"},{"name":"最小割问题","_id":"cmfp5q6b3001c3kv38vaah2pi"},{"name":"连通性问题","_id":"cmfp5q6b4001e3kv31d8125js"}]}}